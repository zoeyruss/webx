/*! dia-theme - v0.8.12 - 2019-09-17 
 * Copyright (c) 2019 Olivier Hug <oh@baenziger-hug.com> */

!function r(e, n, t) {
    function o(i, f) {
        if (!n[i]) {
            if (!e[i]) {
                var c = "function" == typeof require && require;
                if (!f && c)
                    return c(i, !0);
                if (u)
                    return u(i, !0);
                var a = new Error("Cannot find module '" + i + "'");
                throw a.code = "MODULE_NOT_FOUND", a
            }
            var p = n[i] = {
                exports: {}
            };
            e[i][0].call(p.exports, function(r) {
                return o(e[i][1][r] || r)
            }, p, p.exports, r, e, n, t)
        }
        return n[i].exports
    }
    for (var u = "function" == typeof require && require, i = 0; i < t.length; i++)
        o(t[i]);
    return o
}({
    1: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.default = void 0, require("lazysizes"), require("lazysizes/plugins/respimg/ls.respimg.js");
        var Components = function(obj) {
                if (obj && obj.__esModule)
                    return obj;
                var cache = _getRequireWildcardCache();
                if (cache && cache.has(obj))
                    return cache.get(obj);
                var newObj = {};
                if (null != obj) {
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj)
                        if (Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key]
                        }
                }
                newObj.default = obj, cache && cache.set(obj, newObj);
                return newObj
            }(require("./components")),
            _jquery = _interopRequireDefault(require("jquery")),
            _constants = _interopRequireDefault(require("./constants")),
            _eventemitter = _interopRequireDefault(require("eventemitter3")),
            _fontfaceobserver = _interopRequireDefault(require("fontfaceobserver")),
            _fitty = _interopRequireDefault(require("./utils/fitty.module")),
            _objectFitImages = _interopRequireDefault(require("object-fit-images"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        function _getRequireWildcardCache() {
            if ("function" != typeof WeakMap)
                return null;
            var cache = new WeakMap;
            return _getRequireWildcardCache = function() {
                return cache
            }, cache
        }
        var App = function() {
            function App(components) {
                void 0 === components && (components = []);
                var i = 0,
                    total = components.length,
                    Klass = null,
                    instance = null;
                for (this.previousUrls = [window.location.href], this.components = [], this.ev = new _eventemitter.default, this.fallbackObjectFitOrSrcset(), this.runFitty(), this.bindObserveFonts(), this.bindResize(); i < total; i++)
                    if ("function" == typeof (Klass = Components[components[i].name]))
                        try {
                            instance = new Klass(components[i].ctx, this.ev), this.components.push({
                                name: components[i].name,
                                instance: instance
                            })
                        } catch (e) {
                            _constants.default.DEBUG && window.console.error(e);
                            continue
                        }
            }
            var _proto = App.prototype;
            return _proto.fallbackObjectFitOrSrcset = function() {
                window.Modernizr.objectfit && window.Modernizr.srcset || (0, _objectFitImages.default)()
            }, _proto.runFitty = function() {
                var _this = this;
                this.fitty = (0, _fitty.default)(".js-fitty", {
                    minSize: 5,
                    maxSize: 15e3,
                    multiLine: !1,
                    observeMutations: !1
                }), 0 < this.fitty.length && this.fitty[this.fitty.length - 1].element.addEventListener("fit", function() {
                    return _this.ev.emit(_constants.default.EVENTS.FITTY_RESIZE_DONE)
                });
                window.setTimeout(function() {
                    return _fitty.default.fitAll()
                }, 80)
            }, _proto.bindObserveFonts = function() {
                new _fontfaceobserver.default("Rand Medium").load().then(function() {
                    return _fitty.default.fitAll()
                })
            }, _proto.bindResize = function() {
                var _this2 = this,
                    resizeTimeout = null;
                (0, _jquery.default)(window).bind("resize", function() {
                    var winWidth = (0, _jquery.default)(window).width(),
                        winHeight = (0, _jquery.default)(window).height();
                    _this2.ev.emit(_constants.default.EVENTS.RESIZE, winWidth, winHeight), resizeTimeout && clearTimeout(resizeTimeout), resizeTimeout = setTimeout(function() {
                        _this2.ev.emit(_constants.default.EVENTS.RESIZE_DEBOUNCED, winWidth, winHeight)
                    }, 200)
                })
            }, _proto.run = function() {
                (0, _jquery.default)(window).trigger("resize"), window.setTimeout(function() {
                    return _fitty.default.fitAll()
                }, 200)
            }, App
        }();
        exports.default = App
    }, {
        "./components": 4,
        "./constants": 7,
        "./utils/fitty.module": 10,
        eventemitter3: 14,
        fontfaceobserver: 27,
        jquery: 30,
        lazysizes: 31,
        "lazysizes/plugins/respimg/ls.respimg.js": 32,
        "object-fit-images": 33
    }],
    2: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.default = void 0;
        var _jquery = _interopRequireDefault(require("jquery")),
            _constants = _interopRequireDefault(require("../constants")),
            _imagesloaded = _interopRequireDefault(require("imagesloaded"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        var View = function() {
            function View(ctx, ev) {
                var _this = this;
                if (_imagesloaded.default.makeJQueryPlugin(_jquery.default), this.ctx = ctx, this.$ctx = (0, _jquery.default)(ctx), this.ev = ev, this.active = !1, !(0 < this.$ctx.length)) {
                    var errorMsg = "could not init: " + this.constructor.name + " on ctx: " + ctx;
                    throw _constants.default.DEBUG && window.console.info(errorMsg), errorMsg
                }
                _constants.default.DEBUG && window.console.log("init: " + this.constructor.name + " on ctx: " + ctx), this.active = !0, this.easings = {}, this.durations = {
                    animationInNormal: 1e3,
                    animationOutNormal: 1e3,
                    indicatorFadeOut: 500,
                    imageFadeIn: 500
                }, this.classes = {
                    indicator: ".js-indicator",
                    imgContainer: ".js-img-container",
                    img: ".js-img"
                }, this.classStates = {
                    hidden: "h-state--hidden",
                    visible: "h-state--visible",
                    active: "h-state--active",
                    fadeIn: "h-state--fadein"
                }, this.ev.on(_constants.default.EVENTS.RESIZE, function(winWidth, winHeight) {
                    _this.onResize(winWidth, winHeight)
                }), this.ev.on(_constants.default.EVENTS.RESIZE_DEBOUNCED, function(winWidth, winHeight) {
                    _this.onResizeDebounced(winWidth, winHeight)
                })
            }
            var _proto = View.prototype;
            return _proto.onResize = function() {
                _constants.default.DEBUG && window.console.log("resizing " + this.constructor.name)
            }, _proto.onResizeDebounced = function() {}, _proto.loadImages = function($container, cb) {
                var _this2 = this;
                $container.imagesLoaded().progress(function(instance, image) {
                    var $image = (0, _jquery.default)(image.img),
                        $container = $image.closest(_this2.classes.imgContainer);
                    image.isLoaded && ($container.find(_this2.classes.indicator).fadeOut(_this2.durations.indicatorFadeOut), $image.delay(_this2.durations.indicatorFadeOut).fadeIn(_this2.durations.imageFadeIn))
                }).done(function() {
                    "function" == typeof cb && cb()
                })
            }, View
        }();
        exports.default = View
    }, {
        "../constants": 7,
        imagesloaded: 29,
        jquery: 30
    }],
    3: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.Header = void 0;
        var _jquery = _interopRequireDefault(require("jquery")),
            _component = _interopRequireDefault(require("./component")),
            _underscore = require("underscore");
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        function _extends() {
            return (_extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source)
                        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key])
                }
                return target
            }).apply(this, arguments)
        }
        var Header = function(_Component) {
            function Header(ctx, ev) {
                var _this;
                return _extends((_this = _Component.call(this, ctx, ev) || this).classes, {
                    terms: ".mod-header__terms ul"
                }), _extends(_this.classStates, {
                    modifierSmall: "h-modifier--small",
                    opened: "h-state--opened",
                    opening: "h-state--transition-opening",
                    closed: "h-state--closed",
                    closing: "h-state--transition-closing"
                }), _this.topScrollOffset = 80, _this.topPrevious = 0, _this.topAnimationTimeout = null, _this.topTransitionDuration = 500, _this.topLastAction = "", _this.topIsInTransition = !1, _this.termsLimit = 10, _this.$window = (0, _jquery.default)(window), _this.$terms = _this.$ctx.find(_this.classes.terms), _this.setupScrollListener(), _this.flipTerms(), _this
            }
            !function(subClass, superClass) {
                subClass.prototype = Object.create(superClass.prototype), (subClass.prototype.constructor = subClass).__proto__ = superClass
            }(Header, _Component);
            var _proto = Header.prototype;
            return _proto.setupScrollListener = function() {
                var _this2 = this;
                this.$ctx.hasClass(this.classStates.modifierSmall) || this.$window.on("scroll.Header", function() {
                    var top = _this2.$window.scrollTop();
                    _this2.topIsInTransition || (top > _this2.topPrevious && top > _this2.topScrollOffset ? _this2.transition("close") : top <= 0 && _this2.transition("open")), _this2.topPrevious = top
                })
            }, _proto.transition = function(action) {
                var _this3 = this;
                return this.topLastAction !== action && (this.topLastAction = action, window.clearTimeout(this.topAnimationTimeout), "open" === action ? (this.topIsInTransition = !0, this.$ctx.removeClass(this.classStates.closed).removeClass(this.classStates.closing).addClass(this.classStates.opening), this.topAnimationTimeout = window.setTimeout(function() {
                        _this3.$ctx.removeClass(_this3.classStates.opening).addClass(_this3.classStates.opened), _this3.topIsInTransition = !1
                    }, this.topTransitionDuration)) : "close" === action && (this.topIsInTransition = !0, this.$ctx.removeClass(this.classStates.opened).removeClass(this.classStates.opening).addClass(this.classStates.closing), this.topAnimationTimeout = window.setTimeout(function() {
                        _this3.$ctx.removeClass(_this3.classStates.closing).addClass(_this3.classStates.closed), _this3.topIsInTransition = !1
                    }, this.topTransitionDuration)), !0)
            }, _proto.flipTerms = function() {
                var _this4 = this;
                window.setInterval(function() {
                    var i = 0,
                        arr = (0, _underscore.shuffle)(window.DIA.terms || []);
                    for (_this4.$terms.empty(), i = 0; i < _this4.termsLimit; i++)
                        _this4.$terms.append("<li>" + arr[i] + "</li>")
                }, 500)
            }, _proto.onResize = function() {}, Header
        }(_component.default);
        exports.Header = Header
    }, {
        "./component": 2,
        jquery: 30,
        underscore: 36
    }],
    4: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0;
        var _header = require("./header");
        Object.keys(_header).forEach(function(key) {
            "default" !== key && "__esModule" !== key && (exports[key] = _header[key])
        });
        var _output = require("./output");
        Object.keys(_output).forEach(function(key) {
            "default" !== key && "__esModule" !== key && (exports[key] = _output[key])
        });
        var _project = require("./project");
        Object.keys(_project).forEach(function(key) {
            "default" !== key && "__esModule" !== key && (exports[key] = _project[key])
        })
    }, {
        "./header": 3,
        "./output": 5,
        "./project": 6
    }],
    5: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.Output = void 0;
        var _jquery = _interopRequireDefault(require("jquery")),
            _constants = _interopRequireDefault(require("../constants")),
            _component = _interopRequireDefault(require("./component")),
            _player = _interopRequireDefault(require("@vimeo/player"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        function _extends() {
            return (_extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source)
                        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key])
                }
                return target
            }).apply(this, arguments)
        }
        var Output = function(_Component) {
            function Output(ctx, ev) {
                var _this;
                return _extends((_this = _Component.call(this, ctx, ev) || this).classes, {
                    project: ".mod-output__project",
                    videoWrapper: ".js-video-wrapper",
                    videoContainer: ".js-video-container"
                }), _this.firstCall = !0, _this.playerInstances = [], _this.playerInstancesRunning = !1, _this.isMobile = 0, _this.$projects = _this.$ctx.find(_this.classes.project), _this.$videoContainers = _this.$ctx.find(_this.classes.videoContainer), _this.bindHover(), _this.listenToEvents(), _this
            }
            !function(subClass, superClass) {
                subClass.prototype = Object.create(superClass.prototype), (subClass.prototype.constructor = subClass).__proto__ = superClass
            }(Output, _Component);
            var _proto = Output.prototype;
            return _proto.bindHover = function() {
                var _this2 = this;
                window.Modernizr.touchevents || (this.$projects.on("mouseenter", function(ev) {
                    _this2.$ctx.addClass(_this2.classStates.active);
                    var player = (0, _jquery.default)(ev.currentTarget).find(_this2.classes.videoContainer).data("player");
                    player && !_this2.isMobile && player.play()
                }), this.$projects.on("mouseleave", function(ev) {
                    _this2.$ctx.removeClass(_this2.classStates.active);
                    var player = (0, _jquery.default)(ev.currentTarget).find(_this2.classes.videoContainer).data("player");
                    player && !_this2.isMobile && player.pause().then().catch()
                }))
            }, _proto.listenToEvents = function() {
                var _this3 = this;
                this.ev.on(_constants.default.EVENTS.FITTY_RESIZE_DONE, function() {
                    _this3.resizeVideoContainers()
                })
            }, _proto.loadVideos = function() {
                var _this4 = this;
                this.$videoContainers.each(function(index, item) {
                    var $container = (0, _jquery.default)(item),
                        videoId = $container.data("video-id");
                    if (videoId) {
                        $container.append('<iframe src="https://player.vimeo.com/video/' + videoId + '?background=1&autoplay=0&quality=1080p" frameborder="0"></iframe>');
                        var $iframe = $container.find("iframe"),
                            player = new _player.default($iframe[0]);
                        $container.data("player", player), _this4.playerInstances.push(player)
                    }
                })
            }, _proto.playOrPauseAllVideoPlayers = function(action) {
                "play" !== action || this.playerInstancesRunning ? "pause" === action && this.playerInstancesRunning && (this.playerInstances.forEach(function(item) {
                    return item.pause().then().catch()
                }), this.playerInstancesRunning = !1) : (this.playerInstances.forEach(function(item) {
                    return item.play().then().catch()
                }), this.playerInstancesRunning = !0)
            }, _proto.resizeVideoContainers = function() {
                var _this5 = this;
                this.$videoContainers.each(function(index, item) {
                    var $container = (0, _jquery.default)(item),
                        $wrapper = $container.closest(_this5.classes.videoWrapper);
                    $wrapper.addClass(_this5.classStates.active);
                    var wrapperHeight = $wrapper.height(),
                        containerHeight = $container.height(),
                        top = Math.min(-1 * Math.floor((containerHeight - wrapperHeight) / 2), 0);
                    $wrapper.removeClass(_this5.classStates.active), $container.css({
                        top: top
                    })
                })
            }, _proto.onResize = function(winWidth) {
                var _this6 = this;
                this.active && (this.isMobile = winWidth <= _constants.default.MOBILE_WIDTH, this.firstCall && (this.loadVideos(), window.setTimeout(function() {
                    _this6.resizeVideoContainers()
                }, 10), this.firstCall = !1), this.isMobile ? this.playOrPauseAllVideoPlayers("play") : this.playOrPauseAllVideoPlayers("pause"))
            }, Output
        }(_component.default);
        exports.Output = Output
    }, {
        "../constants": 7,
        "./component": 2,
        "@vimeo/player": 11,
        jquery: 30
    }],
    6: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.Project = void 0;
        var _jquery = _interopRequireDefault(require("jquery")),
            _constants = _interopRequireDefault(require("../constants")),
            _component = _interopRequireDefault(require("./component")),
            _flickity = _interopRequireDefault(require("flickity")),
            _player = _interopRequireDefault(require("@vimeo/player")),
            _objectFitImages = _interopRequireDefault(require("object-fit-images"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        function _extends() {
            return (_extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source)
                        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key])
                }
                return target
            }).apply(this, arguments)
        }
        var Project = function(_Component) {
            function Project(ctx, ev) {
                var _this;
                return _extends((_this = _Component.call(this, ctx, ev) || this).classes, {
                    counter: ".js-counter",
                    slideshow: ".js-slideshow",
                    slide: ".js-slide",
                    info: ".js-project-info",
                    infoLink: ".js-project-info-open",
                    infoClose: ".js-project-info-close",
                    thumbIndex: ".js-thumb-index",
                    cursorLeft: ".js-cursor-left",
                    cursorRight: ".js-cursor-right",
                    flickityBtnPrev: ".flickity-prev-next-button.previous",
                    flickityBtnNext: ".flickity-prev-next-button.next",
                    videoContainer: ".js-video-container",
                    videoContainerThumb: ".js-video-container-thumb"
                }), _extends(_this.classStates, {
                    infoOpen: "h-state--info-open",
                    closed: "h-state--closed",
                    closing: "h-state--closing",
                    video: "h-state--video",
                    loaded: "h-state--loaded"
                }), _this.isMobile = 0, _this.isInfoOpen = 0, _this.flickity = null, _this.dontPushState = !1, _this.firstCall = !0, _this.playerInstances = [], _this.playerInstancesThumb = [], _this.playerInstancesThumbRunning = !1, _this.$html = (0, _jquery.default)("html"), _this.$counter = _this.$ctx.find(_this.classes.counter), _this.$slideshow = _this.$ctx.find(_this.classes.slideshow), _this.$slides = _this.$ctx.find(_this.classes.slide), _this.$slideImgs = _this.$slides.find("img"), _this.$videoContainersThumb = _this.$ctx.find(_this.classes.videoContainerThumb), _this.listenToEvents(), _this.makeCarousel(), _this.makeCarouselCursors(), _this.bindNavigation(), _this.bindInfoLinks(), _this.bindThumbIndex(), _this.bindPopState(), _this.loadIfActiveOnLoad(), _this
            }
            !function(subClass, superClass) {
                subClass.prototype = Object.create(superClass.prototype), (subClass.prototype.constructor = subClass).__proto__ = superClass
            }(Project, _Component);
            var _proto = Project.prototype;
            return _proto.listenToEvents = function() {
                var _this2 = this;
                this.ev.on(_constants.default.EVENTS.PROJECT_INFO_OPEN, function() {
                    var $info = _this2.$ctx.find(_this2.classes.info);
                    _this2.playOrPauseThumbVideoPlayers("play"), _this2.$html.addClass(_this2.classStates.infoOpen), $info.removeClass(_this2.classStates.closed), _this2.isInfoOpen = 1
                }), this.ev.on(_constants.default.EVENTS.PROJECT_INFO_CLOSE, function() {
                    var $info = _this2.$ctx.find(_this2.classes.info);
                    _this2.playOrPauseThumbVideoPlayers("pause"), $info.addClass(_this2.classStates.closing), window.setTimeout(function() {
                        _this2.$html.removeClass(_this2.classStates.infoOpen), $info.removeClass(_this2.classStates.closing).addClass(_this2.classStates.closed), $info.scrollTop(0), _this2.isInfoOpen = 0
                    }, 600)
                })
            }, _proto.bindNavigation = function() {
                var _this3 = this;
                if (!window.Modernizr.touchevents) {
                    (0, _jquery.default)(window.document).on("keydown.Project", function(ev) {
                        switch (parseInt(ev.keyCode, 10)) {
                        case 27:
                            _this3.isInfoOpen && _this3.ev.emit(_constants.default.EVENTS.PROJECT_INFO_CLOSE)
                        }
                    })
                }
            }, _proto.bindInfoLinks = function() {
                var _this4 = this;
                this.$ctx.on("click", this.classes.infoLink, function(ev) {
                    ev.preventDefault(), _this4.isInfoOpen ? _this4.ev.emit(_constants.default.EVENTS.PROJECT_INFO_CLOSE) : _this4.ev.emit(_constants.default.EVENTS.PROJECT_INFO_OPEN)
                }), this.$ctx.on("click", this.classes.infoClose, function(ev) {
                    ev.preventDefault(), _this4.ev.emit(_constants.default.EVENTS.PROJECT_INFO_CLOSE)
                })
            }, _proto.bindThumbIndex = function() {
                var _this5 = this;
                this.$ctx.on("click", this.classes.thumbIndex, function(ev) {
                    if (ev.preventDefault(), !_this5.isMobile) {
                        var href = (0, _jquery.default)(ev.currentTarget).attr("href"),
                            match = /#slide-(\d*)/.exec(href);
                        if (match) {
                            var index = window.parseInt(match[1], 10) - 1;
                            _this5.gotoSlide(index), window.setTimeout(function() {
                                return _this5.ev.emit(_constants.default.EVENTS.PROJECT_INFO_CLOSE)
                            }, 500)
                        }
                    }
                })
            }, _proto.bindPopState = function() {
                var _this6 = this;
                if (window.history && window.history.replaceState && window.history.pushState) {
                    var url = window.location.href;
                    window.history.replaceState({
                        url: url
                    }, null, url), window.onpopstate = function(ev) {
                        if (ev.state && ev.state.url) {
                            var match = /#slide-(\d*)/.exec(ev.state.url);
                            if (match) {
                                var index = window.parseInt(match[1], 10) - 1;
                                _this6.dontPushState = !0, _this6.gotoSlide(index)
                            }
                        }
                    }
                }
            }, _proto.loadIfActiveOnLoad = function() {
                var match = /#slide-(\d*)/.exec(window.location.href);
                if (match) {
                    var index = window.parseInt(match[1], 10) - 1;
                    this.dontPushState = !0, this.gotoSlide(index)
                }
            }, _proto.makeCarousel = function() {
                var _this7 = this;
                this.flickity = new _flickity.default(this.$slideshow[0], {
                    cellSelector: this.classes.slide,
                    selectedAttraction: .08,
                    friction: .7,
                    wrapAround: !0,
                    resize: !1,
                    setGallerySize: !1,
                    pageDots: !1,
                    lazyLoad: !1,
                    imagesLoaded: !1,
                    draggable: Boolean(window.Modernizr.touchevents),
                    arrowShape: "M70,3L23.2,49.8L70,96.6"
                }), this.$slideshow.focus(), this.flickity.on("change", function() {
                    _this7.updateCounter(), _this7.updateCarouselVideo(), _this7.updateUrl()
                }), this.updateCounter(), this.updateCarouselVideo(), this.fallbackObjectFit()
            }, _proto.makeCarouselCursors = function() {
                var _this8 = this;
                window.Modernizr.touchevents || (this.$cursorLeft = this.$ctx.find(this.classes.cursorLeft), this.$cursorRight = this.$ctx.find(this.classes.cursorRight), this.$flickityBtnPrev = this.$ctx.find(this.classes.flickityBtnPrev), this.$flickityBtnNext = this.$ctx.find(this.classes.flickityBtnNext), this.$flickityBtnPrev.on("mouseenter", function() {
                    _this8.$cursorLeft.addClass(_this8.classStates.active)
                }), this.$flickityBtnPrev.on("mousemove", function(ev) {
                    _this8.$cursorLeft.css({
                        top: ev.clientY,
                        left: ev.clientX
                    })
                }), this.$flickityBtnPrev.on("mouseleave", function() {
                    _this8.$cursorLeft.removeClass(_this8.classStates.active)
                }), this.$flickityBtnNext.on("mouseenter", function() {
                    _this8.$cursorRight.addClass(_this8.classStates.active)
                }), this.$flickityBtnNext.on("mousemove", function(ev) {
                    _this8.$cursorRight.css({
                        top: ev.clientY,
                        left: ev.clientX
                    })
                }), this.$flickityBtnNext.on("mouseleave", function() {
                    _this8.$cursorRight.removeClass(_this8.classStates.active)
                }))
            }, _proto.gotoSlide = function(index) {
                this.flickity && this.flickity.selectCell(index, !1)
            }, _proto.fallbackObjectFit = function() {
                window.Modernizr.objectfit && window.Modernizr.srcset || (0, _objectFitImages.default)()
            }, _proto.updateCounter = function() {
                var currentSlide = this.flickity.selectedIndex + 1,
                    totalSlides = this.flickity.slides.length;
                0 === totalSlides ? this.$counter.html("") : this.$counter.html(currentSlide + " / " + totalSlides)
            }, _proto.updateUrl = function() {
                var match = /#slide-(\d*)/.exec(window.location.href),
                    newUrl = (match ? window.location.href.substr(0, match.index) : window.location.protocol + "//" + window.location.host + window.location.pathname) + "#slide-" + (this.flickity.selectedIndex + 1);
                !this.dontPushState && window.history && window.history.pushState && window.history.pushState({
                    url: newUrl
                }, null, newUrl), this.dontPushState = !1
            }, _proto.updateCarouselVideo = function() {
                var $slide = this.$slides.eq(this.flickity.selectedIndex);
                $slide && (this.playerInstances.forEach(function(item) {
                    return item.pause().then().catch()
                }), $slide.hasClass(this.classStates.video) && ($slide.hasClass(this.classStates.loaded) ? this.resumeCarouselVideo($slide) : this.loadCarouselVideo($slide)))
            }, _proto.loadCarouselVideo = function($slide) {
                var _this9 = this,
                    videoId = $slide.data("video-id");
                if (videoId) {
                    $slide.append('<iframe src="https://player.vimeo.com/video/' + videoId + '?background=1&autoplay=0" frameborder="0"></iframe>');
                    var $iframe = $slide.find("iframe"),
                        player = new _player.default($iframe[0]);
                    $slide.data("player", player), this.playerInstances.push(player), $slide.addClass(this.classStates.loaded), player.ready().then(function() {
                        _this9.resumeCarouselVideo($slide), $slide.find(_this9.classes.indicator).hide()
                    })
                }
            }, _proto.resumeCarouselVideo = function($slide) {
                var player = $slide.data("player");
                player && (player.setCurrentTime(0).then().catch(), player.play().then().catch())
            }, _proto.loadThumbVideos = function() {
                var _this10 = this;
                this.$videoContainersThumb.each(function(index, item) {
                    var $container = (0, _jquery.default)(item),
                        videoId = $container.data("video-id");
                    if (videoId) {
                        $container.append('<iframe src="https://player.vimeo.com/video/' + videoId + '?background=1&autoplay=0" frameborder="0"></iframe>');
                        var $iframe = $container.find("iframe"),
                            player = new _player.default($iframe[0]);
                        _this10.playerInstancesThumb.push(player)
                    }
                })
            }, _proto.playOrPauseThumbVideoPlayers = function(action) {
                "play" !== action || this.playerInstancesThumbRunning ? "pause" === action && this.playerInstancesThumbRunning && (this.playerInstancesThumb.forEach(function(item) {
                    return item.pause().then().catch()
                }), this.playerInstancesThumbRunning = !1) : (this.playerInstancesThumb.forEach(function(item) {
                    return item.play().then().catch()
                }), this.playerInstancesThumbRunning = !0)
            }, _proto.onResize = function(winWidth) {
                var _this11 = this;
                this.active && (this.isMobile = winWidth <= _constants.default.MOBILE_WIDTH, this.firstCall && (window.setTimeout(function() {
                    _this11.loadThumbVideos(), _this11.isMobile && window.setTimeout(function() {
                        _this11.playerInstancesThumbRunning = !1, _this11.playOrPauseThumbVideoPlayers("play")
                    }, 20)
                }, 1e3), this.firstCall = !1), this.flickity && this.flickity.resize(), this.isMobile ? this.playOrPauseThumbVideoPlayers("play") : this.playOrPauseThumbVideoPlayers(this.isInfoOpen ? "play" : "pause"))
            }, Project
        }(_component.default);
        exports.Project = Project
    }, {
        "../constants": 7,
        "./component": 2,
        "@vimeo/player": 11,
        flickity: 21,
        jquery: 30,
        "object-fit-images": 33
    }],
    7: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.default = void 0;
        var _default = {
            URL: window.DIA.Config.AppURL,
            DEBUG: window.DIA.Config.AppDebug,
            EVENTS: {
                RESIZE: "resize",
                RESIZE_DEBOUNCED: "resizeDebounced",
                LOAD_IMGS: "loadImgs",
                PROJECT_INFO_OPEN: "projectInfoOpen",
                PROJECT_INFO_CLOSE: "projectInfoClose",
                FITTY_RESIZE_DONE: "fittyResizeDone"
            },
            TINY_WIDTH: 370,
            MOBILE_WIDTH: 715,
            TABLET_WIDTH: 980,
            DESKTOP_WIDTH: 1300,
            GRID_GUTTER: 10
        };
        exports.default = _default
    }, {}],
    8: [function(require, module, exports) {
        "use strict";
        exports.__esModule = !0, exports.default = void 0;
        var _default = {
            loadScript: function(url, cb) {
                var scriptsLoaded = window.document.getElementsByTagName("script"),
                    alreadyLoaded = !1;
                if (scriptsLoaded.length)
                    for (var scriptIndex in scriptsLoaded)
                        alreadyLoaded || url !== scriptsLoaded[scriptIndex].src || (alreadyLoaded = !0);
                if (alreadyLoaded)
                    "function" == typeof cb && cb();
                else {
                    var script = document.createElement("script");
                    cb && (script.onload = cb), script.type = "text/javascript", script.src = url, document.body.appendChild(script)
                }
            }
        };
        exports.default = _default
    }, {}],
    9: [function(require, module, exports) {
        "use strict";
        require("./helper");
        var _jquery = _interopRequireDefault(require("jquery")),
            _app = _interopRequireDefault(require("./app"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            }
        }
        window.console || (window.console = {}), window.console.log = window.console.log || function() {}, window.console.warn = window.console.warn || function() {}, window.console.error = window.console.error || function() {}, window.console.info = window.console.info || function() {}, void 0 === Function.prototype.name && void 0 !== Object.defineProperty && Object.defineProperty(Function.prototype, "name", {
            get: function() {
                var results = /function\s([^(]{1,})\(/.exec(this.toString());
                return results && 1 < results.length ? results[1].trim() : ""
            },
            set: function() {}
        }), (0, _jquery.default)(function() {
            new _app.default([{
                name: "Header",
                ctx: ".mod-header"
            }, {
                name: "Output",
                ctx: ".mod-output"
            }, {
                name: "Project",
                ctx: ".mod-project"
            }]).run()
        })
    }, {
        "./app": 1,
        "./helper": 8,
        jquery: 30
    }],
    10: [function(require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: !0
        });
        var _extends = Object.assign || function(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source)
                    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key])
            }
            return target
        };
        exports.default = function(w) {
            if (w) {
                var DrawState = {
                        IDLE: 0,
                        DIRTY_CONTENT: 1,
                        DIRTY_LAYOUT: 2,
                        DIRTY: 3
                    },
                    fitties = [],
                    redrawFrame = null,
                    requestRedraw = "requestAnimationFrame" in w ? function() {
                        w.cancelAnimationFrame(redrawFrame), redrawFrame = w.requestAnimationFrame(function() {
                            redraw(fitties.filter(function(f) {
                                return f.dirty
                            }))
                        })
                    } : function() {},
                    redrawAll = function(type) {
                        return function() {
                            fitties.forEach(function(f) {
                                f.dirty = type
                            }), requestRedraw()
                        }
                    },
                    redraw = function(fitties) {
                        fitties.filter(function(f) {
                            return !f.styleComputed
                        }).forEach(function(f) {
                            f.styleComputed = computeStyle(f)
                        }), fitties.filter(shouldPreStyle).forEach(applyStyle);
                        var fittiesToRedraw = fitties.filter(shouldRedraw);
                        fittiesToRedraw.forEach(calculateStyles), fittiesToRedraw.forEach(function(f) {
                            applyStyle(f), markAsClean(f)
                        }), fittiesToRedraw.forEach(dispatchFitEvent)
                    },
                    markAsClean = function(f) {
                        return f.dirty = DrawState.IDLE
                    },
                    calculateStyles = function(f) {
                        var style = w.getComputedStyle(f.element.parentNode, null),
                            paddingHorizontal = window.parseFloat(style.paddingLeft) + window.parseFloat(style.paddingRight);
                        f.element.textContent.length;
                        f.availableWidth = f.element.parentNode.offsetWidth - paddingHorizontal, f.currentWidth = f.element.scrollWidth, f.previousFontSize = f.currentFontSize, f.previousLetterSpacing = f.currentLetterSpacing, f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / (f.currentWidth + Math.abs(f.previousLetterSpacing)) * f.previousFontSize), f.maxSize), f.currentLetterSpacing = Math.min(0, f.currentFontSize / 40 * -1), f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? "normal" : "nowrap"
                    },
                    shouldRedraw = function(f) {
                        return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth
                    },
                    computeStyle = function(f) {
                        var style = w.getComputedStyle(f.element, null);
                        f.currentFontSize = window.parseFloat(style.getPropertyValue("font-size")), f.currentLetterSpacing = window.parseFloat(style.getPropertyValue("letter-spacing")) || 0, f.display = style.getPropertyValue("display"), f.whiteSpace = style.getPropertyValue("white-space")
                    },
                    shouldPreStyle = function(f) {
                        var preStyle = !1;
                        return !f.preStyleTestCompleted && (/inline-/.test(f.display) || (preStyle = !0, f.display = "inline-block"), "nowrap" !== f.whiteSpace && (preStyle = !0, f.whiteSpace = "nowrap"), f.preStyleTestCompleted = !0, preStyle)
                    },
                    applyStyle = function(f) {
                        f.originalStyle || (f.originalStyle = f.element.getAttribute("style") || ""), f.element.style.cssText = f.originalStyle + ";white-space:" + f.whiteSpace + ";display:" + f.display + ";font-size:" + f.currentFontSize + "px;letter-spacing:" + f.currentLetterSpacing + "px;"
                    },
                    dispatchFitEvent = function(f) {
                        f.element.dispatchEvent(new CustomEvent("fit", {
                            detail: {
                                oldValue: f.previousFontSize,
                                newValue: f.currentFontSize,
                                scaleFactor: f.currentFontSize / f.previousFontSize
                            }
                        }))
                    },
                    fit = function(f, type) {
                        return function() {
                            f.dirty = type, requestRedraw()
                        }
                    },
                    subscribe = function(f) {
                        f.newbie = !0, f.dirty = !0, fitties.push(f)
                    },
                    unsubscribe = function(f) {
                        return function() {
                            fitties = fitties.filter(function(_) {
                                return _.element !== f.element
                            }), f.observeMutations && f.observer.disconnect(), f.element.style.cssText = f.originalStyle
                        }
                    },
                    observeMutations = function(f) {
                        f.observeMutations && (f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT)), f.observer.observe(f.element, f.observeMutations))
                    },
                    defaultOptions = {
                        minSize: 16,
                        maxSize: 512,
                        multiLine: !0,
                        observeMutations: "MutationObserver" in w && {
                            subtree: !0,
                            childList: !0,
                            characterData: !0
                        }
                    },
                    resizeDebounce = null,
                    onWindowResized = function() {
                        w.clearTimeout(resizeDebounce), resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay)
                    },
                    events = ["resize", "orientationchange"];
                return Object.defineProperty(fitty, "observeWindow", {
                    set: function(enabled) {
                        var method = (enabled ? "add" : "remove") + "EventListener";
                        events.forEach(function(e) {
                            w[method](e, onWindowResized)
                        })
                    }
                }), fitty.observeWindow = !0, fitty.observeWindowDelay = 100, fitty.fitAll = redrawAll(DrawState.DIRTY), fitty
            }
            function fittyCreate(elements, options) {
                var fittyOptions = _extends({}, defaultOptions, options),
                    publicFitties = elements.map(function(element) {
                        var f = _extends({}, fittyOptions, {
                            element: element
                        });
                        return subscribe(f), observeMutations(f), {
                            element: element,
                            fit: fit(f, DrawState.DIRTY),
                            unsubscribe: unsubscribe(f)
                        }
                    });
                return requestRedraw(), publicFitties
            }
            function fitty(target) {
                var options = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                return "string" == typeof target ? fittyCreate(function(nl) {
                    return [].slice.call(nl)
                }(document.querySelectorAll(target)), options) : fittyCreate([target], options)[0]
            }
        }("undefined" == typeof window ? null : window)
    }, {}],
    11: [function(require, module, exports) {
        (function(global, setImmediate) {
            !function(global, factory) {
                "object" == typeof exports && void 0 !== module ? module.exports = factory() : "function" == typeof define && define.amd ? define(factory) : ((global = global || self).Vimeo = global.Vimeo || {}, global.Vimeo.Player = factory())
            }(this, function() {
                "use strict";
                function _defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor)
                    }
                }
                var isNode = void 0 !== global && "[object global]" === {}.toString.call(global);
                function getMethodName(prop, type) {
                    return 0 === prop.indexOf(type.toLowerCase()) ? prop : "".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1))
                }
                function isVimeoUrl(url) {
                    return /^(https?:)?\/\/((player|www)\.)?vimeo\.com(?=$|\/)/.test(url)
                }
                function getVimeoUrl(argument_0) {
                    var oEmbedParameters = 0 < arguments.length && void 0 !== argument_0 ? argument_0 : {},
                        id = oEmbedParameters.id,
                        url = oEmbedParameters.url,
                        idOrUrl = id || url;
                    if (!idOrUrl)
                        throw new Error("An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.");
                    if (function(value) {
                        return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value
                    }(idOrUrl))
                        return "https://vimeo.com/".concat(idOrUrl);
                    if (isVimeoUrl(idOrUrl))
                        return idOrUrl.replace("http:", "https:");
                    if (id)
                        throw new TypeError("“".concat(id, "” is not a valid video id."));
                    throw new TypeError("“".concat(idOrUrl, "” is not a vimeo.com url."))
                }
                var arrayIndexOfSupport = void 0 !== Array.prototype.indexOf,
                    postMessageSupport = "undefined" != typeof window && void 0 !== window.postMessage;
                if (!(isNode || arrayIndexOfSupport && postMessageSupport))
                    throw new Error("Sorry, the Vimeo Player API is not available in this browser.");
                var commonjsGlobal = "undefined" != typeof window ? window : void 0 !== global ? global : "undefined" != typeof self ? self : {};
                !function(self) {
                    if (!self.WeakMap) {
                        var hasOwnProperty = Object.prototype.hasOwnProperty,
                            defineProperty = function(object, name, value) {
                                Object.defineProperty ? Object.defineProperty(object, name, {
                                    configurable: !0,
                                    writable: !0,
                                    value: value
                                }) : object[name] = value
                            };
                        self.WeakMap = (defineProperty(WeakMap.prototype, "delete", function(key) {
                            if (checkInstance(this, "delete"), !isObject(key))
                                return !1;
                            var entry = key[this._id];
                            return !(!entry || entry[0] !== key || (delete key[this._id], 0))
                        }), defineProperty(WeakMap.prototype, "get", function(key) {
                            if (checkInstance(this, "get"), isObject(key)) {
                                var entry = key[this._id];
                                return entry && entry[0] === key ? entry[1] : void 0
                            }
                        }), defineProperty(WeakMap.prototype, "has", function(key) {
                            if (checkInstance(this, "has"), !isObject(key))
                                return !1;
                            var entry = key[this._id];
                            return !(!entry || entry[0] !== key)
                        }), defineProperty(WeakMap.prototype, "set", function(key, value) {
                            if (checkInstance(this, "set"), !isObject(key))
                                throw new TypeError("Invalid value used as weak map key");
                            var entry = key[this._id];
                            return entry && entry[0] === key ? entry[1] = value : defineProperty(key, this._id, [key, value]), this
                        }), defineProperty(WeakMap, "_polyfill", !0), WeakMap)
                    }
                    function WeakMap() {
                        if (void 0 === this)
                            throw new TypeError("Constructor WeakMap requires 'new'");
                        if (defineProperty(this, "_id", function(prefix) {
                            return prefix + "_" + rand() + "." + rand()
                        }("_WeakMap")), 0 < arguments.length)
                            throw new TypeError("WeakMap iterable is not supported")
                    }
                    function checkInstance(x, methodName) {
                        if (!isObject(x) || !hasOwnProperty.call(x, "_id"))
                            throw new TypeError(methodName + " method called on incompatible receiver " + typeof x)
                    }
                    function rand() {
                        return Math.random().toString().substring(2)
                    }
                    function isObject(x) {
                        return Object(x) === x
                    }
                }("undefined" != typeof self ? self : "undefined" != typeof window ? window : commonjsGlobal);
                var module,
                    npo_src = (function(module) {
                        var name,
                            context,
                            definition;
                        definition = function() {
                            var builtInProp,
                                cycle,
                                scheduling_queue,
                                first,
                                last,
                                item,
                                ToString = Object.prototype.toString,
                                timer = void 0 !== setImmediate ? function(fn) {
                                    return setImmediate(fn)
                                } : setTimeout;
                            try {
                                Object.defineProperty({}, "x", {}), builtInProp = function(obj, name, val, config) {
                                    return Object.defineProperty(obj, name, {
                                        value: val,
                                        writable: !0,
                                        configurable: !1 !== config
                                    })
                                }
                            } catch (err) {
                                builtInProp = function(obj, name, val) {
                                    return obj[name] = val, obj
                                }
                            }
                            function Item(fn, self) {
                                this.fn = fn, this.self = self, this.next = void 0
                            }
                            function schedule(fn, self) {
                                scheduling_queue.add(fn, self), cycle = cycle || timer(scheduling_queue.drain)
                            }
                            function isThenable(o) {
                                var _then,
                                    o_type = typeof o;
                                return null == o || "object" != o_type && "function" != o_type || (_then = o.then), "function" == typeof _then && _then
                            }
                            function notify() {
                                for (var i = 0; i < this.chain.length; i++)
                                    notifyIsolated(this, 1 === this.state ? this.chain[i].success : this.chain[i].failure, this.chain[i]);
                                this.chain.length = 0
                            }
                            function notifyIsolated(self, cb, chain) {
                                var ret,
                                    _then;
                                try {
                                    !1 === cb ? chain.reject(self.msg) : (ret = !0 === cb ? self.msg : cb.call(void 0, self.msg)) === chain.promise ? chain.reject(TypeError("Promise-chain cycle")) : (_then = isThenable(ret)) ? _then.call(ret, chain.resolve, chain.reject) : chain.resolve(ret)
                                } catch (err) {
                                    chain.reject(err)
                                }
                            }
                            function reject(msg) {
                                var self = this;
                                self.triggered || (self.triggered = !0, self.def && (self = self.def), self.msg = msg, self.state = 2, 0 < self.chain.length && schedule(notify, self))
                            }
                            function iteratePromises(Constructor, arr, resolver, rejecter) {
                                for (var idx = 0; idx < arr.length; idx++)
                                    !function(idx) {
                                        Constructor.resolve(arr[idx]).then(function(msg) {
                                            resolver(idx, msg)
                                        }, rejecter)
                                    }(idx)
                            }
                            function MakeDefWrapper(self) {
                                this.def = self, this.triggered = !1
                            }
                            function MakeDef(self) {
                                this.promise = self, this.state = 0, this.triggered = !1, this.chain = [], this.msg = void 0
                            }
                            function Promise(executor) {
                                if ("function" != typeof executor)
                                    throw TypeError("Not a function");
                                if (0 !== this.__NPO__)
                                    throw TypeError("Not a promise");
                                this.__NPO__ = 1;
                                var def = new MakeDef(this);
                                this.then = function(success, failure) {
                                    var o = {
                                        success: "function" != typeof success || success,
                                        failure: "function" == typeof failure && failure
                                    };
                                    return o.promise = new this.constructor(function(resolve, reject) {
                                        if ("function" != typeof resolve || "function" != typeof reject)
                                            throw TypeError("Not a function");
                                        o.resolve = resolve, o.reject = reject
                                    }), def.chain.push(o), 0 !== def.state && schedule(notify, def), o.promise
                                }, this.catch = function(failure) {
                                    return this.then(void 0, failure)
                                };
                                try {
                                    executor.call(void 0, function(msg) {
                                        (function resolve(msg) {
                                            var _then,
                                                self = this;
                                            if (!self.triggered) {
                                                self.triggered = !0, self.def && (self = self.def);
                                                try {
                                                    (_then = isThenable(msg)) ? schedule(function() {
                                                        var def_wrapper = new MakeDefWrapper(self);
                                                        try {
                                                            _then.call(msg, function() {
                                                                resolve.apply(def_wrapper, arguments)
                                                            }, function() {
                                                                reject.apply(def_wrapper, arguments)
                                                            })
                                                        } catch (err) {
                                                            reject.call(def_wrapper, err)
                                                        }
                                                    }) : (self.msg = msg, self.state = 1, 0 < self.chain.length && schedule(notify, self))
                                                } catch (err) {
                                                    reject.call(new MakeDefWrapper(self), err)
                                                }
                                            }
                                        }).call(def, msg)
                                    }, function(msg) {
                                        reject.call(def, msg)
                                    })
                                } catch (err) {
                                    reject.call(def, err)
                                }
                            }
                            var PromisePrototype = builtInProp({}, "constructor", Promise, !(scheduling_queue = {
                                add: function(fn, self) {
                                    item = new Item(fn, self), last ? last.next = item : first = item, last = item, item = void 0
                                },
                                drain: function() {
                                    var f = first;
                                    for (first = last = cycle = void 0; f;)
                                        f.fn.call(f.self), f = f.next
                                }
                            }));
                            return builtInProp(Promise.prototype = PromisePrototype, "__NPO__", 0, !1), builtInProp(Promise, "resolve", function(msg) {
                                return msg && "object" == typeof msg && 1 === msg.__NPO__ ? msg : new this(function(resolve, reject) {
                                    if ("function" != typeof resolve || "function" != typeof reject)
                                        throw TypeError("Not a function");
                                    resolve(msg)
                                })
                            }), builtInProp(Promise, "reject", function(msg) {
                                return new this(function(resolve, reject) {
                                    if ("function" != typeof resolve || "function" != typeof reject)
                                        throw TypeError("Not a function");
                                    reject(msg)
                                })
                            }), builtInProp(Promise, "all", function(arr) {
                                var Constructor = this;
                                return "[object Array]" != ToString.call(arr) ? Constructor.reject(TypeError("Not an array")) : 0 === arr.length ? Constructor.resolve([]) : new Constructor(function(resolve, reject) {
                                    if ("function" != typeof resolve || "function" != typeof reject)
                                        throw TypeError("Not a function");
                                    var len = arr.length,
                                        msgs = Array(len),
                                        count = 0;
                                    iteratePromises(Constructor, arr, function(idx, msg) {
                                        msgs[idx] = msg, ++count === len && resolve(msgs)
                                    }, reject)
                                })
                            }), builtInProp(Promise, "race", function(arr) {
                                var Constructor = this;
                                return "[object Array]" != ToString.call(arr) ? Constructor.reject(TypeError("Not an array")) : new Constructor(function(resolve, reject) {
                                    if ("function" != typeof resolve || "function" != typeof reject)
                                        throw TypeError("Not a function");
                                    iteratePromises(Constructor, arr, function(idx, msg) {
                                        resolve(msg)
                                    }, reject)
                                })
                            }), Promise
                        }, (context = commonjsGlobal)[name = "Promise"] = context[name] || definition(), module.exports && (module.exports = context[name])
                    }(module = {
                        exports: {}
                    }, module.exports), module.exports),
                    callbackMap = new WeakMap;
                function storeCallback(player, name, callback) {
                    var playerCallbacks = callbackMap.get(player.element) || {};
                    name in playerCallbacks || (playerCallbacks[name] = []), playerCallbacks[name].push(callback), callbackMap.set(player.element, playerCallbacks)
                }
                function getCallbacks(player, name) {
                    return (callbackMap.get(player.element) || {})[name] || []
                }
                function removeCallback(player, name, callback) {
                    var playerCallbacks = callbackMap.get(player.element) || {};
                    if (!playerCallbacks[name])
                        return !0;
                    if (!callback)
                        return playerCallbacks[name] = [], callbackMap.set(player.element, playerCallbacks), !0;
                    var index = playerCallbacks[name].indexOf(callback);
                    return -1 !== index && playerCallbacks[name].splice(index, 1), callbackMap.set(player.element, playerCallbacks), playerCallbacks[name] && 0 === playerCallbacks[name].length
                }
                var oEmbedParameters = ["autopause", "autoplay", "background", "byline", "color", "controls", "dnt", "height", "id", "loop", "maxheight", "maxwidth", "muted", "playsinline", "portrait", "responsive", "speed", "texttrack", "title", "transparent", "url", "width"];
                function getOEmbedParameters(element, argument_1) {
                    var defaults = 1 < arguments.length && void 0 !== argument_1 ? argument_1 : {};
                    return oEmbedParameters.reduce(function(params, param) {
                        var value = element.getAttribute("data-vimeo-".concat(param));
                        return !value && "" !== value || (params[param] = "" === value ? 1 : value), params
                    }, defaults)
                }
                function createEmbed(_ref, element) {
                    var html = _ref.html;
                    if (!element)
                        throw new TypeError("An element must be provided");
                    if (null !== element.getAttribute("data-vimeo-initialized"))
                        return element.querySelector("iframe");
                    var div = document.createElement("div");
                    return div.innerHTML = html, element.appendChild(div.firstChild), element.setAttribute("data-vimeo-initialized", "true"), element.querySelector("iframe")
                }
                function getOEmbedData(videoUrl, argument_1, argument_2) {
                    var params = 1 < arguments.length && void 0 !== argument_1 ? argument_1 : {},
                        element = 2 < arguments.length ? argument_2 : void 0;
                    return new Promise(function(resolve, reject) {
                        if (!isVimeoUrl(videoUrl))
                            throw new TypeError("“".concat(videoUrl, "” is not a vimeo.com url."));
                        var url = "https://vimeo.com/api/oembed.json?url=".concat(encodeURIComponent(videoUrl));
                        for (var param in params)
                            params.hasOwnProperty(param) && (url += "&".concat(param, "=").concat(encodeURIComponent(params[param])));
                        var xhr = "XDomainRequest" in window ? new XDomainRequest : new XMLHttpRequest;
                        xhr.open("GET", url, !0), xhr.onload = function() {
                            if (404 !== xhr.status)
                                if (403 !== xhr.status)
                                    try {
                                        var json = JSON.parse(xhr.responseText);
                                        if (403 === json.domain_status_code)
                                            return createEmbed(json, element), void reject(new Error("“".concat(videoUrl, "” is not embeddable.")));
                                        resolve(json)
                                    } catch (error) {
                                        reject(error)
                                    }
                                else
                                    reject(new Error("“".concat(videoUrl, "” is not embeddable.")));
                            else
                                reject(new Error("“".concat(videoUrl, "” was not found.")))
                        }, xhr.onerror = function() {
                            var status = xhr.status ? " (".concat(xhr.status, ")") : "";
                            reject(new Error("There was an error fetching the embed code from Vimeo".concat(status, ".")))
                        }, xhr.send()
                    })
                }
                function parseMessageData(data) {
                    if ("string" == typeof data)
                        try {
                            data = JSON.parse(data)
                        } catch (error) {
                            return console.warn(error), {}
                        }
                    return data
                }
                function postMessage(player, method, params) {
                    if (player.element.contentWindow && player.element.contentWindow.postMessage) {
                        var message = {
                            method: method
                        };
                        void 0 !== params && (message.value = params);
                        var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\d+).*$/, "$1"));
                        8 <= ieVersion && ieVersion < 10 && (message = JSON.stringify(message)), player.element.contentWindow.postMessage(message, player.origin)
                    }
                }
                function processData(player, data) {
                    var param,
                        callbacks = [];
                    if ((data = parseMessageData(data)).event) {
                        if ("error" === data.event)
                            getCallbacks(player, data.data.method).forEach(function(promise) {
                                var error = new Error(data.data.message);
                                error.name = data.data.name, promise.reject(error), removeCallback(player, data.data.method, promise)
                            });
                        callbacks = getCallbacks(player, "event:".concat(data.event)), param = data.data
                    } else if (data.method) {
                        var callback = function(player, name) {
                            var playerCallbacks = getCallbacks(player, name);
                            if (playerCallbacks.length < 1)
                                return !1;
                            var callback = playerCallbacks.shift();
                            return removeCallback(player, name, callback), callback
                        }(player, data.method);
                        callback && (callbacks.push(callback), param = data.value)
                    }
                    callbacks.forEach(function(callback) {
                        try {
                            if ("function" == typeof callback)
                                return void callback.call(player, param);
                            callback.resolve(param)
                        } catch (e) {}
                    })
                }
                var playerMap = new WeakMap,
                    readyMap = new WeakMap,
                    Player = function() {
                        function Player(element) {
                            var _this = this,
                                options = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                            if (function(instance, Constructor) {
                                if (!(instance instanceof Constructor))
                                    throw new TypeError("Cannot call a class as a function")
                            }(this, Player), window.jQuery && element instanceof jQuery && (1 < element.length && window.console && console.warn && console.warn("A jQuery object with multiple elements was passed, using the first element."), element = element[0]), "undefined" != typeof document && "string" == typeof element && (element = document.getElementById(element)), !function(element) {
                                return Boolean(element && 1 === element.nodeType && "nodeName" in element && element.ownerDocument && element.ownerDocument.defaultView)
                            }(element))
                                throw new TypeError("You must pass either a valid element or a valid id.");
                            var win = element.ownerDocument.defaultView;
                            if ("IFRAME" !== element.nodeName) {
                                var iframe = element.querySelector("iframe");
                                iframe && (element = iframe)
                            }
                            if ("IFRAME" === element.nodeName && !isVimeoUrl(element.getAttribute("src") || ""))
                                throw new Error("The player element passed isn’t a Vimeo embed.");
                            if (playerMap.has(element))
                                return playerMap.get(element);
                            this.element = element, this.origin = "*";
                            var readyPromise = new npo_src(function(resolve, reject) {
                                var onMessage = function(event) {
                                    if (isVimeoUrl(event.origin) && _this.element.contentWindow === event.source) {
                                        "*" === _this.origin && (_this.origin = event.origin);
                                        var data = parseMessageData(event.data);
                                        if (data && "error" === data.event && data.data && "ready" === data.data.method) {
                                            var error = new Error(data.data.message);
                                            return error.name = data.data.name, void reject(error)
                                        }
                                        var isReadyEvent = data && "ready" === data.event,
                                            isPingResponse = data && "ping" === data.method;
                                        if (isReadyEvent || isPingResponse)
                                            return _this.element.setAttribute("data-ready", "true"), void resolve();
                                        processData(_this, data)
                                    }
                                };
                                if (win.addEventListener ? win.addEventListener("message", onMessage, !1) : win.attachEvent && win.attachEvent("onmessage", onMessage), "IFRAME" !== _this.element.nodeName) {
                                    var params = getOEmbedParameters(element, options);
                                    getOEmbedData(getVimeoUrl(params), params, element).then(function(data) {
                                        var iframe = createEmbed(data, element);
                                        return _this.element = iframe, function(oldElement, newElement) {
                                            var playerCallbacks = callbackMap.get(oldElement);
                                            callbackMap.set(newElement, playerCallbacks), callbackMap.delete(oldElement)
                                        }(_this._originalElement = element, iframe), playerMap.set(_this.element, _this), data
                                    }).catch(reject)
                                }
                            });
                            return readyMap.set(this, readyPromise), playerMap.set(this.element, this), "IFRAME" === this.element.nodeName && postMessage(this, "ping"), this
                        }
                        return function(Constructor, protoProps, staticProps) {
                            protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps)
                        }(Player, [{
                            key: "callMethod",
                            value: function(name, argument_1) {
                                var _this2 = this,
                                    args = 1 < arguments.length && void 0 !== argument_1 ? argument_1 : {};
                                return new npo_src(function(resolve, reject) {
                                    return _this2.ready().then(function() {
                                        storeCallback(_this2, name, {
                                            resolve: resolve,
                                            reject: reject
                                        }), postMessage(_this2, name, args)
                                    }).catch(reject)
                                })
                            }
                        }, {
                            key: "get",
                            value: function(name) {
                                var _this3 = this;
                                return new npo_src(function(resolve, reject) {
                                    return name = getMethodName(name, "get"), _this3.ready().then(function() {
                                        storeCallback(_this3, name, {
                                            resolve: resolve,
                                            reject: reject
                                        }), postMessage(_this3, name)
                                    }).catch(reject)
                                })
                            }
                        }, {
                            key: "set",
                            value: function(name, value) {
                                var _this4 = this;
                                return new npo_src(function(resolve, reject) {
                                    if (name = getMethodName(name, "set"), null == value)
                                        throw new TypeError("There must be a value to set.");
                                    return _this4.ready().then(function() {
                                        storeCallback(_this4, name, {
                                            resolve: resolve,
                                            reject: reject
                                        }), postMessage(_this4, name, value)
                                    }).catch(reject)
                                })
                            }
                        }, {
                            key: "on",
                            value: function(eventName, callback) {
                                if (!eventName)
                                    throw new TypeError("You must pass an event name.");
                                if (!callback)
                                    throw new TypeError("You must pass a callback function.");
                                if ("function" != typeof callback)
                                    throw new TypeError("The callback must be a function.");
                                0 === getCallbacks(this, "event:".concat(eventName)).length && this.callMethod("addEventListener", eventName).catch(function() {}), storeCallback(this, "event:".concat(eventName), callback)
                            }
                        }, {
                            key: "off",
                            value: function(eventName, callback) {
                                if (!eventName)
                                    throw new TypeError("You must pass an event name.");
                                if (callback && "function" != typeof callback)
                                    throw new TypeError("The callback must be a function.");
                                removeCallback(this, "event:".concat(eventName), callback) && this.callMethod("removeEventListener", eventName).catch(function(e) {})
                            }
                        }, {
                            key: "loadVideo",
                            value: function(options) {
                                return this.callMethod("loadVideo", options)
                            }
                        }, {
                            key: "ready",
                            value: function() {
                                var readyPromise = readyMap.get(this) || new npo_src(function(resolve, reject) {
                                    reject(new Error("Unknown player. Probably unloaded."))
                                });
                                return npo_src.resolve(readyPromise)
                            }
                        }, {
                            key: "addCuePoint",
                            value: function(time, argument_1) {
                                var data = 1 < arguments.length && void 0 !== argument_1 ? argument_1 : {};
                                return this.callMethod("addCuePoint", {
                                    time: time,
                                    data: data
                                })
                            }
                        }, {
                            key: "removeCuePoint",
                            value: function(id) {
                                return this.callMethod("removeCuePoint", id)
                            }
                        }, {
                            key: "enableTextTrack",
                            value: function(language, kind) {
                                if (!language)
                                    throw new TypeError("You must pass a language.");
                                return this.callMethod("enableTextTrack", {
                                    language: language,
                                    kind: kind
                                })
                            }
                        }, {
                            key: "disableTextTrack",
                            value: function() {
                                return this.callMethod("disableTextTrack")
                            }
                        }, {
                            key: "pause",
                            value: function() {
                                return this.callMethod("pause")
                            }
                        }, {
                            key: "play",
                            value: function() {
                                return this.callMethod("play")
                            }
                        }, {
                            key: "unload",
                            value: function() {
                                return this.callMethod("unload")
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var _this5 = this;
                                return new npo_src(function(resolve) {
                                    readyMap.delete(_this5), playerMap.delete(_this5.element), _this5._originalElement && (playerMap.delete(_this5._originalElement), _this5._originalElement.removeAttribute("data-vimeo-initialized")), _this5.element && "IFRAME" === _this5.element.nodeName && _this5.element.parentNode && _this5.element.parentNode.removeChild(_this5.element), resolve()
                                })
                            }
                        }, {
                            key: "getAutopause",
                            value: function() {
                                return this.get("autopause")
                            }
                        }, {
                            key: "setAutopause",
                            value: function(autopause) {
                                return this.set("autopause", autopause)
                            }
                        }, {
                            key: "getBuffered",
                            value: function() {
                                return this.get("buffered")
                            }
                        }, {
                            key: "getColor",
                            value: function() {
                                return this.get("color")
                            }
                        }, {
                            key: "setColor",
                            value: function(color) {
                                return this.set("color", color)
                            }
                        }, {
                            key: "getCuePoints",
                            value: function() {
                                return this.get("cuePoints")
                            }
                        }, {
                            key: "getCurrentTime",
                            value: function() {
                                return this.get("currentTime")
                            }
                        }, {
                            key: "setCurrentTime",
                            value: function(currentTime) {
                                return this.set("currentTime", currentTime)
                            }
                        }, {
                            key: "getDuration",
                            value: function() {
                                return this.get("duration")
                            }
                        }, {
                            key: "getEnded",
                            value: function() {
                                return this.get("ended")
                            }
                        }, {
                            key: "getLoop",
                            value: function() {
                                return this.get("loop")
                            }
                        }, {
                            key: "setLoop",
                            value: function(loop) {
                                return this.set("loop", loop)
                            }
                        }, {
                            key: "setMuted",
                            value: function(muted) {
                                return this.set("muted", muted)
                            }
                        }, {
                            key: "getMuted",
                            value: function() {
                                return this.get("muted")
                            }
                        }, {
                            key: "getPaused",
                            value: function() {
                                return this.get("paused")
                            }
                        }, {
                            key: "getPlaybackRate",
                            value: function() {
                                return this.get("playbackRate")
                            }
                        }, {
                            key: "setPlaybackRate",
                            value: function(playbackRate) {
                                return this.set("playbackRate", playbackRate)
                            }
                        }, {
                            key: "getPlayed",
                            value: function() {
                                return this.get("played")
                            }
                        }, {
                            key: "getSeekable",
                            value: function() {
                                return this.get("seekable")
                            }
                        }, {
                            key: "getSeeking",
                            value: function() {
                                return this.get("seeking")
                            }
                        }, {
                            key: "getTextTracks",
                            value: function() {
                                return this.get("textTracks")
                            }
                        }, {
                            key: "getVideoEmbedCode",
                            value: function() {
                                return this.get("videoEmbedCode")
                            }
                        }, {
                            key: "getVideoId",
                            value: function() {
                                return this.get("videoId")
                            }
                        }, {
                            key: "getVideoTitle",
                            value: function() {
                                return this.get("videoTitle")
                            }
                        }, {
                            key: "getVideoWidth",
                            value: function() {
                                return this.get("videoWidth")
                            }
                        }, {
                            key: "getVideoHeight",
                            value: function() {
                                return this.get("videoHeight")
                            }
                        }, {
                            key: "getVideoUrl",
                            value: function() {
                                return this.get("videoUrl")
                            }
                        }, {
                            key: "getVolume",
                            value: function() {
                                return this.get("volume")
                            }
                        }, {
                            key: "setVolume",
                            value: function(volume) {
                                return this.set("volume", volume)
                            }
                        }]), Player
                    }();
                return isNode || (function(argument_0) {
                    var parent = 0 < arguments.length && void 0 !== argument_0 ? argument_0 : document,
                        elements = [].slice.call(parent.querySelectorAll("[data-vimeo-id], [data-vimeo-url]")),
                        handleError = function(error) {
                            "console" in window && console.error && console.error("There was an error creating an embed: ".concat(error))
                        };
                    elements.forEach(function(element) {
                        try {
                            if (null !== element.getAttribute("data-vimeo-defer"))
                                return;
                            var params = getOEmbedParameters(element);
                            getOEmbedData(getVimeoUrl(params), params, element).then(function(data) {
                                return createEmbed(data, element)
                            }).catch(handleError)
                        } catch (error) {
                            handleError(error)
                        }
                    })
                }(), function(argument_0) {
                    var parent = 0 < arguments.length && void 0 !== argument_0 ? argument_0 : document;
                    if (!window.VimeoPlayerResizeEmbeds_) {
                        window.VimeoPlayerResizeEmbeds_ = !0;
                        var onMessage = function(event) {
                            if (isVimeoUrl(event.origin) && event.data && "spacechange" === event.data.event)
                                for (var iframes = parent.querySelectorAll("iframe"), i = 0; i < iframes.length; i++)
                                    if (iframes[i].contentWindow === event.source) {
                                        iframes[i].parentElement.style.paddingBottom = "".concat(event.data.data[0].bottom, "px");
                                        break
                                    }
                        };
                        window.addEventListener ? window.addEventListener("message", onMessage, !1) : window.attachEvent && window.attachEvent("onmessage", onMessage)
                    }
                }()), Player
            })
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}, require("timers").setImmediate)
    }, {
        timers: 35
    }],
    12: [function(require, module, exports) {
        !function(window, factory) {
            "use strict";
            "function" == typeof define && define.amd ? define(factory) : "object" == typeof module && module.exports ? module.exports = factory() : window.matchesSelector = factory()
        }(window, function() {
            "use strict";
            var matchesMethod = function() {
                var ElemProto = window.Element.prototype;
                if (ElemProto.matches)
                    return "matches";
                if (ElemProto.matchesSelector)
                    return "matchesSelector";
                for (var prefixes = ["webkit", "moz", "ms", "o"], i = 0; i < prefixes.length; i++) {
                    var method = prefixes[i] + "MatchesSelector";
                    if (ElemProto[method])
                        return method
                }
            }();
            return function(elem, selector) {
                return elem[matchesMethod](selector)
            }
        })
    }, {}],
    13: [function(require, module, exports) {
        var global,
            factory;
        global = "undefined" != typeof window ? window : this, factory = function() {
            "use strict";
            function EvEmitter() {}
            var proto = EvEmitter.prototype;
            return proto.on = function(eventName, listener) {
                if (eventName && listener) {
                    var events = this._events = this._events || {},
                        listeners = events[eventName] = events[eventName] || [];
                    return -1 == listeners.indexOf(listener) && listeners.push(listener), this
                }
            }, proto.once = function(eventName, listener) {
                if (eventName && listener) {
                    this.on(eventName, listener);
                    var onceEvents = this._onceEvents = this._onceEvents || {};
                    return (onceEvents[eventName] = onceEvents[eventName] || {})[listener] = !0, this
                }
            }, proto.off = function(eventName, listener) {
                var listeners = this._events && this._events[eventName];
                if (listeners && listeners.length) {
                    var index = listeners.indexOf(listener);
                    return -1 != index && listeners.splice(index, 1), this
                }
            }, proto.emitEvent = function(eventName, args) {
                var listeners = this._events && this._events[eventName];
                if (listeners && listeners.length) {
                    listeners = listeners.slice(0), args = args || [];
                    for (var onceListeners = this._onceEvents && this._onceEvents[eventName], i = 0; i < listeners.length; i++) {
                        var listener = listeners[i];
                        onceListeners && onceListeners[listener] && (this.off(eventName, listener), delete onceListeners[listener]), listener.apply(this, args)
                    }
                    return this
                }
            }, proto.allOff = function() {
                delete this._events, delete this._onceEvents
            }, EvEmitter
        }, "function" == typeof define && define.amd ? define(factory) : "object" == typeof module && module.exports ? module.exports = factory() : global.EvEmitter = factory()
    }, {}],
    14: [function(require, module, exports) {
        "use strict";
        var has = Object.prototype.hasOwnProperty,
            prefix = "~";
        function Events() {}
        function EE(fn, context, once) {
            this.fn = fn, this.context = context, this.once = once || !1
        }
        function addListener(emitter, event, fn, context, once) {
            if ("function" != typeof fn)
                throw new TypeError("The listener must be a function");
            var listener = new EE(fn, context || emitter, once),
                evt = prefix ? prefix + event : event;
            return emitter._events[evt] ? emitter._events[evt].fn ? emitter._events[evt] = [emitter._events[evt], listener] : emitter._events[evt].push(listener) : (emitter._events[evt] = listener, emitter._eventsCount++), emitter
        }
        function clearEvent(emitter, evt) {
            0 == --emitter._eventsCount ? emitter._events = new Events : delete emitter._events[evt]
        }
        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (prefix = !1)), EventEmitter.prototype.eventNames = function() {
            var events,
                name,
                names = [];
            if (0 === this._eventsCount)
                return names;
            for (name in events = this._events)
                has.call(events, name) && names.push(prefix ? name.slice(1) : name);
            return Object.getOwnPropertySymbols ? names.concat(Object.getOwnPropertySymbols(events)) : names
        }, EventEmitter.prototype.listeners = function(event) {
            var evt = prefix ? prefix + event : event,
                handlers = this._events[evt];
            if (!handlers)
                return [];
            if (handlers.fn)
                return [handlers.fn];
            for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)
                ee[i] = handlers[i].fn;
            return ee
        }, EventEmitter.prototype.listenerCount = function(event) {
            var evt = prefix ? prefix + event : event,
                listeners = this._events[evt];
            return listeners ? listeners.fn ? 1 : listeners.length : 0
        }, EventEmitter.prototype.emit = function(event, a1, a2, a3, a4, a5) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt])
                return !1;
            var args,
                i,
                listeners = this._events[evt],
                len = arguments.length;
            if (listeners.fn) {
                switch (listeners.once && this.removeListener(event, listeners.fn, void 0, !0), len) {
                case 1:
                    return listeners.fn.call(listeners.context), !0;
                case 2:
                    return listeners.fn.call(listeners.context, a1), !0;
                case 3:
                    return listeners.fn.call(listeners.context, a1, a2), !0;
                case 4:
                    return listeners.fn.call(listeners.context, a1, a2, a3), !0;
                case 5:
                    return listeners.fn.call(listeners.context, a1, a2, a3, a4), !0;
                case 6:
                    return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), !0
                }
                for (i = 1, args = new Array(len - 1); i < len; i++)
                    args[i - 1] = arguments[i];
                listeners.fn.apply(listeners.context, args)
            } else {
                var j,
                    length = listeners.length;
                for (i = 0; i < length; i++)
                    switch (listeners[i].once && this.removeListener(event, listeners[i].fn, void 0, !0), len) {
                    case 1:
                        listeners[i].fn.call(listeners[i].context);
                        break;
                    case 2:
                        listeners[i].fn.call(listeners[i].context, a1);
                        break;
                    case 3:
                        listeners[i].fn.call(listeners[i].context, a1, a2);
                        break;
                    case 4:
                        listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                        break;
                    default:
                        if (!args)
                            for (j = 1, args = new Array(len - 1); j < len; j++)
                                args[j - 1] = arguments[j];
                        listeners[i].fn.apply(listeners[i].context, args)
                    }
            }
            return !0
        }, EventEmitter.prototype.on = function(event, fn, context) {
            return addListener(this, event, fn, context, !1)
        }, EventEmitter.prototype.once = function(event, fn, context) {
            return addListener(this, event, fn, context, !0)
        }, EventEmitter.prototype.removeListener = function(event, fn, context, once) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt])
                return this;
            if (!fn)
                return clearEvent(this, evt), this;
            var listeners = this._events[evt];
            if (listeners.fn)
                listeners.fn !== fn || once && !listeners.once || context && listeners.context !== context || clearEvent(this, evt);
            else {
                for (var i = 0, events = [], length = listeners.length; i < length; i++)
                    (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) && events.push(listeners[i]);
                events.length ? this._events[evt] = 1 === events.length ? events[0] : events : clearEvent(this, evt)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function(event) {
            var evt;
            return event ? (evt = prefix ? prefix + event : event, this._events[evt] && clearEvent(this, evt)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = prefix, EventEmitter.EventEmitter = EventEmitter, void 0 !== module && (module.exports = EventEmitter)
    }, {}],
    15: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["desandro-matches-selector/matches-selector"], function(matchesSelector) {
                return factory(window, matchesSelector)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("desandro-matches-selector")) : window.fizzyUIUtils = factory(window, window.matchesSelector)
        }(window, function(window, matchesSelector) {
            "use strict";
            var utils = {
                    extend: function(a, b) {
                        for (var prop in b)
                            a[prop] = b[prop];
                        return a
                    },
                    modulo: function(num, div) {
                        return (num % div + div) % div
                    }
                },
                arraySlice = Array.prototype.slice;
            utils.makeArray = function(obj) {
                return Array.isArray(obj) ? obj : null == obj ? [] : "object" == typeof obj && "number" == typeof obj.length ? arraySlice.call(obj) : [obj]
            }, utils.removeFrom = function(ary, obj) {
                var index = ary.indexOf(obj);
                -1 != index && ary.splice(index, 1)
            }, utils.getParent = function(elem, selector) {
                for (; elem.parentNode && elem != document.body;)
                    if (elem = elem.parentNode, matchesSelector(elem, selector))
                        return elem
            }, utils.getQueryElement = function(elem) {
                return "string" == typeof elem ? document.querySelector(elem) : elem
            }, utils.handleEvent = function(event) {
                var method = "on" + event.type;
                this[method] && this[method](event)
            }, utils.filterFindElements = function(elems, selector) {
                elems = utils.makeArray(elems);
                var ffElems = [];
                return elems.forEach(function(elem) {
                    if (elem instanceof HTMLElement)
                        if (selector) {
                            matchesSelector(elem, selector) && ffElems.push(elem);
                            for (var childElems = elem.querySelectorAll(selector), i = 0; i < childElems.length; i++)
                                ffElems.push(childElems[i])
                        } else
                            ffElems.push(elem)
                }), ffElems
            }, utils.debounceMethod = function(_class, methodName, threshold) {
                threshold = threshold || 100;
                var method = _class.prototype[methodName],
                    timeoutName = methodName + "Timeout";
                _class.prototype[methodName] = function() {
                    var timeout = this[timeoutName];
                    clearTimeout(timeout);
                    var args = arguments,
                        _this = this;
                    this[timeoutName] = setTimeout(function() {
                        method.apply(_this, args), delete _this[timeoutName]
                    }, threshold)
                }
            }, utils.docReady = function(callback) {
                var readyState = document.readyState;
                "complete" == readyState || "interactive" == readyState ? setTimeout(callback) : document.addEventListener("DOMContentLoaded", callback)
            }, utils.toDashed = function(str) {
                return str.replace(/(.)([A-Z])/g, function(match, $1, $2) {
                    return $1 + "-" + $2
                }).toLowerCase()
            };
            var console = window.console;
            return utils.htmlInit = function(WidgetClass, namespace) {
                utils.docReady(function() {
                    var dashedNamespace = utils.toDashed(namespace),
                        dataAttr = "data-" + dashedNamespace,
                        dataAttrElems = document.querySelectorAll("[" + dataAttr + "]"),
                        jsDashElems = document.querySelectorAll(".js-" + dashedNamespace),
                        elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems)),
                        dataOptionsAttr = dataAttr + "-options",
                        jQuery = window.jQuery;
                    elems.forEach(function(elem) {
                        var options,
                            attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);
                        try {
                            options = attr && JSON.parse(attr)
                        } catch (error) {
                            return void (console && console.error("Error parsing " + dataAttr + " on " + elem.className + ": " + error))
                        }
                        var instance = new WidgetClass(elem, options);
                        jQuery && jQuery.data(elem, namespace, instance)
                    })
                })
            }, utils
        })
    }, {
        "desandro-matches-selector": 12
    }],
    16: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["./flickity", "fizzy-ui-utils/utils"], function(Flickity, utils) {
                return factory(window, Flickity, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("./flickity"), require("fizzy-ui-utils")) : factory(window, window.Flickity, window.fizzyUIUtils)
        }(window, function(window, Flickity, utils) {
            "use strict";
            var proto = Flickity.prototype;
            return proto.insert = function(elems, index) {
                var cells = this._makeCells(elems);
                if (cells && cells.length) {
                    var len = this.cells.length;
                    index = void 0 === index ? len : index;
                    var fragment = function(cells) {
                            var fragment = document.createDocumentFragment();
                            return cells.forEach(function(cell) {
                                fragment.appendChild(cell.element)
                            }), fragment
                        }(cells),
                        isAppend = index == len;
                    if (isAppend)
                        this.slider.appendChild(fragment);
                    else {
                        var insertCellElement = this.cells[index].element;
                        this.slider.insertBefore(fragment, insertCellElement)
                    }
                    if (0 === index)
                        this.cells = cells.concat(this.cells);
                    else if (isAppend)
                        this.cells = this.cells.concat(cells);
                    else {
                        var endCells = this.cells.splice(index, len - index);
                        this.cells = this.cells.concat(cells).concat(endCells)
                    }
                    this._sizeCells(cells), this.cellChange(index, !0)
                }
            }, proto.append = function(elems) {
                this.insert(elems, this.cells.length)
            }, proto.prepend = function(elems) {
                this.insert(elems, 0)
            }, proto.remove = function(elems) {
                var cells = this.getCells(elems);
                if (cells && cells.length) {
                    var minCellIndex = this.cells.length - 1;
                    cells.forEach(function(cell) {
                        cell.remove();
                        var index = this.cells.indexOf(cell);
                        minCellIndex = Math.min(index, minCellIndex), utils.removeFrom(this.cells, cell)
                    }, this), this.cellChange(minCellIndex, !0)
                }
            }, proto.cellSizeChange = function(elem) {
                var cell = this.getCell(elem);
                if (cell) {
                    cell.getSize();
                    var index = this.cells.indexOf(cell);
                    this.cellChange(index)
                }
            }, proto.cellChange = function(changedCellIndex, isPositioningSlider) {
                var prevSelectedElem = this.selectedElement;
                this._positionCells(changedCellIndex), this._getWrapShiftCells(), this.setGallerySize();
                var cell = this.getCell(prevSelectedElem);
                cell && (this.selectedIndex = this.getCellSlideIndex(cell)), this.selectedIndex = Math.min(this.slides.length - 1, this.selectedIndex), this.emitEvent("cellChange", [changedCellIndex]), this.select(this.selectedIndex), isPositioningSlider && this.positionSliderAtSelected()
            }, Flickity
        })
    }, {
        "./flickity": 20,
        "fizzy-ui-utils": 15
    }],
    17: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["fizzy-ui-utils/utils"], function(utils) {
                return factory(window, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("fizzy-ui-utils")) : (window.Flickity = window.Flickity || {}, window.Flickity.animatePrototype = factory(window, window.fizzyUIUtils))
        }(window, function(window, utils) {
            "use strict";
            var proto = {
                startAnimation: function() {
                    this.isAnimating || (this.isAnimating = !0, this.restingFrames = 0, this.animate())
                },
                animate: function() {
                    this.applyDragForce(), this.applySelectedAttraction();
                    var previousX = this.x;
                    if (this.integratePhysics(), this.positionSlider(), this.settle(previousX), this.isAnimating) {
                        var _this = this;
                        requestAnimationFrame(function() {
                            _this.animate()
                        })
                    }
                },
                positionSlider: function() {
                    var x = this.x;
                    this.options.wrapAround && 1 < this.cells.length && (x = utils.modulo(x, this.slideableWidth), x -= this.slideableWidth, this.shiftWrapCells(x)), this.setTranslateX(x, this.isAnimating), this.dispatchScrollEvent()
                },
                setTranslateX: function(x, is3d) {
                    x += this.cursorPosition, x = this.options.rightToLeft ? -x : x;
                    var translateX = this.getPositionValue(x);
                    this.slider.style.transform = is3d ? "translate3d(" + translateX + ",0,0)" : "translateX(" + translateX + ")"
                },
                dispatchScrollEvent: function() {
                    var firstSlide = this.slides[0];
                    if (firstSlide) {
                        var positionX = -this.x - firstSlide.target,
                            progress = positionX / this.slidesWidth;
                        this.dispatchEvent("scroll", null, [progress, positionX])
                    }
                },
                positionSliderAtSelected: function() {
                    this.cells.length && (this.x = -this.selectedSlide.target, this.velocity = 0, this.positionSlider())
                },
                getPositionValue: function(position) {
                    return this.options.percentPosition ? .01 * Math.round(position / this.size.innerWidth * 1e4) + "%" : Math.round(position) + "px"
                },
                settle: function(previousX) {
                    this.isPointerDown || Math.round(100 * this.x) != Math.round(100 * previousX) || this.restingFrames++, 2 < this.restingFrames && (this.isAnimating = !1, delete this.isFreeScrolling, this.positionSlider(), this.dispatchEvent("settle", null, [this.selectedIndex]))
                },
                shiftWrapCells: function(x) {
                    var beforeGap = this.cursorPosition + x;
                    this._shiftCells(this.beforeShiftCells, beforeGap, -1);
                    var afterGap = this.size.innerWidth - (x + this.slideableWidth + this.cursorPosition);
                    this._shiftCells(this.afterShiftCells, afterGap, 1)
                },
                _shiftCells: function(cells, gap, shift) {
                    for (var i = 0; i < cells.length; i++) {
                        var cell = cells[i],
                            cellShift = 0 < gap ? shift : 0;
                        cell.wrapShift(cellShift), gap -= cell.size.outerWidth
                    }
                },
                _unshiftCells: function(cells) {
                    if (cells && cells.length)
                        for (var i = 0; i < cells.length; i++)
                            cells[i].wrapShift(0)
                },
                integratePhysics: function() {
                    this.x += this.velocity, this.velocity *= this.getFrictionFactor()
                },
                applyForce: function(force) {
                    this.velocity += force
                },
                getFrictionFactor: function() {
                    return 1 - this.options[this.isFreeScrolling ? "freeScrollFriction" : "friction"]
                },
                getRestingPosition: function() {
                    return this.x + this.velocity / (1 - this.getFrictionFactor())
                },
                applyDragForce: function() {
                    if (this.isDraggable && this.isPointerDown) {
                        var dragForce = this.dragX - this.x - this.velocity;
                        this.applyForce(dragForce)
                    }
                },
                applySelectedAttraction: function() {
                    if (!(this.isDraggable && this.isPointerDown) && !this.isFreeScrolling && this.slides.length) {
                        var force = (-1 * this.selectedSlide.target - this.x) * this.options.selectedAttraction;
                        this.applyForce(force)
                    }
                }
            };
            return proto
        })
    }, {
        "fizzy-ui-utils": 15
    }],
    18: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["get-size/get-size"], function(getSize) {
                return factory(window, getSize)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("get-size")) : (window.Flickity = window.Flickity || {}, window.Flickity.Cell = factory(window, window.getSize))
        }(window, function(window, getSize) {
            "use strict";
            function Cell(elem, parent) {
                this.element = elem, this.parent = parent, this.create()
            }
            var proto = Cell.prototype;
            return proto.create = function() {
                this.element.style.position = "absolute", this.element.setAttribute("aria-hidden", "true"), this.x = 0, this.shift = 0
            }, proto.destroy = function() {
                this.unselect(), this.element.style.position = "";
                var side = this.parent.originSide;
                this.element.style[side] = ""
            }, proto.getSize = function() {
                this.size = getSize(this.element)
            }, proto.setPosition = function(x) {
                this.x = x, this.updateTarget(), this.renderPosition(x)
            }, proto.updateTarget = proto.setDefaultTarget = function() {
                var marginProperty = "left" == this.parent.originSide ? "marginLeft" : "marginRight";
                this.target = this.x + this.size[marginProperty] + this.size.width * this.parent.cellAlign
            }, proto.renderPosition = function(x) {
                var side = this.parent.originSide;
                this.element.style[side] = this.parent.getPositionValue(x)
            }, proto.select = function() {
                this.element.classList.add("is-selected"), this.element.removeAttribute("aria-hidden")
            }, proto.unselect = function() {
                this.element.classList.remove("is-selected"), this.element.setAttribute("aria-hidden", "true")
            }, proto.wrapShift = function(shift) {
                this.shift = shift, this.renderPosition(this.x + this.parent.slideableWidth * shift)
            }, proto.remove = function() {
                this.element.parentNode.removeChild(this.element)
            }, Cell
        })
    }, {
        "get-size": 28
    }],
    19: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["./flickity", "unidragger/unidragger", "fizzy-ui-utils/utils"], function(Flickity, Unidragger, utils) {
                return factory(window, Flickity, Unidragger, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("./flickity"), require("unidragger"), require("fizzy-ui-utils")) : window.Flickity = factory(window, window.Flickity, window.Unidragger, window.fizzyUIUtils)
        }(window, function(window, Flickity, Unidragger, utils) {
            "use strict";
            utils.extend(Flickity.defaults, {
                draggable: ">1",
                dragThreshold: 3
            }), Flickity.createMethods.push("_createDrag");
            var proto = Flickity.prototype;
            utils.extend(proto, Unidragger.prototype), proto._touchActionValue = "pan-y";
            var isTouch = "createTouch" in document,
                isTouchmoveScrollCanceled = !1;
            proto._createDrag = function() {
                this.on("activate", this.onActivateDrag), this.on("uiChange", this._uiChangeDrag), this.on("deactivate", this.onDeactivateDrag), this.on("cellChange", this.updateDraggable), isTouch && !isTouchmoveScrollCanceled && (window.addEventListener("touchmove", function() {}), isTouchmoveScrollCanceled = !0)
            }, proto.onActivateDrag = function() {
                this.handles = [this.viewport], this.bindHandles(), this.updateDraggable()
            }, proto.onDeactivateDrag = function() {
                this.unbindHandles(), this.element.classList.remove("is-draggable")
            }, proto.updateDraggable = function() {
                ">1" == this.options.draggable ? this.isDraggable = 1 < this.slides.length : this.isDraggable = this.options.draggable, this.isDraggable ? this.element.classList.add("is-draggable") : this.element.classList.remove("is-draggable")
            }, proto.bindDrag = function() {
                this.options.draggable = !0, this.updateDraggable()
            }, proto.unbindDrag = function() {
                this.options.draggable = !1, this.updateDraggable()
            }, proto._uiChangeDrag = function() {
                delete this.isFreeScrolling
            }, proto.pointerDown = function(event, pointer) {
                this.isDraggable ? this.okayPointerDown(event) && (this._pointerDownPreventDefault(event), this.pointerDownFocus(event), document.activeElement != this.element && this.pointerDownBlur(), this.dragX = this.x, this.viewport.classList.add("is-pointer-down"), this.pointerDownScroll = getScrollPosition(), window.addEventListener("scroll", this), this._pointerDownDefault(event, pointer)) : this._pointerDownDefault(event, pointer)
            }, proto._pointerDownDefault = function(event, pointer) {
                this.pointerDownPointer = {
                    pageX: pointer.pageX,
                    pageY: pointer.pageY
                }, this._bindPostStartEvents(event), this.dispatchEvent("pointerDown", event, [pointer])
            };
            var focusNodes = {
                INPUT: !0,
                TEXTAREA: !0,
                SELECT: !0
            };
            function getScrollPosition() {
                return {
                    x: window.pageXOffset,
                    y: window.pageYOffset
                }
            }
            return proto.pointerDownFocus = function(event) {
                focusNodes[event.target.nodeName] || this.focus()
            }, proto._pointerDownPreventDefault = function(event) {
                var isTouchStart = "touchstart" == event.type,
                    isTouchPointer = "touch" == event.pointerType,
                    isFocusNode = focusNodes[event.target.nodeName];
                isTouchStart || isTouchPointer || isFocusNode || event.preventDefault()
            }, proto.hasDragStarted = function(moveVector) {
                return Math.abs(moveVector.x) > this.options.dragThreshold
            }, proto.pointerUp = function(event, pointer) {
                delete this.isTouchScrolling, this.viewport.classList.remove("is-pointer-down"), this.dispatchEvent("pointerUp", event, [pointer]), this._dragPointerUp(event, pointer)
            }, proto.pointerDone = function() {
                window.removeEventListener("scroll", this), delete this.pointerDownScroll
            }, proto.dragStart = function(event, pointer) {
                this.isDraggable && (this.dragStartPosition = this.x, this.startAnimation(), window.removeEventListener("scroll", this), this.dispatchEvent("dragStart", event, [pointer]))
            }, proto.pointerMove = function(event, pointer) {
                var moveVector = this._dragPointerMove(event, pointer);
                this.dispatchEvent("pointerMove", event, [pointer, moveVector]), this._dragMove(event, pointer, moveVector)
            }, proto.dragMove = function(event, pointer, moveVector) {
                if (this.isDraggable) {
                    event.preventDefault(), this.previousDragX = this.dragX;
                    var direction = this.options.rightToLeft ? -1 : 1;
                    this.options.wrapAround && (moveVector.x = moveVector.x % this.slideableWidth);
                    var dragX = this.dragStartPosition + moveVector.x * direction;
                    if (!this.options.wrapAround && this.slides.length) {
                        var originBound = Math.max(-this.slides[0].target, this.dragStartPosition);
                        dragX = originBound < dragX ? .5 * (dragX + originBound) : dragX;
                        var endBound = Math.min(-this.getLastSlide().target, this.dragStartPosition);
                        dragX = dragX < endBound ? .5 * (dragX + endBound) : dragX
                    }
                    this.dragX = dragX, this.dragMoveTime = new Date, this.dispatchEvent("dragMove", event, [pointer, moveVector])
                }
            }, proto.dragEnd = function(event, pointer) {
                if (this.isDraggable) {
                    this.options.freeScroll && (this.isFreeScrolling = !0);
                    var index = this.dragEndRestingSelect();
                    if (this.options.freeScroll && !this.options.wrapAround) {
                        var restingX = this.getRestingPosition();
                        this.isFreeScrolling = -restingX > this.slides[0].target && -restingX < this.getLastSlide().target
                    } else
                        this.options.freeScroll || index != this.selectedIndex || (index += this.dragEndBoostSelect());
                    delete this.previousDragX, this.isDragSelect = this.options.wrapAround, this.select(index), delete this.isDragSelect, this.dispatchEvent("dragEnd", event, [pointer])
                }
            }, proto.dragEndRestingSelect = function() {
                var restingX = this.getRestingPosition(),
                    distance = Math.abs(this.getSlideDistance(-restingX, this.selectedIndex)),
                    positiveResting = this._getClosestResting(restingX, distance, 1),
                    negativeResting = this._getClosestResting(restingX, distance, -1);
                return positiveResting.distance < negativeResting.distance ? positiveResting.index : negativeResting.index
            }, proto._getClosestResting = function(restingX, distance, increment) {
                for (var index = this.selectedIndex, minDistance = 1 / 0, condition = this.options.contain && !this.options.wrapAround ? function(d, md) {
                        return d <= md
                    } : function(d, md) {
                        return d < md
                    }; condition(distance, minDistance) && (index += increment, minDistance = distance, null !== (distance = this.getSlideDistance(-restingX, index)));)
                    distance = Math.abs(distance);
                return {
                    distance: minDistance,
                    index: index - increment
                }
            }, proto.getSlideDistance = function(x, index) {
                var len = this.slides.length,
                    isWrapAround = this.options.wrapAround && 1 < len,
                    slideIndex = isWrapAround ? utils.modulo(index, len) : index,
                    slide = this.slides[slideIndex];
                if (!slide)
                    return null;
                var wrap = isWrapAround ? this.slideableWidth * Math.floor(index / len) : 0;
                return x - (slide.target + wrap)
            }, proto.dragEndBoostSelect = function() {
                if (void 0 === this.previousDragX || !this.dragMoveTime || 100 < new Date - this.dragMoveTime)
                    return 0;
                var distance = this.getSlideDistance(-this.dragX, this.selectedIndex),
                    delta = this.previousDragX - this.dragX;
                return 0 < distance && 0 < delta ? 1 : distance < 0 && delta < 0 ? -1 : 0
            }, proto.staticClick = function(event, pointer) {
                var clickedCell = this.getParentCell(event.target),
                    cellElem = clickedCell && clickedCell.element,
                    cellIndex = clickedCell && this.cells.indexOf(clickedCell);
                this.dispatchEvent("staticClick", event, [pointer, cellElem, cellIndex])
            }, proto.onscroll = function() {
                var scroll = getScrollPosition(),
                    scrollMoveX = this.pointerDownScroll.x - scroll.x,
                    scrollMoveY = this.pointerDownScroll.y - scroll.y;
                (3 < Math.abs(scrollMoveX) || 3 < Math.abs(scrollMoveY)) && this._pointerDone()
            }, Flickity
        })
    }, {
        "./flickity": 20,
        "fizzy-ui-utils": 15,
        unidragger: 37
    }],
    20: [function(require, module, exports) {
        !function(window, factory) {
            if ("function" == typeof define && define.amd)
                define(["ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./cell", "./slide", "./animate"], function(EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {
                    return factory(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype)
                });
            else if ("object" == typeof module && module.exports)
                module.exports = factory(window, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./cell"), require("./slide"), require("./animate"));
            else {
                var _Flickity = window.Flickity;
                window.Flickity = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, _Flickity.Cell, _Flickity.Slide, _Flickity.animatePrototype)
            }
        }(window, function(window, EvEmitter, getSize, utils, Cell, Slide, animatePrototype) {
            "use strict";
            var jQuery = window.jQuery,
                getComputedStyle = window.getComputedStyle,
                console = window.console;
            function moveElements(elems, toElem) {
                for (elems = utils.makeArray(elems); elems.length;)
                    toElem.appendChild(elems.shift())
            }
            var GUID = 0,
                instances = {};
            function Flickity(element, options) {
                var queryElement = utils.getQueryElement(element);
                if (queryElement) {
                    if (this.element = queryElement, this.element.flickityGUID) {
                        var instance = instances[this.element.flickityGUID];
                        return instance.option(options), instance
                    }
                    jQuery && (this.$element = jQuery(this.element)), this.options = utils.extend({}, this.constructor.defaults), this.option(options), this._create()
                } else
                    console && console.error("Bad element for Flickity: " + (queryElement || element))
            }
            Flickity.defaults = {
                accessibility: !0,
                cellAlign: "center",
                freeScrollFriction: .075,
                friction: .28,
                namespaceJQueryEvents: !0,
                percentPosition: !0,
                resize: !0,
                selectedAttraction: .025,
                setGallerySize: !0
            }, Flickity.createMethods = [];
            var proto = Flickity.prototype;
            utils.extend(proto, EvEmitter.prototype), proto._create = function() {
                var id = this.guid = ++GUID;
                for (var eventName in this.element.flickityGUID = id, (instances[id] = this).selectedIndex = 0, this.restingFrames = 0, this.x = 0, this.velocity = 0, this.originSide = this.options.rightToLeft ? "right" : "left", this.viewport = document.createElement("div"), this.viewport.className = "flickity-viewport", this._createSlider(), (this.options.resize || this.options.watchCSS) && window.addEventListener("resize", this), this.options.on) {
                    var listener = this.options.on[eventName];
                    this.on(eventName, listener)
                }
                Flickity.createMethods.forEach(function(method) {
                    this[method]()
                }, this), this.options.watchCSS ? this.watchCSS() : this.activate()
            }, proto.option = function(opts) {
                utils.extend(this.options, opts)
            }, proto.activate = function() {
                this.isActive || (this.isActive = !0, this.element.classList.add("flickity-enabled"), this.options.rightToLeft && this.element.classList.add("flickity-rtl"), this.getSize(), moveElements(this._filterFindCellElements(this.element.children), this.slider), this.viewport.appendChild(this.slider), this.element.appendChild(this.viewport), this.reloadCells(), this.options.accessibility && (this.element.tabIndex = 0, this.element.addEventListener("keydown", this)), this.emitEvent("activate"), this.selectInitialIndex(), this.isInitActivated = !0, this.dispatchEvent("ready"))
            }, proto._createSlider = function() {
                var slider = document.createElement("div");
                slider.className = "flickity-slider", slider.style[this.originSide] = 0, this.slider = slider
            }, proto._filterFindCellElements = function(elems) {
                return utils.filterFindElements(elems, this.options.cellSelector)
            }, proto.reloadCells = function() {
                this.cells = this._makeCells(this.slider.children), this.positionCells(), this._getWrapShiftCells(), this.setGallerySize()
            }, proto._makeCells = function(elems) {
                return this._filterFindCellElements(elems).map(function(cellElem) {
                    return new Cell(cellElem, this)
                }, this)
            }, proto.getLastCell = function() {
                return this.cells[this.cells.length - 1]
            }, proto.getLastSlide = function() {
                return this.slides[this.slides.length - 1]
            }, proto.positionCells = function() {
                this._sizeCells(this.cells), this._positionCells(0)
            }, proto._positionCells = function(index) {
                index = index || 0, this.maxCellHeight = index && this.maxCellHeight || 0;
                var cellX = 0;
                if (0 < index) {
                    var startCell = this.cells[index - 1];
                    cellX = startCell.x + startCell.size.outerWidth
                }
                for (var len = this.cells.length, i = index; i < len; i++) {
                    var cell = this.cells[i];
                    cell.setPosition(cellX), cellX += cell.size.outerWidth, this.maxCellHeight = Math.max(cell.size.outerHeight, this.maxCellHeight)
                }
                this.slideableWidth = cellX, this.updateSlides(), this._containSlides(), this.slidesWidth = len ? this.getLastSlide().target - this.slides[0].target : 0
            }, proto._sizeCells = function(cells) {
                cells.forEach(function(cell) {
                    cell.getSize()
                })
            }, proto.updateSlides = function() {
                if (this.slides = [], this.cells.length) {
                    var slide = new Slide(this);
                    this.slides.push(slide);
                    var nextMargin = "left" == this.originSide ? "marginRight" : "marginLeft",
                        canCellFit = this._getCanCellFit();
                    this.cells.forEach(function(cell, i) {
                        if (slide.cells.length) {
                            var slideWidth = slide.outerWidth - slide.firstMargin + (cell.size.outerWidth - cell.size[nextMargin]);
                            canCellFit.call(this, i, slideWidth) || (slide.updateTarget(), slide = new Slide(this), this.slides.push(slide)), slide.addCell(cell)
                        } else
                            slide.addCell(cell)
                    }, this), slide.updateTarget(), this.updateSelectedSlide()
                }
            }, proto._getCanCellFit = function() {
                var groupCells = this.options.groupCells;
                if (!groupCells)
                    return function() {
                        return !1
                    };
                if ("number" == typeof groupCells) {
                    var number = parseInt(groupCells, 10);
                    return function(i) {
                        return i % number != 0
                    }
                }
                var percentMatch = "string" == typeof groupCells && groupCells.match(/^(\d+)%$/),
                    percent = percentMatch ? parseInt(percentMatch[1], 10) / 100 : 1;
                return function(i, slideWidth) {
                    return slideWidth <= (this.size.innerWidth + 1) * percent
                }
            }, proto._init = proto.reposition = function() {
                this.positionCells(), this.positionSliderAtSelected()
            }, proto.getSize = function() {
                this.size = getSize(this.element), this.setCellAlign(), this.cursorPosition = this.size.innerWidth * this.cellAlign
            };
            var cellAlignShorthands = {
                center: {
                    left: .5,
                    right: .5
                },
                left: {
                    left: 0,
                    right: 1
                },
                right: {
                    right: 0,
                    left: 1
                }
            };
            return proto.setCellAlign = function() {
                var shorthand = cellAlignShorthands[this.options.cellAlign];
                this.cellAlign = shorthand ? shorthand[this.originSide] : this.options.cellAlign
            }, proto.setGallerySize = function() {
                if (this.options.setGallerySize) {
                    var height = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;
                    this.viewport.style.height = height + "px"
                }
            }, proto._getWrapShiftCells = function() {
                if (this.options.wrapAround) {
                    this._unshiftCells(this.beforeShiftCells), this._unshiftCells(this.afterShiftCells);
                    var gapX = this.cursorPosition,
                        cellIndex = this.cells.length - 1;
                    this.beforeShiftCells = this._getGapCells(gapX, cellIndex, -1), gapX = this.size.innerWidth - this.cursorPosition, this.afterShiftCells = this._getGapCells(gapX, 0, 1)
                }
            }, proto._getGapCells = function(gapX, cellIndex, increment) {
                for (var cells = []; 0 < gapX;) {
                    var cell = this.cells[cellIndex];
                    if (!cell)
                        break;
                    cells.push(cell), cellIndex += increment, gapX -= cell.size.outerWidth
                }
                return cells
            }, proto._containSlides = function() {
                if (this.options.contain && !this.options.wrapAround && this.cells.length) {
                    var isRightToLeft = this.options.rightToLeft,
                        beginMargin = isRightToLeft ? "marginRight" : "marginLeft",
                        endMargin = isRightToLeft ? "marginLeft" : "marginRight",
                        contentWidth = this.slideableWidth - this.getLastCell().size[endMargin],
                        isContentSmaller = contentWidth < this.size.innerWidth,
                        beginBound = this.cursorPosition + this.cells[0].size[beginMargin],
                        endBound = contentWidth - this.size.innerWidth * (1 - this.cellAlign);
                    this.slides.forEach(function(slide) {
                        isContentSmaller ? slide.target = contentWidth * this.cellAlign : (slide.target = Math.max(slide.target, beginBound), slide.target = Math.min(slide.target, endBound))
                    }, this)
                }
            }, proto.dispatchEvent = function(type, event, args) {
                var emitArgs = event ? [event].concat(args) : args;
                if (this.emitEvent(type, emitArgs), jQuery && this.$element) {
                    var $event = type += this.options.namespaceJQueryEvents ? ".flickity" : "";
                    if (event) {
                        var jQEvent = jQuery.Event(event);
                        jQEvent.type = type, $event = jQEvent
                    }
                    this.$element.trigger($event, args)
                }
            }, proto.select = function(index, isWrap, isInstant) {
                if (this.isActive && (index = parseInt(index, 10), this._wrapSelect(index), (this.options.wrapAround || isWrap) && (index = utils.modulo(index, this.slides.length)), this.slides[index])) {
                    var prevIndex = this.selectedIndex;
                    this.selectedIndex = index, this.updateSelectedSlide(), isInstant ? this.positionSliderAtSelected() : this.startAnimation(), this.options.adaptiveHeight && this.setGallerySize(), this.dispatchEvent("select", null, [index]), index != prevIndex && this.dispatchEvent("change", null, [index]), this.dispatchEvent("cellSelect")
                }
            }, proto._wrapSelect = function(index) {
                var len = this.slides.length;
                if (!(this.options.wrapAround && 1 < len))
                    return index;
                var wrapIndex = utils.modulo(index, len),
                    delta = Math.abs(wrapIndex - this.selectedIndex),
                    backWrapDelta = Math.abs(wrapIndex + len - this.selectedIndex),
                    forewardWrapDelta = Math.abs(wrapIndex - len - this.selectedIndex);
                !this.isDragSelect && backWrapDelta < delta ? index += len : !this.isDragSelect && forewardWrapDelta < delta && (index -= len), index < 0 ? this.x -= this.slideableWidth : len <= index && (this.x += this.slideableWidth)
            }, proto.previous = function(isWrap, isInstant) {
                this.select(this.selectedIndex - 1, isWrap, isInstant)
            }, proto.next = function(isWrap, isInstant) {
                this.select(this.selectedIndex + 1, isWrap, isInstant)
            }, proto.updateSelectedSlide = function() {
                var slide = this.slides[this.selectedIndex];
                slide && (this.unselectSelectedSlide(), (this.selectedSlide = slide).select(), this.selectedCells = slide.cells, this.selectedElements = slide.getCellElements(), this.selectedCell = slide.cells[0], this.selectedElement = this.selectedElements[0])
            }, proto.unselectSelectedSlide = function() {
                this.selectedSlide && this.selectedSlide.unselect()
            }, proto.selectInitialIndex = function() {
                var initialIndex = this.options.initialIndex;
                if (this.isInitActivated)
                    this.select(this.selectedIndex, !1, !0);
                else {
                    if (initialIndex && "string" == typeof initialIndex)
                        if (this.queryCell(initialIndex))
                            return void this.selectCell(initialIndex, !1, !0);
                    var index = 0;
                    initialIndex && this.slides[initialIndex] && (index = initialIndex), this.select(index, !1, !0)
                }
            }, proto.selectCell = function(value, isWrap, isInstant) {
                var cell = this.queryCell(value);
                if (cell) {
                    var index = this.getCellSlideIndex(cell);
                    this.select(index, isWrap, isInstant)
                }
            }, proto.getCellSlideIndex = function(cell) {
                for (var i = 0; i < this.slides.length; i++) {
                    if (-1 != this.slides[i].cells.indexOf(cell))
                        return i
                }
            }, proto.getCell = function(elem) {
                for (var i = 0; i < this.cells.length; i++) {
                    var cell = this.cells[i];
                    if (cell.element == elem)
                        return cell
                }
            }, proto.getCells = function(elems) {
                elems = utils.makeArray(elems);
                var cells = [];
                return elems.forEach(function(elem) {
                    var cell = this.getCell(elem);
                    cell && cells.push(cell)
                }, this), cells
            }, proto.getCellElements = function() {
                return this.cells.map(function(cell) {
                    return cell.element
                })
            }, proto.getParentCell = function(elem) {
                var cell = this.getCell(elem);
                return cell || (elem = utils.getParent(elem, ".flickity-slider > *"), this.getCell(elem))
            }, proto.getAdjacentCellElements = function(adjCount, index) {
                if (!adjCount)
                    return this.selectedSlide.getCellElements();
                index = void 0 === index ? this.selectedIndex : index;
                var len = this.slides.length;
                if (len <= 1 + 2 * adjCount)
                    return this.getCellElements();
                for (var cellElems = [], i = index - adjCount; i <= index + adjCount; i++) {
                    var slideIndex = this.options.wrapAround ? utils.modulo(i, len) : i,
                        slide = this.slides[slideIndex];
                    slide && (cellElems = cellElems.concat(slide.getCellElements()))
                }
                return cellElems
            }, proto.queryCell = function(selector) {
                if ("number" == typeof selector)
                    return this.cells[selector];
                if ("string" == typeof selector) {
                    if (selector.match(/^[#\.]?[\d\/]/))
                        return;
                    selector = this.element.querySelector(selector)
                }
                return this.getCell(selector)
            }, proto.uiChange = function() {
                this.emitEvent("uiChange")
            }, proto.childUIPointerDown = function(event) {
                "touchstart" != event.type && event.preventDefault(), this.focus()
            }, proto.onresize = function() {
                this.watchCSS(), this.resize()
            }, utils.debounceMethod(Flickity, "onresize", 150), proto.resize = function() {
                if (this.isActive) {
                    this.getSize(), this.options.wrapAround && (this.x = utils.modulo(this.x, this.slideableWidth)), this.positionCells(), this._getWrapShiftCells(), this.setGallerySize(), this.emitEvent("resize");
                    var selectedElement = this.selectedElements && this.selectedElements[0];
                    this.selectCell(selectedElement, !1, !0)
                }
            }, proto.watchCSS = function() {
                this.options.watchCSS && (-1 != getComputedStyle(this.element, ":after").content.indexOf("flickity") ? this.activate() : this.deactivate())
            }, proto.onkeydown = function(event) {
                var isNotFocused = document.activeElement && document.activeElement != this.element;
                if (this.options.accessibility && !isNotFocused) {
                    var handler = Flickity.keyboardHandlers[event.keyCode];
                    handler && handler.call(this)
                }
            }, Flickity.keyboardHandlers = {
                37: function() {
                    var leftMethod = this.options.rightToLeft ? "next" : "previous";
                    this.uiChange(), this[leftMethod]()
                },
                39: function() {
                    var rightMethod = this.options.rightToLeft ? "previous" : "next";
                    this.uiChange(), this[rightMethod]()
                }
            }, proto.focus = function() {
                var prevScrollY = window.pageYOffset;
                this.element.focus({
                    preventScroll: !0
                }), window.pageYOffset != prevScrollY && window.scrollTo(window.pageXOffset, prevScrollY)
            }, proto.deactivate = function() {
                this.isActive && (this.element.classList.remove("flickity-enabled"), this.element.classList.remove("flickity-rtl"), this.unselectSelectedSlide(), this.cells.forEach(function(cell) {
                    cell.destroy()
                }), this.element.removeChild(this.viewport), moveElements(this.slider.children, this.element), this.options.accessibility && (this.element.removeAttribute("tabIndex"), this.element.removeEventListener("keydown", this)), this.isActive = !1, this.emitEvent("deactivate"))
            }, proto.destroy = function() {
                this.deactivate(), window.removeEventListener("resize", this), this.allOff(), this.emitEvent("destroy"), jQuery && this.$element && jQuery.removeData(this.element, "flickity"), delete this.element.flickityGUID, delete instances[this.guid]
            }, utils.extend(proto, animatePrototype), Flickity.data = function(elem) {
                var id = (elem = utils.getQueryElement(elem)) && elem.flickityGUID;
                return id && instances[id]
            }, utils.htmlInit(Flickity, "flickity"), jQuery && jQuery.bridget && jQuery.bridget("flickity", Flickity), Flickity.setJQuery = function(jq) {
                jQuery = jq
            }, Flickity.Cell = Cell, Flickity.Slide = Slide, Flickity
        })
    }, {
        "./animate": 17,
        "./cell": 18,
        "./slide": 26,
        "ev-emitter": 13,
        "fizzy-ui-utils": 15,
        "get-size": 28
    }],
    21: [function(require, module, exports) {
        var factory;
        window, factory = function(Flickity) {
            return Flickity
        }, "function" == typeof define && define.amd ? define(["./flickity", "./drag", "./prev-next-button", "./page-dots", "./player", "./add-remove-cell", "./lazyload"], factory) : "object" == typeof module && module.exports && (module.exports = factory(require("./flickity"), require("./drag"), require("./prev-next-button"), require("./page-dots"), require("./player"), require("./add-remove-cell"), require("./lazyload")))
    }, {
        "./add-remove-cell": 16,
        "./drag": 19,
        "./flickity": 20,
        "./lazyload": 22,
        "./page-dots": 23,
        "./player": 24,
        "./prev-next-button": 25
    }],
    22: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["./flickity", "fizzy-ui-utils/utils"], function(Flickity, utils) {
                return factory(window, Flickity, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("./flickity"), require("fizzy-ui-utils")) : factory(window, window.Flickity, window.fizzyUIUtils)
        }(window, function(window, Flickity, utils) {
            "use strict";
            Flickity.createMethods.push("_createLazyload");
            var proto = Flickity.prototype;
            function LazyLoader(img, flickity) {
                this.img = img, this.flickity = flickity, this.load()
            }
            return proto._createLazyload = function() {
                this.on("select", this.lazyLoad)
            }, proto.lazyLoad = function() {
                var lazyLoad = this.options.lazyLoad;
                if (lazyLoad) {
                    var adjCount = "number" == typeof lazyLoad ? lazyLoad : 0,
                        cellElems = this.getAdjacentCellElements(adjCount),
                        lazyImages = [];
                    cellElems.forEach(function(cellElem) {
                        var lazyCellImages = function(cellElem) {
                            if ("IMG" == cellElem.nodeName) {
                                var lazyloadAttr = cellElem.getAttribute("data-flickity-lazyload"),
                                    srcAttr = cellElem.getAttribute("data-flickity-lazyload-src"),
                                    srcsetAttr = cellElem.getAttribute("data-flickity-lazyload-srcset");
                                if (lazyloadAttr || srcAttr || srcsetAttr)
                                    return [cellElem]
                            }
                            var imgs = cellElem.querySelectorAll("img[data-flickity-lazyload], img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]");
                            return utils.makeArray(imgs)
                        }(cellElem);
                        lazyImages = lazyImages.concat(lazyCellImages)
                    }), lazyImages.forEach(function(img) {
                        new LazyLoader(img, this)
                    }, this)
                }
            }, LazyLoader.prototype.handleEvent = utils.handleEvent, LazyLoader.prototype.load = function() {
                this.img.addEventListener("load", this), this.img.addEventListener("error", this);
                var src = this.img.getAttribute("data-flickity-lazyload") || this.img.getAttribute("data-flickity-lazyload-src"),
                    srcset = this.img.getAttribute("data-flickity-lazyload-srcset");
                this.img.src = src, srcset && this.img.setAttribute("srcset", srcset), this.img.removeAttribute("data-flickity-lazyload"), this.img.removeAttribute("data-flickity-lazyload-src"), this.img.removeAttribute("data-flickity-lazyload-srcset")
            }, LazyLoader.prototype.onload = function(event) {
                this.complete(event, "flickity-lazyloaded")
            }, LazyLoader.prototype.onerror = function(event) {
                this.complete(event, "flickity-lazyerror")
            }, LazyLoader.prototype.complete = function(event, className) {
                this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
                var cell = this.flickity.getParentCell(this.img),
                    cellElem = cell && cell.element;
                this.flickity.cellSizeChange(cellElem), this.img.classList.add(className), this.flickity.dispatchEvent("lazyLoad", event, cellElem)
            }, Flickity.LazyLoader = LazyLoader, Flickity
        })
    }, {
        "./flickity": 20,
        "fizzy-ui-utils": 15
    }],
    23: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function(Flickity, Unipointer, utils) {
                return factory(window, Flickity, Unipointer, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) : factory(window, window.Flickity, window.Unipointer, window.fizzyUIUtils)
        }(window, function(window, Flickity, Unipointer, utils) {
            "use strict";
            function PageDots(parent) {
                this.parent = parent, this._create()
            }
            (PageDots.prototype = Object.create(Unipointer.prototype))._create = function() {
                this.holder = document.createElement("ol"), this.holder.className = "flickity-page-dots", this.dots = [], this.handleClick = this.onClick.bind(this), this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
            }, PageDots.prototype.activate = function() {
                this.setDots(), this.holder.addEventListener("click", this.handleClick), this.bindStartEvent(this.holder), this.parent.element.appendChild(this.holder)
            }, PageDots.prototype.deactivate = function() {
                this.holder.removeEventListener("click", this.handleClick), this.unbindStartEvent(this.holder), this.parent.element.removeChild(this.holder)
            }, PageDots.prototype.setDots = function() {
                var delta = this.parent.slides.length - this.dots.length;
                0 < delta ? this.addDots(delta) : delta < 0 && this.removeDots(-delta)
            }, PageDots.prototype.addDots = function(count) {
                for (var fragment = document.createDocumentFragment(), newDots = [], length = this.dots.length, max = length + count, i = length; i < max; i++) {
                    var dot = document.createElement("li");
                    dot.className = "dot", dot.setAttribute("aria-label", "Page dot " + (i + 1)), fragment.appendChild(dot), newDots.push(dot)
                }
                this.holder.appendChild(fragment), this.dots = this.dots.concat(newDots)
            }, PageDots.prototype.removeDots = function(count) {
                this.dots.splice(this.dots.length - count, count).forEach(function(dot) {
                    this.holder.removeChild(dot)
                }, this)
            }, PageDots.prototype.updateSelected = function() {
                this.selectedDot && (this.selectedDot.className = "dot", this.selectedDot.removeAttribute("aria-current")), this.dots.length && (this.selectedDot = this.dots[this.parent.selectedIndex], this.selectedDot.className = "dot is-selected", this.selectedDot.setAttribute("aria-current", "step"))
            }, PageDots.prototype.onTap = PageDots.prototype.onClick = function(event) {
                var target = event.target;
                if ("LI" == target.nodeName) {
                    this.parent.uiChange();
                    var index = this.dots.indexOf(target);
                    this.parent.select(index)
                }
            }, PageDots.prototype.destroy = function() {
                this.deactivate(), this.allOff()
            }, Flickity.PageDots = PageDots, utils.extend(Flickity.defaults, {
                pageDots: !0
            }), Flickity.createMethods.push("_createPageDots");
            var proto = Flickity.prototype;
            return proto._createPageDots = function() {
                this.options.pageDots && (this.pageDots = new PageDots(this), this.on("activate", this.activatePageDots), this.on("select", this.updateSelectedPageDots), this.on("cellChange", this.updatePageDots), this.on("resize", this.updatePageDots), this.on("deactivate", this.deactivatePageDots))
            }, proto.activatePageDots = function() {
                this.pageDots.activate()
            }, proto.updateSelectedPageDots = function() {
                this.pageDots.updateSelected()
            }, proto.updatePageDots = function() {
                this.pageDots.setDots()
            }, proto.deactivatePageDots = function() {
                this.pageDots.deactivate()
            }, Flickity.PageDots = PageDots, Flickity
        })
    }, {
        "./flickity": 20,
        "fizzy-ui-utils": 15,
        unipointer: 38
    }],
    24: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter", "fizzy-ui-utils/utils", "./flickity"], function(EvEmitter, utils, Flickity) {
                return factory(EvEmitter, utils, Flickity)
            }) : "object" == typeof module && module.exports ? module.exports = factory(require("ev-emitter"), require("fizzy-ui-utils"), require("./flickity")) : factory(window.EvEmitter, window.fizzyUIUtils, window.Flickity)
        }(window, function(EvEmitter, utils, Flickity) {
            "use strict";
            function Player(parent) {
                this.parent = parent, this.state = "stopped", this.onVisibilityChange = this.visibilityChange.bind(this), this.onVisibilityPlay = this.visibilityPlay.bind(this)
            }
            (Player.prototype = Object.create(EvEmitter.prototype)).play = function() {
                "playing" != this.state && (document.hidden ? document.addEventListener("visibilitychange", this.onVisibilityPlay) : (this.state = "playing", document.addEventListener("visibilitychange", this.onVisibilityChange), this.tick()))
            }, Player.prototype.tick = function() {
                if ("playing" == this.state) {
                    var time = this.parent.options.autoPlay;
                    time = "number" == typeof time ? time : 3e3;
                    var _this = this;
                    this.clear(), this.timeout = setTimeout(function() {
                        _this.parent.next(!0), _this.tick()
                    }, time)
                }
            }, Player.prototype.stop = function() {
                this.state = "stopped", this.clear(), document.removeEventListener("visibilitychange", this.onVisibilityChange)
            }, Player.prototype.clear = function() {
                clearTimeout(this.timeout)
            }, Player.prototype.pause = function() {
                "playing" == this.state && (this.state = "paused", this.clear())
            }, Player.prototype.unpause = function() {
                "paused" == this.state && this.play()
            }, Player.prototype.visibilityChange = function() {
                this[document.hidden ? "pause" : "unpause"]()
            }, Player.prototype.visibilityPlay = function() {
                this.play(), document.removeEventListener("visibilitychange", this.onVisibilityPlay)
            }, utils.extend(Flickity.defaults, {
                pauseAutoPlayOnHover: !0
            }), Flickity.createMethods.push("_createPlayer");
            var proto = Flickity.prototype;
            return proto._createPlayer = function() {
                this.player = new Player(this), this.on("activate", this.activatePlayer), this.on("uiChange", this.stopPlayer), this.on("pointerDown", this.stopPlayer), this.on("deactivate", this.deactivatePlayer)
            }, proto.activatePlayer = function() {
                this.options.autoPlay && (this.player.play(), this.element.addEventListener("mouseenter", this))
            }, proto.playPlayer = function() {
                this.player.play()
            }, proto.stopPlayer = function() {
                this.player.stop()
            }, proto.pausePlayer = function() {
                this.player.pause()
            }, proto.unpausePlayer = function() {
                this.player.unpause()
            }, proto.deactivatePlayer = function() {
                this.player.stop(), this.element.removeEventListener("mouseenter", this)
            }, proto.onmouseenter = function() {
                this.options.pauseAutoPlayOnHover && (this.player.pause(), this.element.addEventListener("mouseleave", this))
            }, proto.onmouseleave = function() {
                this.player.unpause(), this.element.removeEventListener("mouseleave", this)
            }, Flickity.Player = Player, Flickity
        })
    }, {
        "./flickity": 20,
        "ev-emitter": 13,
        "fizzy-ui-utils": 15
    }],
    25: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function(Flickity, Unipointer, utils) {
                return factory(window, Flickity, Unipointer, utils)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) : factory(window, window.Flickity, window.Unipointer, window.fizzyUIUtils)
        }(window, function(window, Flickity, Unipointer, utils) {
            "use strict";
            var svgURI = "http://www.w3.org/2000/svg";
            function PrevNextButton(direction, parent) {
                this.direction = direction, this.parent = parent, this._create()
            }
            (PrevNextButton.prototype = Object.create(Unipointer.prototype))._create = function() {
                this.isEnabled = !0, this.isPrevious = -1 == this.direction;
                var leftDirection = this.parent.options.rightToLeft ? 1 : -1;
                this.isLeft = this.direction == leftDirection;
                var element = this.element = document.createElement("button");
                element.className = "flickity-button flickity-prev-next-button", element.className += this.isPrevious ? " previous" : " next", element.setAttribute("type", "button"), this.disable(), element.setAttribute("aria-label", this.isPrevious ? "Previous" : "Next");
                var svg = this.createSVG();
                element.appendChild(svg), this.parent.on("select", this.update.bind(this)), this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
            }, PrevNextButton.prototype.activate = function() {
                this.bindStartEvent(this.element), this.element.addEventListener("click", this), this.parent.element.appendChild(this.element)
            }, PrevNextButton.prototype.deactivate = function() {
                this.parent.element.removeChild(this.element), this.unbindStartEvent(this.element), this.element.removeEventListener("click", this)
            }, PrevNextButton.prototype.createSVG = function() {
                var svg = document.createElementNS(svgURI, "svg");
                svg.setAttribute("class", "flickity-button-icon"), svg.setAttribute("viewBox", "0 0 100 100");
                var path = document.createElementNS(svgURI, "path"),
                    pathMovements = function(shape) {
                        return "string" != typeof shape ? "M " + shape.x0 + ",50 L " + shape.x1 + "," + (shape.y1 + 50) + " L " + shape.x2 + "," + (shape.y2 + 50) + " L " + shape.x3 + ",50  L " + shape.x2 + "," + (50 - shape.y2) + " L " + shape.x1 + "," + (50 - shape.y1) + " Z" : shape
                    }(this.parent.options.arrowShape);
                return path.setAttribute("d", pathMovements), path.setAttribute("class", "arrow"), this.isLeft || path.setAttribute("transform", "translate(100, 100) rotate(180) "), svg.appendChild(path), svg
            }, PrevNextButton.prototype.handleEvent = utils.handleEvent, PrevNextButton.prototype.onclick = function() {
                if (this.isEnabled) {
                    this.parent.uiChange();
                    var method = this.isPrevious ? "previous" : "next";
                    this.parent[method]()
                }
            }, PrevNextButton.prototype.enable = function() {
                this.isEnabled || (this.element.disabled = !1, this.isEnabled = !0)
            }, PrevNextButton.prototype.disable = function() {
                this.isEnabled && (this.element.disabled = !0, this.isEnabled = !1)
            }, PrevNextButton.prototype.update = function() {
                var slides = this.parent.slides;
                if (this.parent.options.wrapAround && 1 < slides.length)
                    this.enable();
                else {
                    var lastIndex = slides.length ? slides.length - 1 : 0,
                        boundIndex = this.isPrevious ? 0 : lastIndex;
                    this[this.parent.selectedIndex == boundIndex ? "disable" : "enable"]()
                }
            }, PrevNextButton.prototype.destroy = function() {
                this.deactivate(), this.allOff()
            }, utils.extend(Flickity.defaults, {
                prevNextButtons: !0,
                arrowShape: {
                    x0: 10,
                    x1: 60,
                    y1: 50,
                    x2: 70,
                    y2: 40,
                    x3: 30
                }
            }), Flickity.createMethods.push("_createPrevNextButtons");
            var proto = Flickity.prototype;
            return proto._createPrevNextButtons = function() {
                this.options.prevNextButtons && (this.prevButton = new PrevNextButton(-1, this), this.nextButton = new PrevNextButton(1, this), this.on("activate", this.activatePrevNextButtons))
            }, proto.activatePrevNextButtons = function() {
                this.prevButton.activate(), this.nextButton.activate(), this.on("deactivate", this.deactivatePrevNextButtons)
            }, proto.deactivatePrevNextButtons = function() {
                this.prevButton.deactivate(), this.nextButton.deactivate(), this.off("deactivate", this.deactivatePrevNextButtons)
            }, Flickity.PrevNextButton = PrevNextButton, Flickity
        })
    }, {
        "./flickity": 20,
        "fizzy-ui-utils": 15,
        unipointer: 38
    }],
    26: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(factory) : "object" == typeof module && module.exports ? module.exports = factory() : (window.Flickity = window.Flickity || {}, window.Flickity.Slide = factory())
        }(window, function() {
            "use strict";
            function Slide(parent) {
                this.parent = parent, this.isOriginLeft = "left" == parent.originSide, this.cells = [], this.outerWidth = 0, this.height = 0
            }
            var proto = Slide.prototype;
            return proto.addCell = function(cell) {
                if (this.cells.push(cell), this.outerWidth += cell.size.outerWidth, this.height = Math.max(cell.size.outerHeight, this.height), 1 == this.cells.length) {
                    this.x = cell.x;
                    var beginMargin = this.isOriginLeft ? "marginLeft" : "marginRight";
                    this.firstMargin = cell.size[beginMargin]
                }
            }, proto.updateTarget = function() {
                var endMargin = this.isOriginLeft ? "marginRight" : "marginLeft",
                    lastCell = this.getLastCell(),
                    lastMargin = lastCell ? lastCell.size[endMargin] : 0,
                    slideWidth = this.outerWidth - (this.firstMargin + lastMargin);
                this.target = this.x + this.firstMargin + slideWidth * this.parent.cellAlign
            }, proto.getLastCell = function() {
                return this.cells[this.cells.length - 1]
            }, proto.select = function() {
                this.cells.forEach(function(cell) {
                    cell.select()
                })
            }, proto.unselect = function() {
                this.cells.forEach(function(cell) {
                    cell.unselect()
                })
            }, proto.getCellElements = function() {
                return this.cells.map(function(cell) {
                    return cell.element
                })
            }, Slide
        })
    }, {}],
    27: [function(require, module, exports) {
        function l(a, b) {
            document.addEventListener ? a.addEventListener("scroll", b, !1) : a.attachEvent("scroll", b)
        }
        function t(a) {
            this.a = document.createElement("div"), this.a.setAttribute("aria-hidden", "true"), this.a.appendChild(document.createTextNode(a)), this.b = document.createElement("span"), this.c = document.createElement("span"), this.h = document.createElement("span"), this.f = document.createElement("span"), this.g = -1, this.b.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;", this.c.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;", this.f.style.cssText = "max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;", this.h.style.cssText = "display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;", this.b.appendChild(this.h), this.c.appendChild(this.f), this.a.appendChild(this.b), this.a.appendChild(this.c)
        }
        function u(a, b) {
            a.a.style.cssText = "max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:" + b + ";"
        }
        function z(a) {
            var b = a.a.offsetWidth,
                c = b + 100;
            return a.f.style.width = c + "px", a.c.scrollLeft = c, a.b.scrollLeft = a.b.scrollWidth + 100, a.g !== b && (a.g = b, !0)
        }
        function A(a, b) {
            function c() {
                var a = k;
                z(a) && a.a.parentNode && b(a.g)
            }
            var k = a;
            l(a.b, c), l(a.c, c), z(a)
        }
        function B(a, b) {
            var c = b || {};
            this.family = a, this.style = c.style || "normal", this.weight = c.weight || "normal", this.stretch = c.stretch || "normal"
        }
        function J() {
            return null === F && (F = !!document.fonts), F
        }
        function L(a, b) {
            return [a.style, a.weight, function() {
                if (null === E) {
                    var a = document.createElement("div");
                    try {
                        a.style.font = "condensed 100px sans-serif"
                    } catch (b) {}
                    E = "" !== a.style.font
                }
                return E
            }() ? a.stretch : "", "100px", b].join(" ")
        }
        var C,
            D,
            E,
            F;
        F = E = D = C = null, B.prototype.load = function(a, b) {
            var c = this,
                k = a || "BESbswy",
                r = 0,
                n = b || 3e3,
                H = (new Date).getTime();
            return new Promise(function(a, b) {
                if (J() && !function() {
                    if (null === D)
                        if (J() && /Apple/.test(window.navigator.vendor)) {
                            var a = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);
                            D = !!a && parseInt(a[1], 10) < 603
                        } else
                            D = !1;
                    return D
                }()) {
                    var M = new Promise(function(a, b) {
                            !function e() {
                                (new Date).getTime() - H >= n ? b(Error(n + "ms timeout exceeded")) : document.fonts.load(L(c, '"' + c.family + '"'), k).then(function(c) {
                                    1 <= c.length ? a() : setTimeout(e, 25)
                                }, b)
                            }()
                        }),
                        N = new Promise(function(a, c) {
                            r = setTimeout(function() {
                                c(Error(n + "ms timeout exceeded"))
                            }, n)
                        });
                    Promise.race([N, M]).then(function() {
                        clearTimeout(r), a(c)
                    }, b)
                } else
                    !function(a) {
                        document.body ? a() : document.addEventListener ? document.addEventListener("DOMContentLoaded", function c() {
                            document.removeEventListener("DOMContentLoaded", c), a()
                        }) : document.attachEvent("onreadystatechange", function k() {
                            "interactive" != document.readyState && "complete" != document.readyState || (document.detachEvent("onreadystatechange", k), a())
                        })
                    }(function() {
                        function v() {
                            var b;
                            (b = -1 != f && -1 != g || -1 != f && -1 != h || -1 != g && -1 != h) && ((b = f != g && f != h && g != h) || (null === C && (b = /AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent), C = !!b && (parseInt(b[1], 10) < 536 || 536 === parseInt(b[1], 10) && parseInt(b[2], 10) <= 11)), b = C && (f == w && g == w && h == w || f == x && g == x && h == x || f == y && g == y && h == y)), b = !b), b && (d.parentNode && d.parentNode.removeChild(d), clearTimeout(r), a(c))
                        }
                        var e = new t(k),
                            p = new t(k),
                            q = new t(k),
                            f = -1,
                            g = -1,
                            h = -1,
                            w = -1,
                            x = -1,
                            y = -1,
                            d = document.createElement("div");
                        d.dir = "ltr", u(e, L(c, "sans-serif")), u(p, L(c, "serif")), u(q, L(c, "monospace")), d.appendChild(e.a), d.appendChild(p.a), d.appendChild(q.a), document.body.appendChild(d), w = e.a.offsetWidth, x = p.a.offsetWidth, y = q.a.offsetWidth, function I() {
                            if ((new Date).getTime() - H >= n)
                                d.parentNode && d.parentNode.removeChild(d), b(Error(n + "ms timeout exceeded"));
                            else {
                                var a = document.hidden;
                                !0 !== a && void 0 !== a || (f = e.a.offsetWidth, g = p.a.offsetWidth, h = q.a.offsetWidth, v()), r = setTimeout(I, 50)
                            }
                        }(), A(e, function(a) {
                            f = a, v()
                        }), u(e, L(c, '"' + c.family + '",sans-serif')), A(p, function(a) {
                            g = a, v()
                        }), u(p, L(c, '"' + c.family + '",serif')), A(q, function(a) {
                            h = a, v()
                        }), u(q, L(c, '"' + c.family + '",monospace'))
                    })
            })
        }, "object" == typeof module ? module.exports = B : (window.FontFaceObserver = B, window.FontFaceObserver.prototype.load = B.prototype.load)
    }, {}],
    28: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(factory) : "object" == typeof module && module.exports ? module.exports = factory() : window.getSize = factory()
        }(window, function() {
            "use strict";
            function getStyleSize(value) {
                var num = parseFloat(value);
                return -1 == value.indexOf("%") && !isNaN(num) && num
            }
            var logError = "undefined" == typeof console ? function() {} : function(message) {
                    console.error(message)
                },
                measurements = ["paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"],
                measurementsLength = measurements.length;
            function getStyle(elem) {
                var style = getComputedStyle(elem);
                return style || logError("Style returned " + style + ". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"), style
            }
            var isBoxSizeOuter,
                isSetup = !1;
            function getSize(elem) {
                if (function() {
                    if (!isSetup) {
                        isSetup = !0;
                        var div = document.createElement("div");
                        div.style.width = "200px", div.style.padding = "1px 2px 3px 4px", div.style.borderStyle = "solid", div.style.borderWidth = "1px 2px 3px 4px", div.style.boxSizing = "border-box";
                        var body = document.body || document.documentElement;
                        body.appendChild(div);
                        var style = getStyle(div);
                        isBoxSizeOuter = 200 == Math.round(getStyleSize(style.width)), getSize.isBoxSizeOuter = isBoxSizeOuter, body.removeChild(div)
                    }
                }(), "string" == typeof elem && (elem = document.querySelector(elem)), elem && "object" == typeof elem && elem.nodeType) {
                    var style = getStyle(elem);
                    if ("none" == style.display)
                        return function() {
                            for (var size = {
                                    width: 0,
                                    height: 0,
                                    innerWidth: 0,
                                    innerHeight: 0,
                                    outerWidth: 0,
                                    outerHeight: 0
                                }, i = 0; i < measurementsLength; i++) {
                                size[measurements[i]] = 0
                            }
                            return size
                        }();
                    var size = {};
                    size.width = elem.offsetWidth, size.height = elem.offsetHeight;
                    for (var isBorderBox = size.isBorderBox = "border-box" == style.boxSizing, i = 0; i < measurementsLength; i++) {
                        var measurement = measurements[i],
                            value = style[measurement],
                            num = parseFloat(value);
                        size[measurement] = isNaN(num) ? 0 : num
                    }
                    var paddingWidth = size.paddingLeft + size.paddingRight,
                        paddingHeight = size.paddingTop + size.paddingBottom,
                        marginWidth = size.marginLeft + size.marginRight,
                        marginHeight = size.marginTop + size.marginBottom,
                        borderWidth = size.borderLeftWidth + size.borderRightWidth,
                        borderHeight = size.borderTopWidth + size.borderBottomWidth,
                        isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter,
                        styleWidth = getStyleSize(style.width);
                    !1 !== styleWidth && (size.width = styleWidth + (isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth));
                    var styleHeight = getStyleSize(style.height);
                    return !1 !== styleHeight && (size.height = styleHeight + (isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight)), size.innerWidth = size.width - (paddingWidth + borderWidth), size.innerHeight = size.height - (paddingHeight + borderHeight), size.outerWidth = size.width + marginWidth, size.outerHeight = size.height + marginHeight, size
                }
            }
            return getSize
        })
    }, {}],
    29: [function(require, module, exports) {
        !function(window, factory) {
            "use strict";
            "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function(EvEmitter) {
                return factory(window, EvEmitter)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("ev-emitter")) : window.imagesLoaded = factory(window, window.EvEmitter)
        }("undefined" != typeof window ? window : this, function(window, EvEmitter) {
            "use strict";
            var $ = window.jQuery,
                console = window.console;
            function extend(a, b) {
                for (var prop in b)
                    a[prop] = b[prop];
                return a
            }
            var arraySlice = Array.prototype.slice;
            function ImagesLoaded(elem, options, onAlways) {
                if (!(this instanceof ImagesLoaded))
                    return new ImagesLoaded(elem, options, onAlways);
                var queryElem = elem;
                "string" == typeof elem && (queryElem = document.querySelectorAll(elem)), queryElem ? (this.elements = function(obj) {
                    return Array.isArray(obj) ? obj : "object" == typeof obj && "number" == typeof obj.length ? arraySlice.call(obj) : [obj]
                }(queryElem), this.options = extend({}, this.options), "function" == typeof options ? onAlways = options : extend(this.options, options), onAlways && this.on("always", onAlways), this.getImages(), $ && (this.jqDeferred = new $.Deferred), setTimeout(this.check.bind(this))) : console.error("Bad element for imagesLoaded " + (queryElem || elem))
            }
            (ImagesLoaded.prototype = Object.create(EvEmitter.prototype)).options = {}, ImagesLoaded.prototype.getImages = function() {
                this.images = [], this.elements.forEach(this.addElementImages, this)
            }, ImagesLoaded.prototype.addElementImages = function(elem) {
                "IMG" == elem.nodeName && this.addImage(elem), !0 === this.options.background && this.addElementBackgroundImages(elem);
                var nodeType = elem.nodeType;
                if (nodeType && elementNodeTypes[nodeType]) {
                    for (var childImgs = elem.querySelectorAll("img"), i = 0; i < childImgs.length; i++) {
                        var img = childImgs[i];
                        this.addImage(img)
                    }
                    if ("string" == typeof this.options.background) {
                        var children = elem.querySelectorAll(this.options.background);
                        for (i = 0; i < children.length; i++) {
                            var child = children[i];
                            this.addElementBackgroundImages(child)
                        }
                    }
                }
            };
            var elementNodeTypes = {
                1: !0,
                9: !0,
                11: !0
            };
            function LoadingImage(img) {
                this.img = img
            }
            function Background(url, element) {
                this.url = url, this.element = element, this.img = new Image
            }
            return ImagesLoaded.prototype.addElementBackgroundImages = function(elem) {
                var style = getComputedStyle(elem);
                if (style)
                    for (var reURL = /url\((['"])?(.*?)\1\)/gi, matches = reURL.exec(style.backgroundImage); null !== matches;) {
                        var url = matches && matches[2];
                        url && this.addBackground(url, elem), matches = reURL.exec(style.backgroundImage)
                    }
            }, ImagesLoaded.prototype.addImage = function(img) {
                var loadingImage = new LoadingImage(img);
                this.images.push(loadingImage)
            }, ImagesLoaded.prototype.addBackground = function(url, elem) {
                var background = new Background(url, elem);
                this.images.push(background)
            }, ImagesLoaded.prototype.check = function() {
                var _this = this;
                function onProgress(image, elem, message) {
                    setTimeout(function() {
                        _this.progress(image, elem, message)
                    })
                }
                this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? this.images.forEach(function(loadingImage) {
                    loadingImage.once("progress", onProgress), loadingImage.check()
                }) : this.complete()
            }, ImagesLoaded.prototype.progress = function(image, elem, message) {
                this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded, this.emitEvent("progress", [this, image, elem]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, image), this.progressedCount == this.images.length && this.complete(), this.options.debug && console && console.log("progress: " + message, image, elem)
            }, ImagesLoaded.prototype.complete = function() {
                var eventName = this.hasAnyBroken ? "fail" : "done";
                if (this.isComplete = !0, this.emitEvent(eventName, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
                    var jqMethod = this.hasAnyBroken ? "reject" : "resolve";
                    this.jqDeferred[jqMethod](this)
                }
            }, (LoadingImage.prototype = Object.create(EvEmitter.prototype)).check = function() {
                this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image, this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.proxyImage.src = this.img.src)
            }, LoadingImage.prototype.getIsImageComplete = function() {
                return this.img.complete && this.img.naturalWidth
            }, LoadingImage.prototype.confirm = function(isLoaded, message) {
                this.isLoaded = isLoaded, this.emitEvent("progress", [this, this.img, message])
            }, LoadingImage.prototype.handleEvent = function(event) {
                var method = "on" + event.type;
                this[method] && this[method](event)
            }, LoadingImage.prototype.onload = function() {
                this.confirm(!0, "onload"), this.unbindEvents()
            }, LoadingImage.prototype.onerror = function() {
                this.confirm(!1, "onerror"), this.unbindEvents()
            }, LoadingImage.prototype.unbindEvents = function() {
                this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
            }, (Background.prototype = Object.create(LoadingImage.prototype)).check = function() {
                this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url, this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents())
            }, Background.prototype.unbindEvents = function() {
                this.img.removeEventListener("load", this), this.img.removeEventListener("error", this)
            }, Background.prototype.confirm = function(isLoaded, message) {
                this.isLoaded = isLoaded, this.emitEvent("progress", [this, this.element, message])
            }, ImagesLoaded.makeJQueryPlugin = function(jQuery) {
                (jQuery = jQuery || window.jQuery) && (($ = jQuery).fn.imagesLoaded = function(options, callback) {
                    return new ImagesLoaded(this, options, callback).jqDeferred.promise($(this))
                })
            }, ImagesLoaded.makeJQueryPlugin(), ImagesLoaded
        })
    }, {
        "ev-emitter": 13
    }],
    30: [function(require, module, exports) {
        !function(global, factory) {
            "use strict";
            "object" == typeof module && "object" == typeof module.exports ? module.exports = global.document ? factory(global, !0) : function(w) {
                if (!w.document)
                    throw new Error("jQuery requires a window with a document");
                return factory(w)
            } : factory(global)
        }("undefined" != typeof window ? window : this, function(window, noGlobal) {
            "use strict";
            var arr = [],
                document = window.document,
                getProto = Object.getPrototypeOf,
                slice = arr.slice,
                concat = arr.concat,
                push = arr.push,
                indexOf = arr.indexOf,
                class2type = {},
                toString = class2type.toString,
                hasOwn = class2type.hasOwnProperty,
                fnToString = hasOwn.toString,
                ObjectFunctionString = fnToString.call(Object),
                support = {},
                isFunction = function(obj) {
                    return "function" == typeof obj && "number" != typeof obj.nodeType
                },
                isWindow = function(obj) {
                    return null != obj && obj === obj.window
                },
                preservedScriptAttributes = {
                    type: !0,
                    src: !0,
                    nonce: !0,
                    noModule: !0
                };
            function DOMEval(code, node, doc) {
                var i,
                    val,
                    script = (doc = doc || document).createElement("script");
                if (script.text = code, node)
                    for (i in preservedScriptAttributes)
                        (val = node[i] || node.getAttribute && node.getAttribute(i)) && script.setAttribute(i, val);
                doc.head.appendChild(script).parentNode.removeChild(script)
            }
            function toType(obj) {
                return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj
            }
            var jQuery = function(selector, context) {
                    return new jQuery.fn.init(selector, context)
                },
                rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
            function isArrayLike(obj) {
                var length = !!obj && "length" in obj && obj.length,
                    type = toType(obj);
                return !isFunction(obj) && !isWindow(obj) && ("array" === type || 0 === length || "number" == typeof length && 0 < length && length - 1 in obj)
            }
            jQuery.fn = jQuery.prototype = {
                jquery: "3.4.1",
                constructor: jQuery,
                length: 0,
                toArray: function() {
                    return slice.call(this)
                },
                get: function(num) {
                    return null == num ? slice.call(this) : num < 0 ? this[num + this.length] : this[num]
                },
                pushStack: function(elems) {
                    var ret = jQuery.merge(this.constructor(), elems);
                    return ret.prevObject = this, ret
                },
                each: function(callback) {
                    return jQuery.each(this, callback)
                },
                map: function(callback) {
                    return this.pushStack(jQuery.map(this, function(elem, i) {
                        return callback.call(elem, i, elem)
                    }))
                },
                slice: function() {
                    return this.pushStack(slice.apply(this, arguments))
                },
                first: function() {
                    return this.eq(0)
                },
                last: function() {
                    return this.eq(-1)
                },
                eq: function(i) {
                    var len = this.length,
                        j = +i + (i < 0 ? len : 0);
                    return this.pushStack(0 <= j && j < len ? [this[j]] : [])
                },
                end: function() {
                    return this.prevObject || this.constructor()
                },
                push: push,
                sort: arr.sort,
                splice: arr.splice
            }, jQuery.extend = jQuery.fn.extend = function() {
                var options,
                    name,
                    src,
                    copy,
                    copyIsArray,
                    clone,
                    target = arguments[0] || {},
                    i = 1,
                    length = arguments.length,
                    deep = !1;
                for ("boolean" == typeof target && (deep = target, target = arguments[i] || {}, i++), "object" == typeof target || isFunction(target) || (target = {}), i === length && (target = this, i--); i < length; i++)
                    if (null != (options = arguments[i]))
                        for (name in options)
                            copy = options[name], "__proto__" !== name && target !== copy && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy))) ? (src = target[name], clone = copyIsArray && !Array.isArray(src) ? [] : copyIsArray || jQuery.isPlainObject(src) ? src : {}, copyIsArray = !1, target[name] = jQuery.extend(deep, clone, copy)) : void 0 !== copy && (target[name] = copy));
                return target
            }, jQuery.extend({
                expando: "jQuery" + ("3.4.1" + Math.random()).replace(/\D/g, ""),
                isReady: !0,
                error: function(msg) {
                    throw new Error(msg)
                },
                noop: function() {},
                isPlainObject: function(obj) {
                    var proto,
                        Ctor;
                    return !(!obj || "[object Object]" !== toString.call(obj)) && (!(proto = getProto(obj)) || "function" == typeof (Ctor = hasOwn.call(proto, "constructor") && proto.constructor) && fnToString.call(Ctor) === ObjectFunctionString)
                },
                isEmptyObject: function(obj) {
                    var name;
                    for (name in obj)
                        return !1;
                    return !0
                },
                globalEval: function(code, options) {
                    DOMEval(code, {
                        nonce: options && options.nonce
                    })
                },
                each: function(obj, callback) {
                    var length,
                        i = 0;
                    if (isArrayLike(obj))
                        for (length = obj.length; i < length && !1 !== callback.call(obj[i], i, obj[i]); i++)
                            ;
                    else
                        for (i in obj)
                            if (!1 === callback.call(obj[i], i, obj[i]))
                                break;
                    return obj
                },
                trim: function(text) {
                    return null == text ? "" : (text + "").replace(rtrim, "")
                },
                makeArray: function(arr, results) {
                    var ret = results || [];
                    return null != arr && (isArrayLike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [arr] : arr) : push.call(ret, arr)), ret
                },
                inArray: function(elem, arr, i) {
                    return null == arr ? -1 : indexOf.call(arr, elem, i)
                },
                merge: function(first, second) {
                    for (var len = +second.length, j = 0, i = first.length; j < len; j++)
                        first[i++] = second[j];
                    return first.length = i, first
                },
                grep: function(elems, callback, invert) {
                    for (var matches = [], i = 0, length = elems.length, callbackExpect = !invert; i < length; i++)
                        !callback(elems[i], i) != callbackExpect && matches.push(elems[i]);
                    return matches
                },
                map: function(elems, callback, arg) {
                    var length,
                        value,
                        i = 0,
                        ret = [];
                    if (isArrayLike(elems))
                        for (length = elems.length; i < length; i++)
                            null != (value = callback(elems[i], i, arg)) && ret.push(value);
                    else
                        for (i in elems)
                            null != (value = callback(elems[i], i, arg)) && ret.push(value);
                    return concat.apply([], ret)
                },
                guid: 1,
                support: support
            }), "function" == typeof Symbol && (jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]), jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(i, name) {
                class2type["[object " + name + "]"] = name.toLowerCase()
            });
            var Sizzle = function(window) {
                function funescape(_, escaped, escapedWhitespace) {
                    var high = "0x" + escaped - 65536;
                    return high != high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(65536 + high) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320)
                }
                function unloadHandler() {
                    setDocument()
                }
                var i,
                    support,
                    Expr,
                    getText,
                    isXML,
                    tokenize,
                    compile,
                    select,
                    outermostContext,
                    sortInput,
                    hasDuplicate,
                    setDocument,
                    document,
                    docElem,
                    documentIsHTML,
                    rbuggyQSA,
                    rbuggyMatches,
                    matches,
                    contains,
                    expando = "sizzle" + 1 * new Date,
                    preferredDoc = window.document,
                    dirruns = 0,
                    done = 0,
                    classCache = createCache(),
                    tokenCache = createCache(),
                    compilerCache = createCache(),
                    nonnativeSelectorCache = createCache(),
                    sortOrder = function(a, b) {
                        return a === b && (hasDuplicate = !0), 0
                    },
                    hasOwn = {}.hasOwnProperty,
                    arr = [],
                    pop = arr.pop,
                    push_native = arr.push,
                    push = arr.push,
                    slice = arr.slice,
                    indexOf = function(list, elem) {
                        for (var i = 0, len = list.length; i < len; i++)
                            if (list[i] === elem)
                                return i;
                        return -1
                    },
                    booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
                    whitespace = "[\\x20\\t\\r\\n\\f]",
                    identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
                    attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
                    pseudos = ":(" + identifier + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|.*)\\)|)",
                    rwhitespace = new RegExp(whitespace + "+", "g"),
                    rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
                    rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
                    rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
                    rdescend = new RegExp(whitespace + "|>"),
                    rpseudo = new RegExp(pseudos),
                    ridentifier = new RegExp("^" + identifier + "$"),
                    matchExpr = {
                        ID: new RegExp("^#(" + identifier + ")"),
                        CLASS: new RegExp("^\\.(" + identifier + ")"),
                        TAG: new RegExp("^(" + identifier + "|[*])"),
                        ATTR: new RegExp("^" + attributes),
                        PSEUDO: new RegExp("^" + pseudos),
                        CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
                        bool: new RegExp("^(?:" + booleans + ")$", "i"),
                        needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
                    },
                    rhtml = /HTML$/i,
                    rinputs = /^(?:input|select|textarea|button)$/i,
                    rheader = /^h\d$/i,
                    rnative = /^[^{]+\{\s*\[native \w/,
                    rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
                    rsibling = /[+~]/,
                    runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
                    rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                    fcssescape = function(ch, asCodePoint) {
                        return asCodePoint ? "\0" === ch ? "�" : ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " " : "\\" + ch
                    },
                    inDisabledFieldset = addCombinator(function(elem) {
                        return !0 === elem.disabled && "fieldset" === elem.nodeName.toLowerCase()
                    }, {
                        dir: "parentNode",
                        next: "legend"
                    });
                try {
                    push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes), arr[preferredDoc.childNodes.length].nodeType
                } catch (e) {
                    push = {
                        apply: arr.length ? function(target, els) {
                            push_native.apply(target, slice.call(els))
                        } : function(target, els) {
                            for (var j = target.length, i = 0; target[j++] = els[i++];)
                                ;
                            target.length = j - 1
                        }
                    }
                }
                function Sizzle(selector, context, results, seed) {
                    var m,
                        i,
                        elem,
                        nid,
                        match,
                        groups,
                        newSelector,
                        newContext = context && context.ownerDocument,
                        nodeType = context ? context.nodeType : 9;
                    if (results = results || [], "string" != typeof selector || !selector || 1 !== nodeType && 9 !== nodeType && 11 !== nodeType)
                        return results;
                    if (!seed && ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), context = context || document, documentIsHTML)) {
                        if (11 !== nodeType && (match = rquickExpr.exec(selector)))
                            if (m = match[1]) {
                                if (9 === nodeType) {
                                    if (!(elem = context.getElementById(m)))
                                        return results;
                                    if (elem.id === m)
                                        return results.push(elem), results
                                } else if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m)
                                    return results.push(elem), results
                            } else {
                                if (match[2])
                                    return push.apply(results, context.getElementsByTagName(selector)), results;
                                if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName)
                                    return push.apply(results, context.getElementsByClassName(m)), results
                            }
                        if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (1 !== nodeType || "object" !== context.nodeName.toLowerCase())) {
                            if (newSelector = selector, newContext = context, 1 === nodeType && rdescend.test(selector)) {
                                for ((nid = context.getAttribute("id")) ? nid = nid.replace(rcssescape, fcssescape) : context.setAttribute("id", nid = expando), i = (groups = tokenize(selector)).length; i--;)
                                    groups[i] = "#" + nid + " " + toSelector(groups[i]);
                                newSelector = groups.join(","), newContext = rsibling.test(selector) && testContext(context.parentNode) || context
                            }
                            try {
                                return push.apply(results, newContext.querySelectorAll(newSelector)), results
                            } catch (qsaError) {
                                nonnativeSelectorCache(selector, !0)
                            } finally {
                                nid === expando && context.removeAttribute("id")
                            }
                        }
                    }
                    return select(selector.replace(rtrim, "$1"), context, results, seed)
                }
                function createCache() {
                    var keys = [];
                    return function cache(key, value) {
                        return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], cache[key + " "] = value
                    }
                }
                function markFunction(fn) {
                    return fn[expando] = !0, fn
                }
                function assert(fn) {
                    var el = document.createElement("fieldset");
                    try {
                        return !!fn(el)
                    } catch (e) {
                        return !1
                    } finally {
                        el.parentNode && el.parentNode.removeChild(el), el = null
                    }
                }
                function addHandle(attrs, handler) {
                    for (var arr = attrs.split("|"), i = arr.length; i--;)
                        Expr.attrHandle[arr[i]] = handler
                }
                function siblingCheck(a, b) {
                    var cur = b && a,
                        diff = cur && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
                    if (diff)
                        return diff;
                    if (cur)
                        for (; cur = cur.nextSibling;)
                            if (cur === b)
                                return -1;
                    return a ? 1 : -1
                }
                function createInputPseudo(type) {
                    return function(elem) {
                        return "input" === elem.nodeName.toLowerCase() && elem.type === type
                    }
                }
                function createButtonPseudo(type) {
                    return function(elem) {
                        var name = elem.nodeName.toLowerCase();
                        return ("input" === name || "button" === name) && elem.type === type
                    }
                }
                function createDisabledPseudo(disabled) {
                    return function(elem) {
                        return "form" in elem ? elem.parentNode && !1 === elem.disabled ? "label" in elem ? "label" in elem.parentNode ? elem.parentNode.disabled === disabled : elem.disabled === disabled : elem.isDisabled === disabled || elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled : elem.disabled === disabled : "label" in elem && elem.disabled === disabled
                    }
                }
                function createPositionalPseudo(fn) {
                    return markFunction(function(argument) {
                        return argument = +argument, markFunction(function(seed, matches) {
                            for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--;)
                                seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]))
                        })
                    })
                }
                function testContext(context) {
                    return context && void 0 !== context.getElementsByTagName && context
                }
                for (i in support = Sizzle.support = {}, isXML = Sizzle.isXML = function(elem) {
                    var namespace = elem.namespaceURI,
                        docElem = (elem.ownerDocument || elem).documentElement;
                    return !rhtml.test(namespace || docElem && docElem.nodeName || "HTML")
                }, setDocument = Sizzle.setDocument = function(node) {
                    var hasCompare,
                        subWindow,
                        doc = node ? node.ownerDocument || node : preferredDoc;
                    return doc !== document && 9 === doc.nodeType && doc.documentElement && (docElem = (document = doc).documentElement, documentIsHTML = !isXML(document), preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow && (subWindow.addEventListener ? subWindow.addEventListener("unload", unloadHandler, !1) : subWindow.attachEvent && subWindow.attachEvent("onunload", unloadHandler)), support.attributes = assert(function(el) {
                        return el.className = "i", !el.getAttribute("className")
                    }), support.getElementsByTagName = assert(function(el) {
                        return el.appendChild(document.createComment("")), !el.getElementsByTagName("*").length
                    }), support.getElementsByClassName = rnative.test(document.getElementsByClassName), support.getById = assert(function(el) {
                        return docElem.appendChild(el).id = expando, !document.getElementsByName || !document.getElementsByName(expando).length
                    }), support.getById ? (Expr.filter.ID = function(id) {
                        var attrId = id.replace(runescape, funescape);
                        return function(elem) {
                            return elem.getAttribute("id") === attrId
                        }
                    }, Expr.find.ID = function(id, context) {
                        if (void 0 !== context.getElementById && documentIsHTML) {
                            var elem = context.getElementById(id);
                            return elem ? [elem] : []
                        }
                    }) : (Expr.filter.ID = function(id) {
                        var attrId = id.replace(runescape, funescape);
                        return function(elem) {
                            var node = void 0 !== elem.getAttributeNode && elem.getAttributeNode("id");
                            return node && node.value === attrId
                        }
                    }, Expr.find.ID = function(id, context) {
                        if (void 0 !== context.getElementById && documentIsHTML) {
                            var node,
                                i,
                                elems,
                                elem = context.getElementById(id);
                            if (elem) {
                                if ((node = elem.getAttributeNode("id")) && node.value === id)
                                    return [elem];
                                for (elems = context.getElementsByName(id), i = 0; elem = elems[i++];)
                                    if ((node = elem.getAttributeNode("id")) && node.value === id)
                                        return [elem]
                            }
                            return []
                        }
                    }), Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
                        return void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag) : support.qsa ? context.querySelectorAll(tag) : void 0
                    } : function(tag, context) {
                        var elem,
                            tmp = [],
                            i = 0,
                            results = context.getElementsByTagName(tag);
                        if ("*" !== tag)
                            return results;
                        for (; elem = results[i++];)
                            1 === elem.nodeType && tmp.push(elem);
                        return tmp
                    }, Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
                        if (void 0 !== context.getElementsByClassName && documentIsHTML)
                            return context.getElementsByClassName(className)
                    }, rbuggyMatches = [], rbuggyQSA = [], (support.qsa = rnative.test(document.querySelectorAll)) && (assert(function(el) {
                        docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a><select id='" + expando + "-\r\\' msallowcapture=''><option selected=''></option></select>", el.querySelectorAll("[msallowcapture^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"), el.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"), el.querySelectorAll("[id~=" + expando + "-]").length || rbuggyQSA.push("~="), el.querySelectorAll(":checked").length || rbuggyQSA.push(":checked"), el.querySelectorAll("a#" + expando + "+*").length || rbuggyQSA.push(".#.+[+~]")
                    }), assert(function(el) {
                        el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                        var input = document.createElement("input");
                        input.setAttribute("type", "hidden"), el.appendChild(input).setAttribute("name", "D"), el.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="), 2 !== el.querySelectorAll(":enabled").length && rbuggyQSA.push(":enabled", ":disabled"), docElem.appendChild(el).disabled = !0, 2 !== el.querySelectorAll(":disabled").length && rbuggyQSA.push(":enabled", ":disabled"), el.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:")
                    })), (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function(el) {
                        support.disconnectedMatch = matches.call(el, "*"), matches.call(el, "[s!='']:x"), rbuggyMatches.push("!=", pseudos)
                    }), rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")), rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")), hasCompare = rnative.test(docElem.compareDocumentPosition), contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {
                        var adown = 9 === a.nodeType ? a.documentElement : a,
                            bup = b && b.parentNode;
                        return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)))
                    } : function(a, b) {
                        if (b)
                            for (; b = b.parentNode;)
                                if (b === a)
                                    return !0;
                        return !1
                    }, sortOrder = hasCompare ? function(a, b) {
                        if (a === b)
                            return hasDuplicate = !0, 0;
                        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                        return compare || (1 & (compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1) || !support.sortDetached && b.compareDocumentPosition(a) === compare ? a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ? -1 : b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0 : 4 & compare ? -1 : 1)
                    } : function(a, b) {
                        if (a === b)
                            return hasDuplicate = !0, 0;
                        var cur,
                            i = 0,
                            aup = a.parentNode,
                            bup = b.parentNode,
                            ap = [a],
                            bp = [b];
                        if (!aup || !bup)
                            return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                        if (aup === bup)
                            return siblingCheck(a, b);
                        for (cur = a; cur = cur.parentNode;)
                            ap.unshift(cur);
                        for (cur = b; cur = cur.parentNode;)
                            bp.unshift(cur);
                        for (; ap[i] === bp[i];)
                            i++;
                        return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0
                    }), document
                }, Sizzle.matches = function(expr, elements) {
                    return Sizzle(expr, null, null, elements)
                }, Sizzle.matchesSelector = function(elem, expr) {
                    if ((elem.ownerDocument || elem) !== document && setDocument(elem), support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr)))
                        try {
                            var ret = matches.call(elem, expr);
                            if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType)
                                return ret
                        } catch (e) {
                            nonnativeSelectorCache(expr, !0)
                        }
                    return 0 < Sizzle(expr, document, null, [elem]).length
                }, Sizzle.contains = function(context, elem) {
                    return (context.ownerDocument || context) !== document && setDocument(context), contains(context, elem)
                }, Sizzle.attr = function(elem, name) {
                    (elem.ownerDocument || elem) !== document && setDocument(elem);
                    var fn = Expr.attrHandle[name.toLowerCase()],
                        val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
                    return void 0 !== val ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
                }, Sizzle.escape = function(sel) {
                    return (sel + "").replace(rcssescape, fcssescape)
                }, Sizzle.error = function(msg) {
                    throw new Error("Syntax error, unrecognized expression: " + msg)
                }, Sizzle.uniqueSort = function(results) {
                    var elem,
                        duplicates = [],
                        j = 0,
                        i = 0;
                    if (hasDuplicate = !support.detectDuplicates, sortInput = !support.sortStable && results.slice(0), results.sort(sortOrder), hasDuplicate) {
                        for (; elem = results[i++];)
                            elem === results[i] && (j = duplicates.push(i));
                        for (; j--;)
                            results.splice(duplicates[j], 1)
                    }
                    return sortInput = null, results
                }, getText = Sizzle.getText = function(elem) {
                    var node,
                        ret = "",
                        i = 0,
                        nodeType = elem.nodeType;
                    if (nodeType) {
                        if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                            if ("string" == typeof elem.textContent)
                                return elem.textContent;
                            for (elem = elem.firstChild; elem; elem = elem.nextSibling)
                                ret += getText(elem)
                        } else if (3 === nodeType || 4 === nodeType)
                            return elem.nodeValue
                    } else
                        for (; node = elem[i++];)
                            ret += getText(node);
                    return ret
                }, (Expr = Sizzle.selectors = {
                    cacheLength: 50,
                    createPseudo: markFunction,
                    match: matchExpr,
                    attrHandle: {},
                    find: {},
                    relative: {
                        ">": {
                            dir: "parentNode",
                            first: !0
                        },
                        " ": {
                            dir: "parentNode"
                        },
                        "+": {
                            dir: "previousSibling",
                            first: !0
                        },
                        "~": {
                            dir: "previousSibling"
                        }
                    },
                    preFilter: {
                        ATTR: function(match) {
                            return match[1] = match[1].replace(runescape, funescape), match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape), "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4)
                        },
                        CHILD: function(match) {
                            return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), match
                        },
                        PSEUDO: function(match) {
                            var excess,
                                unquoted = !match[6] && match[2];
                            return matchExpr.CHILD.test(match[0]) ? null : (match[3] ? match[2] = match[4] || match[5] || "" : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), match[2] = unquoted.slice(0, excess)), match.slice(0, 3))
                        }
                    },
                    filter: {
                        TAG: function(nodeNameSelector) {
                            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                            return "*" === nodeNameSelector ? function() {
                                return !0
                            } : function(elem) {
                                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName
                            }
                        },
                        CLASS: function(className) {
                            var pattern = classCache[className + " "];
                            return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                                    return pattern.test("string" == typeof elem.className && elem.className || void 0 !== elem.getAttribute && elem.getAttribute("class") || "")
                                })
                        },
                        ATTR: function(name, operator, check) {
                            return function(elem) {
                                var result = Sizzle.attr(elem, name);
                                return null == result ? "!=" === operator : !operator || (result += "", "=" === operator ? result === check : "!=" === operator ? result !== check : "^=" === operator ? check && 0 === result.indexOf(check) : "*=" === operator ? check && -1 < result.indexOf(check) : "$=" === operator ? check && result.slice(-check.length) === check : "~=" === operator ? -1 < (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) : "|=" === operator && (result === check || result.slice(0, check.length + 1) === check + "-"))
                            }
                        },
                        CHILD: function(type, what, argument, first, last) {
                            var simple = "nth" !== type.slice(0, 3),
                                forward = "last" !== type.slice(-4),
                                ofType = "of-type" === what;
                            return 1 === first && 0 === last ? function(elem) {
                                return !!elem.parentNode
                            } : function(elem, context, xml) {
                                var cache,
                                    uniqueCache,
                                    outerCache,
                                    node,
                                    nodeIndex,
                                    start,
                                    dir = simple != forward ? "nextSibling" : "previousSibling",
                                    parent = elem.parentNode,
                                    name = ofType && elem.nodeName.toLowerCase(),
                                    useCache = !xml && !ofType,
                                    diff = !1;
                                if (parent) {
                                    if (simple) {
                                        for (; dir;) {
                                            for (node = elem; node = node[dir];)
                                                if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType)
                                                    return !1;
                                            start = dir = "only" === type && !start && "nextSibling"
                                        }
                                        return !0
                                    }
                                    if (start = [forward ? parent.firstChild : parent.lastChild], forward && useCache) {
                                        for (diff = (nodeIndex = (cache = (uniqueCache = (outerCache = (node = parent)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1]) && cache[2], node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop();)
                                            if (1 === node.nodeType && ++diff && node === elem) {
                                                uniqueCache[type] = [dirruns, nodeIndex, diff];
                                                break
                                            }
                                    } else if (useCache && (diff = nodeIndex = (cache = (uniqueCache = (outerCache = (node = elem)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1]), !1 === diff)
                                        for (; (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((uniqueCache = (outerCache = node[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] = [dirruns, diff]), node !== elem));)
                                            ;
                                    return (diff -= last) === first || diff % first == 0 && 0 <= diff / first
                                }
                            }
                        },
                        PSEUDO: function(pseudo, argument) {
                            var args,
                                fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                            return fn[expando] ? fn(argument) : 1 < fn.length ? (args = [pseudo, pseudo, "", argument], Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                                for (var idx, matched = fn(seed, argument), i = matched.length; i--;)
                                    seed[idx = indexOf(seed, matched[i])] = !(matches[idx] = matched[i])
                            }) : function(elem) {
                                return fn(elem, 0, args)
                            }) : fn
                        }
                    },
                    pseudos: {
                        not: markFunction(function(selector) {
                            var input = [],
                                results = [],
                                matcher = compile(selector.replace(rtrim, "$1"));
                            return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
                                for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--;)
                                    (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem))
                            }) : function(elem, context, xml) {
                                return input[0] = elem, matcher(input, null, xml, results), input[0] = null, !results.pop()
                            }
                        }),
                        has: markFunction(function(selector) {
                            return function(elem) {
                                return 0 < Sizzle(selector, elem).length
                            }
                        }),
                        contains: markFunction(function(text) {
                            return text = text.replace(runescape, funescape), function(elem) {
                                return -1 < (elem.textContent || getText(elem)).indexOf(text)
                            }
                        }),
                        lang: markFunction(function(lang) {
                            return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), lang = lang.replace(runescape, funescape).toLowerCase(), function(elem) {
                                var elemLang;
                                do {
                                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang"))
                                        return (elemLang = elemLang.toLowerCase()) === lang || 0 === elemLang.indexOf(lang + "-")
                                } while ((elem = elem.parentNode) && 1 === elem.nodeType);
                                return !1
                            }
                        }),
                        target: function(elem) {
                            var hash = window.location && window.location.hash;
                            return hash && hash.slice(1) === elem.id
                        },
                        root: function(elem) {
                            return elem === docElem
                        },
                        focus: function(elem) {
                            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex)
                        },
                        enabled: createDisabledPseudo(!1),
                        disabled: createDisabledPseudo(!0),
                        checked: function(elem) {
                            var nodeName = elem.nodeName.toLowerCase();
                            return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected
                        },
                        selected: function(elem) {
                            return elem.parentNode && elem.parentNode.selectedIndex, !0 === elem.selected
                        },
                        empty: function(elem) {
                            for (elem = elem.firstChild; elem; elem = elem.nextSibling)
                                if (elem.nodeType < 6)
                                    return !1;
                            return !0
                        },
                        parent: function(elem) {
                            return !Expr.pseudos.empty(elem)
                        },
                        header: function(elem) {
                            return rheader.test(elem.nodeName)
                        },
                        input: function(elem) {
                            return rinputs.test(elem.nodeName)
                        },
                        button: function(elem) {
                            var name = elem.nodeName.toLowerCase();
                            return "input" === name && "button" === elem.type || "button" === name
                        },
                        text: function(elem) {
                            var attr;
                            return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || "text" === attr.toLowerCase())
                        },
                        first: createPositionalPseudo(function() {
                            return [0]
                        }),
                        last: createPositionalPseudo(function(matchIndexes, length) {
                            return [length - 1]
                        }),
                        eq: createPositionalPseudo(function(matchIndexes, length, argument) {
                            return [argument < 0 ? argument + length : argument]
                        }),
                        even: createPositionalPseudo(function(matchIndexes, length) {
                            for (var i = 0; i < length; i += 2)
                                matchIndexes.push(i);
                            return matchIndexes
                        }),
                        odd: createPositionalPseudo(function(matchIndexes, length) {
                            for (var i = 1; i < length; i += 2)
                                matchIndexes.push(i);
                            return matchIndexes
                        }),
                        lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                            for (var i = argument < 0 ? argument + length : length < argument ? length : argument; 0 <= --i;)
                                matchIndexes.push(i);
                            return matchIndexes
                        }),
                        gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                            for (var i = argument < 0 ? argument + length : argument; ++i < length;)
                                matchIndexes.push(i);
                            return matchIndexes
                        })
                    }
                }).pseudos.nth = Expr.pseudos.eq, {
                    radio: !0,
                    checkbox: !0,
                    file: !0,
                    password: !0,
                    image: !0
                })
                    Expr.pseudos[i] = createInputPseudo(i);
                for (i in {
                    submit: !0,
                    reset: !0
                })
                    Expr.pseudos[i] = createButtonPseudo(i);
                function setFilters() {}
                function toSelector(tokens) {
                    for (var i = 0, len = tokens.length, selector = ""; i < len; i++)
                        selector += tokens[i].value;
                    return selector
                }
                function addCombinator(matcher, combinator, base) {
                    var dir = combinator.dir,
                        skip = combinator.next,
                        key = skip || dir,
                        checkNonElements = base && "parentNode" === key,
                        doneName = done++;
                    return combinator.first ? function(elem, context, xml) {
                        for (; elem = elem[dir];)
                            if (1 === elem.nodeType || checkNonElements)
                                return matcher(elem, context, xml);
                        return !1
                    } : function(elem, context, xml) {
                        var oldCache,
                            uniqueCache,
                            outerCache,
                            newCache = [dirruns, doneName];
                        if (xml) {
                            for (; elem = elem[dir];)
                                if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml))
                                    return !0
                        } else
                            for (; elem = elem[dir];)
                                if (1 === elem.nodeType || checkNonElements)
                                    if (uniqueCache = (outerCache = elem[expando] || (elem[expando] = {}))[elem.uniqueID] || (outerCache[elem.uniqueID] = {}), skip && skip === elem.nodeName.toLowerCase())
                                        elem = elem[dir] || elem;
                                    else {
                                        if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName)
                                            return newCache[2] = oldCache[2];
                                        if ((uniqueCache[key] = newCache)[2] = matcher(elem, context, xml))
                                            return !0
                                    }
                        return !1
                    }
                }
                function elementMatcher(matchers) {
                    return 1 < matchers.length ? function(elem, context, xml) {
                        for (var i = matchers.length; i--;)
                            if (!matchers[i](elem, context, xml))
                                return !1;
                        return !0
                    } : matchers[0]
                }
                function condense(unmatched, map, filter, context, xml) {
                    for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; i < len; i++)
                        (elem = unmatched[i]) && (filter && !filter(elem, context, xml) || (newUnmatched.push(elem), mapped && map.push(i)));
                    return newUnmatched
                }
                function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
                    return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), markFunction(function(seed, results, context, xml) {
                        var temp,
                            i,
                            elem,
                            preMap = [],
                            postMap = [],
                            preexisting = results.length,
                            elems = seed || function(selector, contexts, results) {
                                for (var i = 0, len = contexts.length; i < len; i++)
                                    Sizzle(selector, contexts[i], results);
                                return results
                            }(selector || "*", context.nodeType ? [context] : context, []),
                            matcherIn = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml),
                            matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                        if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter)
                            for (temp = condense(matcherOut, postMap), postFilter(temp, [], context, xml), i = temp.length; i--;)
                                (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                        if (seed) {
                            if (postFinder || preFilter) {
                                if (postFinder) {
                                    for (temp = [], i = matcherOut.length; i--;)
                                        (elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                                    postFinder(null, matcherOut = [], temp, xml)
                                }
                                for (i = matcherOut.length; i--;)
                                    (elem = matcherOut[i]) && -1 < (temp = postFinder ? indexOf(seed, elem) : preMap[i]) && (seed[temp] = !(results[temp] = elem))
                            }
                        } else
                            matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut)
                    })
                }
                function matcherFromTokens(tokens) {
                    for (var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
                            return elem === checkContext
                        }, implicitRelative, !0), matchAnyContext = addCombinator(function(elem) {
                            return -1 < indexOf(checkContext, elem)
                        }, implicitRelative, !0), matchers = [function(elem, context, xml) {
                            var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
                            return checkContext = null, ret
                        }]; i < len; i++)
                        if (matcher = Expr.relative[tokens[i].type])
                            matchers = [addCombinator(elementMatcher(matchers), matcher)];
                        else {
                            if ((matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches))[expando]) {
                                for (j = ++i; j < len && !Expr.relative[tokens[j].type]; j++)
                                    ;
                                return setMatcher(1 < i && elementMatcher(matchers), 1 < i && toSelector(tokens.slice(0, i - 1).concat({
                                    value: " " === tokens[i - 2].type ? "*" : ""
                                })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens))
                            }
                            matchers.push(matcher)
                        }
                    return elementMatcher(matchers)
                }
                return setFilters.prototype = Expr.filters = Expr.pseudos, Expr.setFilters = new setFilters, tokenize = Sizzle.tokenize = function(selector, parseOnly) {
                    var matched,
                        match,
                        tokens,
                        type,
                        soFar,
                        groups,
                        preFilters,
                        cached = tokenCache[selector + " "];
                    if (cached)
                        return parseOnly ? 0 : cached.slice(0);
                    for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar;) {
                        for (type in matched && !(match = rcomma.exec(soFar)) || (match && (soFar = soFar.slice(match[0].length) || soFar), groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), tokens.push({
                            value: matched,
                            type: match[0].replace(rtrim, " ")
                        }), soFar = soFar.slice(matched.length)), Expr.filter)
                            !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), tokens.push({
                                value: matched,
                                type: type,
                                matches: match
                            }), soFar = soFar.slice(matched.length));
                        if (!matched)
                            break
                    }
                    return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0)
                }, compile = Sizzle.compile = function(selector, match) {
                    var i,
                        setMatchers = [],
                        elementMatchers = [],
                        cached = compilerCache[selector + " "];
                    if (!cached) {
                        for (i = (match = match || tokenize(selector)).length; i--;)
                            (cached = matcherFromTokens(match[i]))[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
                        (cached = compilerCache(selector, function(elementMatchers, setMatchers) {
                            function superMatcher(seed, context, xml, results, outermost) {
                                var elem,
                                    j,
                                    matcher,
                                    matchedCount = 0,
                                    i = "0",
                                    unmatched = seed && [],
                                    setMatched = [],
                                    contextBackup = outermostContext,
                                    elems = seed || byElement && Expr.find.TAG("*", outermost),
                                    dirrunsUnique = dirruns += null == contextBackup ? 1 : Math.random() || .1,
                                    len = elems.length;
                                for (outermost && (outermostContext = context === document || context || outermost); i !== len && null != (elem = elems[i]); i++) {
                                    if (byElement && elem) {
                                        for (j = 0, context || elem.ownerDocument === document || (setDocument(elem), xml = !documentIsHTML); matcher = elementMatchers[j++];)
                                            if (matcher(elem, context || document, xml)) {
                                                results.push(elem);
                                                break
                                            }
                                        outermost && (dirruns = dirrunsUnique)
                                    }
                                    bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem))
                                }
                                if (matchedCount += i, bySet && i !== matchedCount) {
                                    for (j = 0; matcher = setMatchers[j++];)
                                        matcher(unmatched, setMatched, context, xml);
                                    if (seed) {
                                        if (0 < matchedCount)
                                            for (; i--;)
                                                unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                                        setMatched = condense(setMatched)
                                    }
                                    push.apply(results, setMatched), outermost && !seed && 0 < setMatched.length && 1 < matchedCount + setMatchers.length && Sizzle.uniqueSort(results)
                                }
                                return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), unmatched
                            }
                            var bySet = 0 < setMatchers.length,
                                byElement = 0 < elementMatchers.length;
                            return bySet ? markFunction(superMatcher) : superMatcher
                        }(elementMatchers, setMatchers))).selector = selector
                    }
                    return cached
                }, select = Sizzle.select = function(selector, context, results, seed) {
                    var i,
                        tokens,
                        token,
                        type,
                        find,
                        compiled = "function" == typeof selector && selector,
                        match = !seed && tokenize(selector = compiled.selector || selector);
                    if (results = results || [], 1 === match.length) {
                        if (2 < (tokens = match[0] = match[0].slice(0)).length && "ID" === (token = tokens[0]).type && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
                            if (!(context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0]))
                                return results;
                            compiled && (context = context.parentNode), selector = selector.slice(tokens.shift().value.length)
                        }
                        for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], !Expr.relative[type = token.type]);)
                            if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
                                if (tokens.splice(i, 1), !(selector = seed.length && toSelector(tokens)))
                                    return push.apply(results, seed), results;
                                break
                            }
                    }
                    return (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context), results
                }, support.sortStable = expando.split("").sort(sortOrder).join("") === expando, support.detectDuplicates = !!hasDuplicate, setDocument(), support.sortDetached = assert(function(el) {
                    return 1 & el.compareDocumentPosition(document.createElement("fieldset"))
                }), assert(function(el) {
                    return el.innerHTML = "<a href='#'></a>", "#" === el.firstChild.getAttribute("href")
                }) || addHandle("type|href|height|width", function(elem, name, isXML) {
                    if (!isXML)
                        return elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2)
                }), support.attributes && assert(function(el) {
                    return el.innerHTML = "<input/>", el.firstChild.setAttribute("value", ""), "" === el.firstChild.getAttribute("value")
                }) || addHandle("value", function(elem, name, isXML) {
                    if (!isXML && "input" === elem.nodeName.toLowerCase())
                        return elem.defaultValue
                }), assert(function(el) {
                    return null == el.getAttribute("disabled")
                }) || addHandle(booleans, function(elem, name, isXML) {
                    var val;
                    if (!isXML)
                        return !0 === elem[name] ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null
                }), Sizzle
            }(window);
            jQuery.find = Sizzle, jQuery.expr = Sizzle.selectors, jQuery.expr[":"] = jQuery.expr.pseudos, jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort, jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, jQuery.contains = Sizzle.contains, jQuery.escapeSelector = Sizzle.escape;
            function siblings(n, elem) {
                for (var matched = []; n; n = n.nextSibling)
                    1 === n.nodeType && n !== elem && matched.push(n);
                return matched
            }
            var dir = function(elem, dir, until) {
                    for (var matched = [], truncate = void 0 !== until; (elem = elem[dir]) && 9 !== elem.nodeType;)
                        if (1 === elem.nodeType) {
                            if (truncate && jQuery(elem).is(until))
                                break;
                            matched.push(elem)
                        }
                    return matched
                },
                rneedsContext = jQuery.expr.match.needsContext;
            function nodeName(elem, name) {
                return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase()
            }
            var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
            function winnow(elements, qualifier, not) {
                return isFunction(qualifier) ? jQuery.grep(elements, function(elem, i) {
                    return !!qualifier.call(elem, i, elem) !== not
                }) : qualifier.nodeType ? jQuery.grep(elements, function(elem) {
                    return elem === qualifier !== not
                }) : "string" != typeof qualifier ? jQuery.grep(elements, function(elem) {
                    return -1 < indexOf.call(qualifier, elem) !== not
                }) : jQuery.filter(qualifier, elements, not)
            }
            jQuery.filter = function(expr, elems, not) {
                var elem = elems[0];
                return not && (expr = ":not(" + expr + ")"), 1 === elems.length && 1 === elem.nodeType ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
                    return 1 === elem.nodeType
                }))
            }, jQuery.fn.extend({
                find: function(selector) {
                    var i,
                        ret,
                        len = this.length,
                        self = this;
                    if ("string" != typeof selector)
                        return this.pushStack(jQuery(selector).filter(function() {
                            for (i = 0; i < len; i++)
                                if (jQuery.contains(self[i], this))
                                    return !0
                        }));
                    for (ret = this.pushStack([]), i = 0; i < len; i++)
                        jQuery.find(selector, self[i], ret);
                    return 1 < len ? jQuery.uniqueSort(ret) : ret
                },
                filter: function(selector) {
                    return this.pushStack(winnow(this, selector || [], !1))
                },
                not: function(selector) {
                    return this.pushStack(winnow(this, selector || [], !0))
                },
                is: function(selector) {
                    return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length
                }
            });
            var rootjQuery,
                rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
            (jQuery.fn.init = function(selector, context, root) {
                var match,
                    elem;
                if (!selector)
                    return this;
                if (root = root || rootjQuery, "string" != typeof selector)
                    return selector.nodeType ? (this[0] = selector, this.length = 1, this) : isFunction(selector) ? void 0 !== root.ready ? root.ready(selector) : selector(jQuery) : jQuery.makeArray(selector, this);
                if (!(match = "<" === selector[0] && ">" === selector[selector.length - 1] && 3 <= selector.length ? [null, selector, null] : rquickExpr.exec(selector)) || !match[1] && context)
                    return !context || context.jquery ? (context || root).find(selector) : this.constructor(context).find(selector);
                if (match[1]) {
                    if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), rsingleTag.test(match[1]) && jQuery.isPlainObject(context))
                        for (match in context)
                            isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                    return this
                }
                return (elem = document.getElementById(match[2])) && (this[0] = elem, this.length = 1), this
            }).prototype = jQuery.fn, rootjQuery = jQuery(document);
            var rparentsprev = /^(?:parents|prev(?:Until|All))/,
                guaranteedUnique = {
                    children: !0,
                    contents: !0,
                    next: !0,
                    prev: !0
                };
            function sibling(cur, dir) {
                for (; (cur = cur[dir]) && 1 !== cur.nodeType;)
                    ;
                return cur
            }
            jQuery.fn.extend({
                has: function(target) {
                    var targets = jQuery(target, this),
                        l = targets.length;
                    return this.filter(function() {
                        for (var i = 0; i < l; i++)
                            if (jQuery.contains(this, targets[i]))
                                return !0
                    })
                },
                closest: function(selectors, context) {
                    var cur,
                        i = 0,
                        l = this.length,
                        matched = [],
                        targets = "string" != typeof selectors && jQuery(selectors);
                    if (!rneedsContext.test(selectors))
                        for (; i < l; i++)
                            for (cur = this[i]; cur && cur !== context; cur = cur.parentNode)
                                if (cur.nodeType < 11 && (targets ? -1 < targets.index(cur) : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
                                    matched.push(cur);
                                    break
                                }
                    return this.pushStack(1 < matched.length ? jQuery.uniqueSort(matched) : matched)
                },
                index: function(elem) {
                    return elem ? "string" == typeof elem ? indexOf.call(jQuery(elem), this[0]) : indexOf.call(this, elem.jquery ? elem[0] : elem) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
                },
                add: function(selector, context) {
                    return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))))
                },
                addBack: function(selector) {
                    return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector))
                }
            }), jQuery.each({
                parent: function(elem) {
                    var parent = elem.parentNode;
                    return parent && 11 !== parent.nodeType ? parent : null
                },
                parents: function(elem) {
                    return dir(elem, "parentNode")
                },
                parentsUntil: function(elem, i, until) {
                    return dir(elem, "parentNode", until)
                },
                next: function(elem) {
                    return sibling(elem, "nextSibling")
                },
                prev: function(elem) {
                    return sibling(elem, "previousSibling")
                },
                nextAll: function(elem) {
                    return dir(elem, "nextSibling")
                },
                prevAll: function(elem) {
                    return dir(elem, "previousSibling")
                },
                nextUntil: function(elem, i, until) {
                    return dir(elem, "nextSibling", until)
                },
                prevUntil: function(elem, i, until) {
                    return dir(elem, "previousSibling", until)
                },
                siblings: function(elem) {
                    return siblings((elem.parentNode || {}).firstChild, elem)
                },
                children: function(elem) {
                    return siblings(elem.firstChild)
                },
                contents: function(elem) {
                    return void 0 !== elem.contentDocument ? elem.contentDocument : (nodeName(elem, "template") && (elem = elem.content || elem), jQuery.merge([], elem.childNodes))
                }
            }, function(name, fn) {
                jQuery.fn[name] = function(until, selector) {
                    var matched = jQuery.map(this, fn, until);
                    return "Until" !== name.slice(-5) && (selector = until), selector && "string" == typeof selector && (matched = jQuery.filter(selector, matched)), 1 < this.length && (guaranteedUnique[name] || jQuery.uniqueSort(matched), rparentsprev.test(name) && matched.reverse()), this.pushStack(matched)
                }
            });
            var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
            function Identity(v) {
                return v
            }
            function Thrower(ex) {
                throw ex
            }
            function adoptValue(value, resolve, reject, noValue) {
                var method;
                try {
                    value && isFunction(method = value.promise) ? method.call(value).done(resolve).fail(reject) : value && isFunction(method = value.then) ? method.call(value, resolve, reject) : resolve.apply(void 0, [value].slice(noValue))
                } catch (value) {
                    reject.apply(void 0, [value])
                }
            }
            jQuery.Callbacks = function(options) {
                options = "string" == typeof options ? function(options) {
                    var object = {};
                    return jQuery.each(options.match(rnothtmlwhite) || [], function(_, flag) {
                        object[flag] = !0
                    }), object
                }(options) : jQuery.extend({}, options);
                function fire() {
                    for (locked = locked || options.once, fired = firing = !0; queue.length; firingIndex = -1)
                        for (memory = queue.shift(); ++firingIndex < list.length;)
                            !1 === list[firingIndex].apply(memory[0], memory[1]) && options.stopOnFalse && (firingIndex = list.length, memory = !1);
                    options.memory || (memory = !1), firing = !1, locked && (list = memory ? [] : "")
                }
                var firing,
                    memory,
                    fired,
                    locked,
                    list = [],
                    queue = [],
                    firingIndex = -1,
                    self = {
                        add: function() {
                            return list && (memory && !firing && (firingIndex = list.length - 1, queue.push(memory)), function add(args) {
                                jQuery.each(args, function(_, arg) {
                                    isFunction(arg) ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== toType(arg) && add(arg)
                                })
                            }(arguments), memory && !firing && fire()), this
                        },
                        remove: function() {
                            return jQuery.each(arguments, function(_, arg) {
                                for (var index; -1 < (index = jQuery.inArray(arg, list, index));)
                                    list.splice(index, 1), index <= firingIndex && firingIndex--
                            }), this
                        },
                        has: function(fn) {
                            return fn ? -1 < jQuery.inArray(fn, list) : 0 < list.length
                        },
                        empty: function() {
                            return list = list && [], this
                        },
                        disable: function() {
                            return locked = queue = [], list = memory = "", this
                        },
                        disabled: function() {
                            return !list
                        },
                        lock: function() {
                            return locked = queue = [], memory || firing || (list = memory = ""), this
                        },
                        locked: function() {
                            return !!locked
                        },
                        fireWith: function(context, args) {
                            return locked || (args = [context, (args = args || []).slice ? args.slice() : args], queue.push(args), firing || fire()), this
                        },
                        fire: function() {
                            return self.fireWith(this, arguments), this
                        },
                        fired: function() {
                            return !!fired
                        }
                    };
                return self
            }, jQuery.extend({
                Deferred: function(func) {
                    var tuples = [["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]],
                        state = "pending",
                        promise = {
                            state: function() {
                                return state
                            },
                            always: function() {
                                return deferred.done(arguments).fail(arguments), this
                            },
                            catch: function(fn) {
                                return promise.then(null, fn)
                            },
                            pipe: function() {
                                var fns = arguments;
                                return jQuery.Deferred(function(newDefer) {
                                    jQuery.each(tuples, function(i, tuple) {
                                        var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                                        deferred[tuple[1]](function() {
                                            var returned = fn && fn.apply(this, arguments);
                                            returned && isFunction(returned.promise) ? returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject) : newDefer[tuple[0] + "With"](this, fn ? [returned] : arguments)
                                        })
                                    }), fns = null
                                }).promise()
                            },
                            then: function(onFulfilled, onRejected, onProgress) {
                                var maxDepth = 0;
                                function resolve(depth, deferred, handler, special) {
                                    return function() {
                                        function mightThrow() {
                                            var returned,
                                                then;
                                            if (!(depth < maxDepth)) {
                                                if ((returned = handler.apply(that, args)) === deferred.promise())
                                                    throw new TypeError("Thenable self-resolution");
                                                then = returned && ("object" == typeof returned || "function" == typeof returned) && returned.then, isFunction(then) ? special ? then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)) : (maxDepth++, then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith))) : (handler !== Identity && (that = void 0, args = [returned]), (special || deferred.resolveWith)(that, args))
                                            }
                                        }
                                        var that = this,
                                            args = arguments,
                                            process = special ? mightThrow : function() {
                                                try {
                                                    mightThrow()
                                                } catch (e) {
                                                    jQuery.Deferred.exceptionHook && jQuery.Deferred.exceptionHook(e, process.stackTrace), maxDepth <= depth + 1 && (handler !== Thrower && (that = void 0, args = [e]), deferred.rejectWith(that, args))
                                                }
                                            };
                                        depth ? process() : (jQuery.Deferred.getStackHook && (process.stackTrace = jQuery.Deferred.getStackHook()), window.setTimeout(process))
                                    }
                                }
                                return jQuery.Deferred(function(newDefer) {
                                    tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)), tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)), tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower))
                                }).promise()
                            },
                            promise: function(obj) {
                                return null != obj ? jQuery.extend(obj, promise) : promise
                            }
                        },
                        deferred = {};
                    return jQuery.each(tuples, function(i, tuple) {
                        var list = tuple[2],
                            stateString = tuple[5];
                        promise[tuple[1]] = list.add, stateString && list.add(function() {
                            state = stateString
                        }, tuples[3 - i][2].disable, tuples[3 - i][3].disable, tuples[0][2].lock, tuples[0][3].lock), list.add(tuple[3].fire), deferred[tuple[0]] = function() {
                            return deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments), this
                        }, deferred[tuple[0] + "With"] = list.fireWith
                    }), promise.promise(deferred), func && func.call(deferred, deferred), deferred
                },
                when: function(singleValue) {
                    function updateFunc(i) {
                        return function(value) {
                            resolveContexts[i] = this, resolveValues[i] = 1 < arguments.length ? slice.call(arguments) : value, --remaining || master.resolveWith(resolveContexts, resolveValues)
                        }
                    }
                    var remaining = arguments.length,
                        i = remaining,
                        resolveContexts = Array(i),
                        resolveValues = slice.call(arguments),
                        master = jQuery.Deferred();
                    if (remaining <= 1 && (adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining), "pending" === master.state() || isFunction(resolveValues[i] && resolveValues[i].then)))
                        return master.then();
                    for (; i--;)
                        adoptValue(resolveValues[i], updateFunc(i), master.reject);
                    return master.promise()
                }
            });
            var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
            jQuery.Deferred.exceptionHook = function(error, stack) {
                window.console && window.console.warn && error && rerrorNames.test(error.name) && window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack)
            }, jQuery.readyException = function(error) {
                window.setTimeout(function() {
                    throw error
                })
            };
            var readyList = jQuery.Deferred();
            function completed() {
                document.removeEventListener("DOMContentLoaded", completed), window.removeEventListener("load", completed), jQuery.ready()
            }
            jQuery.fn.ready = function(fn) {
                return readyList.then(fn).catch(function(error) {
                    jQuery.readyException(error)
                }), this
            }, jQuery.extend({
                isReady: !1,
                readyWait: 1,
                ready: function(wait) {
                    (!0 === wait ? --jQuery.readyWait : jQuery.isReady) || (jQuery.isReady = !0) !== wait && 0 < --jQuery.readyWait || readyList.resolveWith(document, [jQuery])
                }
            }), jQuery.ready.then = readyList.then, "complete" === document.readyState || "loading" !== document.readyState && !document.documentElement.doScroll ? window.setTimeout(jQuery.ready) : (document.addEventListener("DOMContentLoaded", completed), window.addEventListener("load", completed));
            var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
                    var i = 0,
                        len = elems.length,
                        bulk = null == key;
                    if ("object" === toType(key))
                        for (i in chainable = !0, key)
                            access(elems, fn, i, key[i], !0, emptyGet, raw);
                    else if (void 0 !== value && (chainable = !0, isFunction(value) || (raw = !0), bulk && (fn = raw ? (fn.call(elems, value), null) : (bulk = fn, function(elem, key, value) {
                        return bulk.call(jQuery(elem), value)
                    })), fn))
                        for (; i < len; i++)
                            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
                    return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet
                },
                rmsPrefix = /^-ms-/,
                rdashAlpha = /-([a-z])/g;
            function fcamelCase(all, letter) {
                return letter.toUpperCase()
            }
            function camelCase(string) {
                return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase)
            }
            function acceptData(owner) {
                return 1 === owner.nodeType || 9 === owner.nodeType || !+owner.nodeType
            }
            function Data() {
                this.expando = jQuery.expando + Data.uid++
            }
            Data.uid = 1, Data.prototype = {
                cache: function(owner) {
                    var value = owner[this.expando];
                    return value || (value = {}, acceptData(owner) && (owner.nodeType ? owner[this.expando] = value : Object.defineProperty(owner, this.expando, {
                        value: value,
                        configurable: !0
                    }))), value
                },
                set: function(owner, data, value) {
                    var prop,
                        cache = this.cache(owner);
                    if ("string" == typeof data)
                        cache[camelCase(data)] = value;
                    else
                        for (prop in data)
                            cache[camelCase(prop)] = data[prop];
                    return cache
                },
                get: function(owner, key) {
                    return void 0 === key ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)]
                },
                access: function(owner, key, value) {
                    return void 0 === key || key && "string" == typeof key && void 0 === value ? this.get(owner, key) : (this.set(owner, key, value), void 0 !== value ? value : key)
                },
                remove: function(owner, key) {
                    var i,
                        cache = owner[this.expando];
                    if (void 0 !== cache) {
                        if (void 0 !== key) {
                            i = (key = Array.isArray(key) ? key.map(camelCase) : (key = camelCase(key)) in cache ? [key] : key.match(rnothtmlwhite) || []).length;
                            for (; i--;)
                                delete cache[key[i]]
                        }
                        void 0 !== key && !jQuery.isEmptyObject(cache) || (owner.nodeType ? owner[this.expando] = void 0 : delete owner[this.expando])
                    }
                },
                hasData: function(owner) {
                    var cache = owner[this.expando];
                    return void 0 !== cache && !jQuery.isEmptyObject(cache)
                }
            };
            var dataPriv = new Data,
                dataUser = new Data,
                rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                rmultiDash = /[A-Z]/g;
            function dataAttr(elem, key, data) {
                var name;
                if (void 0 === data && 1 === elem.nodeType)
                    if (name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase(), "string" == typeof (data = elem.getAttribute(name))) {
                        try {
                            data = function(data) {
                                return "true" === data || "false" !== data && ("null" === data ? null : data === +data + "" ? +data : rbrace.test(data) ? JSON.parse(data) : data)
                            }(data)
                        } catch (e) {}
                        dataUser.set(elem, key, data)
                    } else
                        data = void 0;
                return data
            }
            jQuery.extend({
                hasData: function(elem) {
                    return dataUser.hasData(elem) || dataPriv.hasData(elem)
                },
                data: function(elem, name, data) {
                    return dataUser.access(elem, name, data)
                },
                removeData: function(elem, name) {
                    dataUser.remove(elem, name)
                },
                _data: function(elem, name, data) {
                    return dataPriv.access(elem, name, data)
                },
                _removeData: function(elem, name) {
                    dataPriv.remove(elem, name)
                }
            }), jQuery.fn.extend({
                data: function(key, value) {
                    var i,
                        name,
                        data,
                        elem = this[0],
                        attrs = elem && elem.attributes;
                    if (void 0 !== key)
                        return "object" == typeof key ? this.each(function() {
                            dataUser.set(this, key)
                        }) : access(this, function(value) {
                            var data;
                            if (elem && void 0 === value)
                                return void 0 !== (data = dataUser.get(elem, key)) ? data : void 0 !== (data = dataAttr(elem, key)) ? data : void 0;
                            this.each(function() {
                                dataUser.set(this, key, value)
                            })
                        }, null, value, 1 < arguments.length, null, !0);
                    if (this.length && (data = dataUser.get(elem), 1 === elem.nodeType && !dataPriv.get(elem, "hasDataAttrs"))) {
                        for (i = attrs.length; i--;)
                            attrs[i] && 0 === (name = attrs[i].name).indexOf("data-") && (name = camelCase(name.slice(5)), dataAttr(elem, name, data[name]));
                        dataPriv.set(elem, "hasDataAttrs", !0)
                    }
                    return data
                },
                removeData: function(key) {
                    return this.each(function() {
                        dataUser.remove(this, key)
                    })
                }
            }), jQuery.extend({
                queue: function(elem, type, data) {
                    var queue;
                    if (elem)
                        return type = (type || "fx") + "queue", queue = dataPriv.get(elem, type), data && (!queue || Array.isArray(data) ? queue = dataPriv.access(elem, type, jQuery.makeArray(data)) : queue.push(data)), queue || []
                },
                dequeue: function(elem, type) {
                    type = type || "fx";
                    var queue = jQuery.queue(elem, type),
                        startLength = queue.length,
                        fn = queue.shift(),
                        hooks = jQuery._queueHooks(elem, type);
                    "inprogress" === fn && (fn = queue.shift(), startLength--), fn && ("fx" === type && queue.unshift("inprogress"), delete hooks.stop, fn.call(elem, function() {
                        jQuery.dequeue(elem, type)
                    }, hooks)), !startLength && hooks && hooks.empty.fire()
                },
                _queueHooks: function(elem, type) {
                    var key = type + "queueHooks";
                    return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
                            empty: jQuery.Callbacks("once memory").add(function() {
                                dataPriv.remove(elem, [type + "queue", key])
                            })
                        })
                }
            }), jQuery.fn.extend({
                queue: function(type, data) {
                    var setter = 2;
                    return "string" != typeof type && (data = type, type = "fx", setter--), arguments.length < setter ? jQuery.queue(this[0], type) : void 0 === data ? this : this.each(function() {
                        var queue = jQuery.queue(this, type, data);
                        jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type)
                    })
                },
                dequeue: function(type) {
                    return this.each(function() {
                        jQuery.dequeue(this, type)
                    })
                },
                clearQueue: function(type) {
                    return this.queue(type || "fx", [])
                },
                promise: function(type, obj) {
                    function resolve() {
                        --count || defer.resolveWith(elements, [elements])
                    }
                    var tmp,
                        count = 1,
                        defer = jQuery.Deferred(),
                        elements = this,
                        i = this.length;
                    for ("string" != typeof type && (obj = type, type = void 0), type = type || "fx"; i--;)
                        (tmp = dataPriv.get(elements[i], type + "queueHooks")) && tmp.empty && (count++, tmp.empty.add(resolve));
                    return resolve(), defer.promise(obj)
                }
            });
            var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
                rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"),
                cssExpand = ["Top", "Right", "Bottom", "Left"],
                documentElement = document.documentElement,
                isAttached = function(elem) {
                    return jQuery.contains(elem.ownerDocument, elem)
                },
                composed = {
                    composed: !0
                };
            documentElement.getRootNode && (isAttached = function(elem) {
                return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument
            });
            function swap(elem, options, callback, args) {
                var ret,
                    name,
                    old = {};
                for (name in options)
                    old[name] = elem.style[name], elem.style[name] = options[name];
                for (name in ret = callback.apply(elem, args || []), options)
                    elem.style[name] = old[name];
                return ret
            }
            var isHiddenWithinTree = function(elem, el) {
                return "none" === (elem = el || elem).style.display || "" === elem.style.display && isAttached(elem) && "none" === jQuery.css(elem, "display")
            };
            function adjustCSS(elem, prop, valueParts, tween) {
                var adjusted,
                    scale,
                    maxIterations = 20,
                    currentValue = tween ? function() {
                        return tween.cur()
                    } : function() {
                        return jQuery.css(elem, prop, "")
                    },
                    initial = currentValue(),
                    unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
                    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || "px" !== unit && +initial) && rcssNum.exec(jQuery.css(elem, prop));
                if (initialInUnit && initialInUnit[3] !== unit) {
                    for (initial /= 2, unit = unit || initialInUnit[3], initialInUnit = +initial || 1; maxIterations--;)
                        jQuery.style(elem, prop, initialInUnit + unit), (1 - scale) * (1 - (scale = currentValue() / initial || .5)) <= 0 && (maxIterations = 0), initialInUnit /= scale;
                    initialInUnit *= 2, jQuery.style(elem, prop, initialInUnit + unit), valueParts = valueParts || []
                }
                return valueParts && (initialInUnit = +initialInUnit || +initial || 0, adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2], tween && (tween.unit = unit, tween.start = initialInUnit, tween.end = adjusted)), adjusted
            }
            var defaultDisplayMap = {};
            function getDefaultDisplay(elem) {
                var temp,
                    doc = elem.ownerDocument,
                    nodeName = elem.nodeName,
                    display = defaultDisplayMap[nodeName];
                return display || (temp = doc.body.appendChild(doc.createElement(nodeName)), display = jQuery.css(temp, "display"), temp.parentNode.removeChild(temp), "none" === display && (display = "block"), defaultDisplayMap[nodeName] = display)
            }
            function showHide(elements, show) {
                for (var display, elem, values = [], index = 0, length = elements.length; index < length; index++)
                    (elem = elements[index]).style && (display = elem.style.display, show ? ("none" === display && (values[index] = dataPriv.get(elem, "display") || null, values[index] || (elem.style.display = "")), "" === elem.style.display && isHiddenWithinTree(elem) && (values[index] = getDefaultDisplay(elem))) : "none" !== display && (values[index] = "none", dataPriv.set(elem, "display", display)));
                for (index = 0; index < length; index++)
                    null != values[index] && (elements[index].style.display = values[index]);
                return elements
            }
            jQuery.fn.extend({
                show: function() {
                    return showHide(this, !0)
                },
                hide: function() {
                    return showHide(this)
                },
                toggle: function(state) {
                    return "boolean" == typeof state ? state ? this.show() : this.hide() : this.each(function() {
                        isHiddenWithinTree(this) ? jQuery(this).show() : jQuery(this).hide()
                    })
                }
            });
            var rcheckableType = /^(?:checkbox|radio)$/i,
                rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
                rscriptType = /^$|^module$|\/(?:java|ecma)script/i,
                wrapMap = {
                    option: [1, "<select multiple='multiple'>", "</select>"],
                    thead: [1, "<table>", "</table>"],
                    col: [2, "<table><colgroup>", "</colgroup></table>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                    _default: [0, "", ""]
                };
            function getAll(context, tag) {
                var ret;
                return ret = void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : void 0 !== context.querySelectorAll ? context.querySelectorAll(tag || "*") : [], void 0 === tag || tag && nodeName(context, tag) ? jQuery.merge([context], ret) : ret
            }
            function setGlobalEval(elems, refElements) {
                for (var i = 0, l = elems.length; i < l; i++)
                    dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"))
            }
            wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, wrapMap.th = wrapMap.td;
            var div,
                input,
                rhtml = /<|&#?\w+;/;
            function buildFragment(elems, context, scripts, selection, ignored) {
                for (var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length; i < l; i++)
                    if ((elem = elems[i]) || 0 === elem)
                        if ("object" === toType(elem))
                            jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
                        else if (rhtml.test(elem)) {
                            for (tmp = tmp || fragment.appendChild(context.createElement("div")), tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase(), wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2], j = wrap[0]; j--;)
                                tmp = tmp.lastChild;
                            jQuery.merge(nodes, tmp.childNodes), (tmp = fragment.firstChild).textContent = ""
                        } else
                            nodes.push(context.createTextNode(elem));
                for (fragment.textContent = "", i = 0; elem = nodes[i++];)
                    if (selection && -1 < jQuery.inArray(elem, selection))
                        ignored && ignored.push(elem);
                    else if (attached = isAttached(elem), tmp = getAll(fragment.appendChild(elem), "script"), attached && setGlobalEval(tmp), scripts)
                        for (j = 0; elem = tmp[j++];)
                            rscriptType.test(elem.type || "") && scripts.push(elem);
                return fragment
            }
            div = document.createDocumentFragment().appendChild(document.createElement("div")), (input = document.createElement("input")).setAttribute("type", "radio"), input.setAttribute("checked", "checked"), input.setAttribute("name", "t"), div.appendChild(input), support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked, div.innerHTML = "<textarea>x</textarea>", support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue;
            var rkeyEvent = /^key/,
                rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
            function returnTrue() {
                return !0
            }
            function returnFalse() {
                return !1
            }
            function expectSync(elem, type) {
                return elem === function() {
                    try {
                        return document.activeElement
                    } catch (err) {}
                }() == ("focus" === type)
            }
            function on(elem, types, selector, data, fn, one) {
                var origFn,
                    type;
                if ("object" == typeof types) {
                    for (type in "string" != typeof selector && (data = data || selector, selector = void 0), types)
                        on(elem, type, selector, data, types[type], one);
                    return elem
                }
                if (null == data && null == fn ? (fn = selector, data = selector = void 0) : null == fn && ("string" == typeof selector ? (fn = data, data = void 0) : (fn = data, data = selector, selector = void 0)), !1 === fn)
                    fn = returnFalse;
                else if (!fn)
                    return elem;
                return 1 === one && (origFn = fn, (fn = function(event) {
                    return jQuery().off(event), origFn.apply(this, arguments)
                }).guid = origFn.guid || (origFn.guid = jQuery.guid++)), elem.each(function() {
                    jQuery.event.add(this, types, fn, data, selector)
                })
            }
            function leverageNative(el, type, expectSync) {
                expectSync ? (dataPriv.set(el, type, !1), jQuery.event.add(el, type, {
                    namespace: !1,
                    handler: function(event) {
                        var notAsync,
                            result,
                            saved = dataPriv.get(this, type);
                        if (1 & event.isTrigger && this[type]) {
                            if (saved.length)
                                (jQuery.event.special[type] || {}).delegateType && event.stopPropagation();
                            else if (saved = slice.call(arguments), dataPriv.set(this, type, saved), notAsync = expectSync(this, type), this[type](), saved !== (result = dataPriv.get(this, type)) || notAsync ? dataPriv.set(this, type, !1) : result = {}, saved !== result)
                                return event.stopImmediatePropagation(), event.preventDefault(), result.value
                        } else
                            saved.length && (dataPriv.set(this, type, {
                                value: jQuery.event.trigger(jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
                            }), event.stopImmediatePropagation())
                    }
                })) : void 0 === dataPriv.get(el, type) && jQuery.event.add(el, type, returnTrue)
            }
            jQuery.event = {
                global: {},
                add: function(elem, types, handler, data, selector) {
                    var handleObjIn,
                        eventHandle,
                        tmp,
                        events,
                        t,
                        handleObj,
                        special,
                        handlers,
                        type,
                        namespaces,
                        origType,
                        elemData = dataPriv.get(elem);
                    if (elemData)
                        for (handler.handler && (handler = (handleObjIn = handler).handler, selector = handleObjIn.selector), selector && jQuery.find.matchesSelector(documentElement, selector), handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = {}), (eventHandle = elemData.handle) || (eventHandle = elemData.handle = function(e) {
                            return void 0 !== jQuery && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : void 0
                        }), t = (types = (types || "").match(rnothtmlwhite) || [""]).length; t--;)
                            type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1], namespaces = (tmp[2] || "").split(".").sort(), type && (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, special = jQuery.event.special[type] || {}, handleObj = jQuery.extend({
                                type: type,
                                origType: origType,
                                data: data,
                                handler: handler,
                                guid: handler.guid,
                                selector: selector,
                                needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                                namespace: namespaces.join(".")
                            }, handleObjIn), (handlers = events[type]) || ((handlers = events[type] = []).delegateCount = 0, special.setup && !1 !== special.setup.call(elem, data, namespaces, eventHandle) || elem.addEventListener && elem.addEventListener(type, eventHandle)), special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)), selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj), jQuery.event.global[type] = !0)
                },
                remove: function(elem, types, handler, selector, mappedTypes) {
                    var j,
                        origCount,
                        tmp,
                        events,
                        t,
                        handleObj,
                        special,
                        handlers,
                        type,
                        namespaces,
                        origType,
                        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
                    if (elemData && (events = elemData.events)) {
                        for (t = (types = (types || "").match(rnothtmlwhite) || [""]).length; t--;)
                            if (type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1], namespaces = (tmp[2] || "").split(".").sort(), type) {
                                for (special = jQuery.event.special[type] || {}, handlers = events[type = (selector ? special.delegateType : special.bindType) || type] || [], tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), origCount = j = handlers.length; j--;)
                                    handleObj = handlers[j], !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                                origCount && !handlers.length && (special.teardown && !1 !== special.teardown.call(elem, namespaces, elemData.handle) || jQuery.removeEvent(elem, type, elemData.handle), delete events[type])
                            } else
                                for (type in events)
                                    jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                        jQuery.isEmptyObject(events) && dataPriv.remove(elem, "handle events")
                    }
                },
                dispatch: function(nativeEvent) {
                    var i,
                        j,
                        ret,
                        matched,
                        handleObj,
                        handlerQueue,
                        event = jQuery.event.fix(nativeEvent),
                        args = new Array(arguments.length),
                        handlers = (dataPriv.get(this, "events") || {})[event.type] || [],
                        special = jQuery.event.special[event.type] || {};
                    for (args[0] = event, i = 1; i < arguments.length; i++)
                        args[i] = arguments[i];
                    if (event.delegateTarget = this, !special.preDispatch || !1 !== special.preDispatch.call(this, event)) {
                        for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped();)
                            for (event.currentTarget = matched.elem, j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped();)
                                event.rnamespace && !1 !== handleObj.namespace && !event.rnamespace.test(handleObj.namespace) || (event.handleObj = handleObj, event.data = handleObj.data, void 0 !== (ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args)) && !1 === (event.result = ret) && (event.preventDefault(), event.stopPropagation()));
                        return special.postDispatch && special.postDispatch.call(this, event), event.result
                    }
                },
                handlers: function(event, handlers) {
                    var i,
                        handleObj,
                        sel,
                        matchedHandlers,
                        matchedSelectors,
                        handlerQueue = [],
                        delegateCount = handlers.delegateCount,
                        cur = event.target;
                    if (delegateCount && cur.nodeType && !("click" === event.type && 1 <= event.button))
                        for (; cur !== this; cur = cur.parentNode || this)
                            if (1 === cur.nodeType && ("click" !== event.type || !0 !== cur.disabled)) {
                                for (matchedHandlers = [], matchedSelectors = {}, i = 0; i < delegateCount; i++)
                                    void 0 === matchedSelectors[sel = (handleObj = handlers[i]).selector + " "] && (matchedSelectors[sel] = handleObj.needsContext ? -1 < jQuery(sel, this).index(cur) : jQuery.find(sel, this, null, [cur]).length), matchedSelectors[sel] && matchedHandlers.push(handleObj);
                                matchedHandlers.length && handlerQueue.push({
                                    elem: cur,
                                    handlers: matchedHandlers
                                })
                            }
                    return cur = this, delegateCount < handlers.length && handlerQueue.push({
                        elem: cur,
                        handlers: handlers.slice(delegateCount)
                    }), handlerQueue
                },
                addProp: function(name, hook) {
                    Object.defineProperty(jQuery.Event.prototype, name, {
                        enumerable: !0,
                        configurable: !0,
                        get: isFunction(hook) ? function() {
                            if (this.originalEvent)
                                return hook(this.originalEvent)
                        } : function() {
                            if (this.originalEvent)
                                return this.originalEvent[name]
                        },
                        set: function(value) {
                            Object.defineProperty(this, name, {
                                enumerable: !0,
                                configurable: !0,
                                writable: !0,
                                value: value
                            })
                        }
                    })
                },
                fix: function(originalEvent) {
                    return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent)
                },
                special: {
                    load: {
                        noBubble: !0
                    },
                    click: {
                        setup: function(data) {
                            var el = this || data;
                            return rcheckableType.test(el.type) && el.click && nodeName(el, "input") && leverageNative(el, "click", returnTrue), !1
                        },
                        trigger: function(data) {
                            var el = this || data;
                            return rcheckableType.test(el.type) && el.click && nodeName(el, "input") && leverageNative(el, "click"), !0
                        },
                        _default: function(event) {
                            var target = event.target;
                            return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a")
                        }
                    },
                    beforeunload: {
                        postDispatch: function(event) {
                            void 0 !== event.result && event.originalEvent && (event.originalEvent.returnValue = event.result)
                        }
                    }
                }
            }, jQuery.removeEvent = function(elem, type, handle) {
                elem.removeEventListener && elem.removeEventListener(type, handle)
            }, jQuery.Event = function(src, props) {
                if (!(this instanceof jQuery.Event))
                    return new jQuery.Event(src, props);
                src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || void 0 === src.defaultPrevented && !1 === src.returnValue ? returnTrue : returnFalse, this.target = src.target && 3 === src.target.nodeType ? src.target.parentNode : src.target, this.currentTarget = src.currentTarget, this.relatedTarget = src.relatedTarget) : this.type = src, props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || Date.now(), this[jQuery.expando] = !0
            }, jQuery.Event.prototype = {
                constructor: jQuery.Event,
                isDefaultPrevented: returnFalse,
                isPropagationStopped: returnFalse,
                isImmediatePropagationStopped: returnFalse,
                isSimulated: !1,
                preventDefault: function() {
                    var e = this.originalEvent;
                    this.isDefaultPrevented = returnTrue, e && !this.isSimulated && e.preventDefault()
                },
                stopPropagation: function() {
                    var e = this.originalEvent;
                    this.isPropagationStopped = returnTrue, e && !this.isSimulated && e.stopPropagation()
                },
                stopImmediatePropagation: function() {
                    var e = this.originalEvent;
                    this.isImmediatePropagationStopped = returnTrue, e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation()
                }
            }, jQuery.each({
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                char: !0,
                code: !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: function(event) {
                    var button = event.button;
                    return null == event.which && rkeyEvent.test(event.type) ? null != event.charCode ? event.charCode : event.keyCode : !event.which && void 0 !== button && rmouseEvent.test(event.type) ? 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0 : event.which
                }
            }, jQuery.event.addProp), jQuery.each({
                focus: "focusin",
                blur: "focusout"
            }, function(type, delegateType) {
                jQuery.event.special[type] = {
                    setup: function() {
                        return leverageNative(this, type, expectSync), !1
                    },
                    trigger: function() {
                        return leverageNative(this, type), !0
                    },
                    delegateType: delegateType
                }
            }), jQuery.each({
                mouseenter: "mouseover",
                mouseleave: "mouseout",
                pointerenter: "pointerover",
                pointerleave: "pointerout"
            }, function(orig, fix) {
                jQuery.event.special[orig] = {
                    delegateType: fix,
                    bindType: fix,
                    handle: function(event) {
                        var ret,
                            related = event.relatedTarget,
                            handleObj = event.handleObj;
                        return related && (related === this || jQuery.contains(this, related)) || (event.type = handleObj.origType, ret = handleObj.handler.apply(this, arguments), event.type = fix), ret
                    }
                }
            }), jQuery.fn.extend({
                on: function(types, selector, data, fn) {
                    return on(this, types, selector, data, fn)
                },
                one: function(types, selector, data, fn) {
                    return on(this, types, selector, data, fn, 1)
                },
                off: function(types, selector, fn) {
                    var handleObj,
                        type;
                    if (types && types.preventDefault && types.handleObj)
                        return handleObj = types.handleObj, jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), this;
                    if ("object" != typeof types)
                        return !1 !== selector && "function" != typeof selector || (fn = selector, selector = void 0), !1 === fn && (fn = returnFalse), this.each(function() {
                            jQuery.event.remove(this, types, fn, selector)
                        });
                    for (type in types)
                        this.off(type, selector, types[type]);
                    return this
                }
            });
            var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
                rnoInnerhtml = /<script|<style|<link/i,
                rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
                rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
            function manipulationTarget(elem, content) {
                return nodeName(elem, "table") && nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") && jQuery(elem).children("tbody")[0] || elem
            }
            function disableScript(elem) {
                return elem.type = (null !== elem.getAttribute("type")) + "/" + elem.type, elem
            }
            function restoreScript(elem) {
                return "true/" === (elem.type || "").slice(0, 5) ? elem.type = elem.type.slice(5) : elem.removeAttribute("type"), elem
            }
            function cloneCopyEvent(src, dest) {
                var i,
                    l,
                    type,
                    pdataOld,
                    pdataCur,
                    udataOld,
                    udataCur,
                    events;
                if (1 === dest.nodeType) {
                    if (dataPriv.hasData(src) && (pdataOld = dataPriv.access(src), pdataCur = dataPriv.set(dest, pdataOld), events = pdataOld.events))
                        for (type in delete pdataCur.handle, pdataCur.events = {}, events)
                            for (i = 0, l = events[type].length; i < l; i++)
                                jQuery.event.add(dest, type, events[type][i]);
                    dataUser.hasData(src) && (udataOld = dataUser.access(src), udataCur = jQuery.extend({}, udataOld), dataUser.set(dest, udataCur))
                }
            }
            function domManip(collection, args, callback, ignored) {
                args = concat.apply([], args);
                var fragment,
                    first,
                    scripts,
                    hasScripts,
                    node,
                    doc,
                    i = 0,
                    l = collection.length,
                    iNoClone = l - 1,
                    value = args[0],
                    valueIsFunction = isFunction(value);
                if (valueIsFunction || 1 < l && "string" == typeof value && !support.checkClone && rchecked.test(value))
                    return collection.each(function(index) {
                        var self = collection.eq(index);
                        valueIsFunction && (args[0] = value.call(this, index, self.html())), domManip(self, args, callback, ignored)
                    });
                if (l && (first = (fragment = buildFragment(args, collection[0].ownerDocument, !1, collection, ignored)).firstChild, 1 === fragment.childNodes.length && (fragment = first), first || ignored)) {
                    for (hasScripts = (scripts = jQuery.map(getAll(fragment, "script"), disableScript)).length; i < l; i++)
                        node = fragment, i !== iNoClone && (node = jQuery.clone(node, !0, !0), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), callback.call(collection[i], node, i);
                    if (hasScripts)
                        for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), i = 0; i < hasScripts; i++)
                            node = scripts[i], rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node) && (node.src && "module" !== (node.type || "").toLowerCase() ? jQuery._evalUrl && !node.noModule && jQuery._evalUrl(node.src, {
                                nonce: node.nonce || node.getAttribute("nonce")
                            }) : DOMEval(node.textContent.replace(rcleanScript, ""), node, doc))
                }
                return collection
            }
            function remove(elem, selector, keepData) {
                for (var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0; null != (node = nodes[i]); i++)
                    keepData || 1 !== node.nodeType || jQuery.cleanData(getAll(node)), node.parentNode && (keepData && isAttached(node) && setGlobalEval(getAll(node, "script")), node.parentNode.removeChild(node));
                return elem
            }
            jQuery.extend({
                htmlPrefilter: function(html) {
                    return html.replace(rxhtmlTag, "<$1></$2>")
                },
                clone: function(elem, dataAndEvents, deepDataAndEvents) {
                    var i,
                        l,
                        srcElements,
                        destElements,
                        src,
                        dest,
                        nodeName,
                        clone = elem.cloneNode(!0),
                        inPage = isAttached(elem);
                    if (!(support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem)))
                        for (destElements = getAll(clone), i = 0, l = (srcElements = getAll(elem)).length; i < l; i++)
                            src = srcElements[i], dest = destElements[i], void 0, "input" === (nodeName = dest.nodeName.toLowerCase()) && rcheckableType.test(src.type) ? dest.checked = src.checked : "input" !== nodeName && "textarea" !== nodeName || (dest.defaultValue = src.defaultValue);
                    if (dataAndEvents)
                        if (deepDataAndEvents)
                            for (srcElements = srcElements || getAll(elem), destElements = destElements || getAll(clone), i = 0, l = srcElements.length; i < l; i++)
                                cloneCopyEvent(srcElements[i], destElements[i]);
                        else
                            cloneCopyEvent(elem, clone);
                    return 0 < (destElements = getAll(clone, "script")).length && setGlobalEval(destElements, !inPage && getAll(elem, "script")), clone
                },
                cleanData: function(elems) {
                    for (var data, elem, type, special = jQuery.event.special, i = 0; void 0 !== (elem = elems[i]); i++)
                        if (acceptData(elem)) {
                            if (data = elem[dataPriv.expando]) {
                                if (data.events)
                                    for (type in data.events)
                                        special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                                elem[dataPriv.expando] = void 0
                            }
                            elem[dataUser.expando] && (elem[dataUser.expando] = void 0)
                        }
                }
            }), jQuery.fn.extend({
                detach: function(selector) {
                    return remove(this, selector, !0)
                },
                remove: function(selector) {
                    return remove(this, selector)
                },
                text: function(value) {
                    return access(this, function(value) {
                        return void 0 === value ? jQuery.text(this) : this.empty().each(function() {
                            1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = value)
                        })
                    }, null, value, arguments.length)
                },
                append: function() {
                    return domManip(this, arguments, function(elem) {
                        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || manipulationTarget(this, elem).appendChild(elem)
                    })
                },
                prepend: function() {
                    return domManip(this, arguments, function(elem) {
                        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                            var target = manipulationTarget(this, elem);
                            target.insertBefore(elem, target.firstChild)
                        }
                    })
                },
                before: function() {
                    return domManip(this, arguments, function(elem) {
                        this.parentNode && this.parentNode.insertBefore(elem, this)
                    })
                },
                after: function() {
                    return domManip(this, arguments, function(elem) {
                        this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling)
                    })
                },
                empty: function() {
                    for (var elem, i = 0; null != (elem = this[i]); i++)
                        1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), elem.textContent = "");
                    return this
                },
                clone: function(dataAndEvents, deepDataAndEvents) {
                    return dataAndEvents = null != dataAndEvents && dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, this.map(function() {
                        return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
                    })
                },
                html: function(value) {
                    return access(this, function(value) {
                        var elem = this[0] || {},
                            i = 0,
                            l = this.length;
                        if (void 0 === value && 1 === elem.nodeType)
                            return elem.innerHTML;
                        if ("string" == typeof value && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
                            value = jQuery.htmlPrefilter(value);
                            try {
                                for (; i < l; i++)
                                    1 === (elem = this[i] || {}).nodeType && (jQuery.cleanData(getAll(elem, !1)), elem.innerHTML = value);
                                elem = 0
                            } catch (e) {}
                        }
                        elem && this.empty().append(value)
                    }, null, value, arguments.length)
                },
                replaceWith: function() {
                    var ignored = [];
                    return domManip(this, arguments, function(elem) {
                        var parent = this.parentNode;
                        jQuery.inArray(this, ignored) < 0 && (jQuery.cleanData(getAll(this)), parent && parent.replaceChild(elem, this))
                    }, ignored)
                }
            }), jQuery.each({
                appendTo: "append",
                prependTo: "prepend",
                insertBefore: "before",
                insertAfter: "after",
                replaceAll: "replaceWith"
            }, function(name, original) {
                jQuery.fn[name] = function(selector) {
                    for (var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0; i <= last; i++)
                        elems = i === last ? this : this.clone(!0), jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
                    return this.pushStack(ret)
                }
            });
            var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i"),
                getStyles = function(elem) {
                    var view = elem.ownerDocument.defaultView;
                    return view && view.opener || (view = window), view.getComputedStyle(elem)
                },
                rboxStyle = new RegExp(cssExpand.join("|"), "i");
            function curCSS(elem, name, computed) {
                var width,
                    minWidth,
                    maxWidth,
                    ret,
                    style = elem.style;
                return (computed = computed || getStyles(elem)) && ("" !== (ret = computed.getPropertyValue(name) || computed[name]) || isAttached(elem) || (ret = jQuery.style(elem, name)), !support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name) && (width = style.width, minWidth = style.minWidth, maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, ret = computed.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), void 0 !== ret ? ret + "" : ret
            }
            function addGetHookIf(conditionFn, hookFn) {
                return {
                    get: function() {
                        if (!conditionFn())
                            return (this.get = hookFn).apply(this, arguments);
                        delete this.get
                    }
                }
            }
            !function() {
                function computeStyleTests() {
                    if (div) {
                        container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", documentElement.appendChild(container).appendChild(div);
                        var divStyle = window.getComputedStyle(div);
                        pixelPositionVal = "1%" !== divStyle.top, reliableMarginLeftVal = 12 === roundPixelMeasures(divStyle.marginLeft), div.style.right = "60%", pixelBoxStylesVal = 36 === roundPixelMeasures(divStyle.right), boxSizingReliableVal = 36 === roundPixelMeasures(divStyle.width), div.style.position = "absolute", scrollboxSizeVal = 12 === roundPixelMeasures(div.offsetWidth / 3), documentElement.removeChild(container), div = null
                    }
                }
                function roundPixelMeasures(measure) {
                    return Math.round(parseFloat(measure))
                }
                var pixelPositionVal,
                    boxSizingReliableVal,
                    scrollboxSizeVal,
                    pixelBoxStylesVal,
                    reliableMarginLeftVal,
                    container = document.createElement("div"),
                    div = document.createElement("div");
                div.style && (div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", support.clearCloneStyle = "content-box" === div.style.backgroundClip, jQuery.extend(support, {
                    boxSizingReliable: function() {
                        return computeStyleTests(), boxSizingReliableVal
                    },
                    pixelBoxStyles: function() {
                        return computeStyleTests(), pixelBoxStylesVal
                    },
                    pixelPosition: function() {
                        return computeStyleTests(), pixelPositionVal
                    },
                    reliableMarginLeft: function() {
                        return computeStyleTests(), reliableMarginLeftVal
                    },
                    scrollboxSize: function() {
                        return computeStyleTests(), scrollboxSizeVal
                    }
                }))
            }();
            var cssPrefixes = ["Webkit", "Moz", "ms"],
                emptyStyle = document.createElement("div").style,
                vendorProps = {};
            function finalPropName(name) {
                var final = jQuery.cssProps[name] || vendorProps[name];
                return final || (name in emptyStyle ? name : vendorProps[name] = function(name) {
                        for (var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length; i--;)
                            if ((name = cssPrefixes[i] + capName) in emptyStyle)
                                return name
                    }(name) || name)
            }
            var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
                rcustomProp = /^--/,
                cssShow = {
                    position: "absolute",
                    visibility: "hidden",
                    display: "block"
                },
                cssNormalTransform = {
                    letterSpacing: "0",
                    fontWeight: "400"
                };
            function setPositiveNumber(elem, value, subtract) {
                var matches = rcssNum.exec(value);
                return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value
            }
            function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
                var i = "width" === dimension ? 1 : 0,
                    extra = 0,
                    delta = 0;
                if (box === (isBorderBox ? "border" : "content"))
                    return 0;
                for (; i < 4; i += 2)
                    "margin" === box && (delta += jQuery.css(elem, box + cssExpand[i], !0, styles)), isBorderBox ? ("content" === box && (delta -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), "margin" !== box && (delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (delta += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), "padding" !== box ? delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles) : extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles));
                return !isBorderBox && 0 <= computedVal && (delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - .5)) || 0), delta
            }
            function getWidthOrHeight(elem, dimension, extra) {
                var styles = getStyles(elem),
                    isBorderBox = (!support.boxSizingReliable() || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles),
                    valueIsBorderBox = isBorderBox,
                    val = curCSS(elem, dimension, styles),
                    offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
                if (rnumnonpx.test(val)) {
                    if (!extra)
                        return val;
                    val = "auto"
                }
                return (!support.boxSizingReliable() && isBorderBox || "auto" === val || !parseFloat(val) && "inline" === jQuery.css(elem, "display", !1, styles)) && elem.getClientRects().length && (isBorderBox = "border-box" === jQuery.css(elem, "boxSizing", !1, styles), (valueIsBorderBox = offsetProp in elem) && (val = elem[offsetProp])), (val = parseFloat(val) || 0) + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, val) + "px"
            }
            function Tween(elem, options, prop, end, easing) {
                return new Tween.prototype.init(elem, options, prop, end, easing)
            }
            jQuery.extend({
                cssHooks: {
                    opacity: {
                        get: function(elem, computed) {
                            if (computed) {
                                var ret = curCSS(elem, "opacity");
                                return "" === ret ? "1" : ret
                            }
                        }
                    }
                },
                cssNumber: {
                    animationIterationCount: !0,
                    columnCount: !0,
                    fillOpacity: !0,
                    flexGrow: !0,
                    flexShrink: !0,
                    fontWeight: !0,
                    gridArea: !0,
                    gridColumn: !0,
                    gridColumnEnd: !0,
                    gridColumnStart: !0,
                    gridRow: !0,
                    gridRowEnd: !0,
                    gridRowStart: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0
                },
                cssProps: {},
                style: function(elem, name, value, extra) {
                    if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                        var ret,
                            type,
                            hooks,
                            origName = camelCase(name),
                            isCustomProp = rcustomProp.test(name),
                            style = elem.style;
                        if (isCustomProp || (name = finalPropName(origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], void 0 === value)
                            return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
                        "string" === (type = typeof value) && (ret = rcssNum.exec(value)) && ret[1] && (value = adjustCSS(elem, name, ret), type = "number"), null != value && value == value && ("number" !== type || isCustomProp || (value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px")), support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra)) || (isCustomProp ? style.setProperty(name, value) : style[name] = value))
                    }
                },
                css: function(elem, name, extra, styles) {
                    var val,
                        num,
                        hooks,
                        origName = camelCase(name);
                    return rcustomProp.test(name) || (name = finalPropName(origName)), (hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]) && "get" in hooks && (val = hooks.get(elem, !0, extra)), void 0 === val && (val = curCSS(elem, name, styles)), "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]), "" === extra || extra ? (num = parseFloat(val), !0 === extra || isFinite(num) ? num || 0 : val) : val
                }
            }), jQuery.each(["height", "width"], function(i, dimension) {
                jQuery.cssHooks[dimension] = {
                    get: function(elem, computed, extra) {
                        if (computed)
                            return !rdisplayswap.test(jQuery.css(elem, "display")) || elem.getClientRects().length && elem.getBoundingClientRect().width ? getWidthOrHeight(elem, dimension, extra) : swap(elem, cssShow, function() {
                                return getWidthOrHeight(elem, dimension, extra)
                            })
                    },
                    set: function(elem, value, extra) {
                        var matches,
                            styles = getStyles(elem),
                            scrollboxSizeBuggy = !support.scrollboxSize() && "absolute" === styles.position,
                            isBorderBox = (scrollboxSizeBuggy || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles),
                            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
                        return isBorderBox && scrollboxSizeBuggy && (subtract -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", !1, styles) - .5)), subtract && (matches = rcssNum.exec(value)) && "px" !== (matches[3] || "px") && (elem.style[dimension] = value, value = jQuery.css(elem, dimension)), setPositiveNumber(0, value, subtract)
                    }
                }
            }), jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
                if (computed)
                    return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
                        marginLeft: 0
                    }, function() {
                        return elem.getBoundingClientRect().left
                    })) + "px"
            }), jQuery.each({
                margin: "",
                padding: "",
                border: "Width"
            }, function(prefix, suffix) {
                jQuery.cssHooks[prefix + suffix] = {
                    expand: function(value) {
                        for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [value]; i < 4; i++)
                            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                        return expanded
                    }
                }, "margin" !== prefix && (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber)
            }), jQuery.fn.extend({
                css: function(name, value) {
                    return access(this, function(elem, name, value) {
                        var styles,
                            len,
                            map = {},
                            i = 0;
                        if (Array.isArray(name)) {
                            for (styles = getStyles(elem), len = name.length; i < len; i++)
                                map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                            return map
                        }
                        return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
                    }, name, value, 1 < arguments.length)
                }
            }), ((jQuery.Tween = Tween).prototype = {
                constructor: Tween,
                init: function(elem, options, prop, end, easing, unit) {
                    this.elem = elem, this.prop = prop, this.easing = easing || jQuery.easing._default, this.options = options, this.start = this.now = this.cur(), this.end = end, this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px")
                },
                cur: function() {
                    var hooks = Tween.propHooks[this.prop];
                    return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this)
                },
                run: function(percent) {
                    var eased,
                        hooks = Tween.propHooks[this.prop];
                    return this.options.duration ? this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : this.pos = eased = percent, this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this), this
                }
            }).init.prototype = Tween.prototype, (Tween.propHooks = {
                _default: {
                    get: function(tween) {
                        var result;
                        return 1 !== tween.elem.nodeType || null != tween.elem[tween.prop] && null == tween.elem.style[tween.prop] ? tween.elem[tween.prop] : (result = jQuery.css(tween.elem, tween.prop, "")) && "auto" !== result ? result : 0
                    },
                    set: function(tween) {
                        jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : 1 !== tween.elem.nodeType || !jQuery.cssHooks[tween.prop] && null == tween.elem.style[finalPropName(tween.prop)] ? tween.elem[tween.prop] = tween.now : jQuery.style(tween.elem, tween.prop, tween.now + tween.unit)
                    }
                }
            }).scrollTop = Tween.propHooks.scrollLeft = {
                set: function(tween) {
                    tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now)
                }
            }, jQuery.easing = {
                linear: function(p) {
                    return p
                },
                swing: function(p) {
                    return .5 - Math.cos(p * Math.PI) / 2
                },
                _default: "swing"
            }, jQuery.fx = Tween.prototype.init, jQuery.fx.step = {};
            var fxNow,
                inProgress,
                rfxtypes = /^(?:toggle|show|hide)$/,
                rrun = /queueHooks$/;
            function schedule() {
                inProgress && (!1 === document.hidden && window.requestAnimationFrame ? window.requestAnimationFrame(schedule) : window.setTimeout(schedule, jQuery.fx.interval), jQuery.fx.tick())
            }
            function createFxNow() {
                return window.setTimeout(function() {
                    fxNow = void 0
                }), fxNow = Date.now()
            }
            function genFx(type, includeWidth) {
                var which,
                    i = 0,
                    attrs = {
                        height: type
                    };
                for (includeWidth = includeWidth ? 1 : 0; i < 4; i += 2 - includeWidth)
                    attrs["margin" + (which = cssExpand[i])] = attrs["padding" + which] = type;
                return includeWidth && (attrs.opacity = attrs.width = type), attrs
            }
            function createTween(value, prop, animation) {
                for (var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length; index < length; index++)
                    if (tween = collection[index].call(animation, prop, value))
                        return tween
            }
            function Animation(elem, properties, options) {
                var result,
                    stopped,
                    index = 0,
                    length = Animation.prefilters.length,
                    deferred = jQuery.Deferred().always(function() {
                        delete tick.elem
                    }),
                    tick = function() {
                        if (stopped)
                            return !1;
                        for (var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), percent = 1 - (remaining / animation.duration || 0), index = 0, length = animation.tweens.length; index < length; index++)
                            animation.tweens[index].run(percent);
                        return deferred.notifyWith(elem, [animation, percent, remaining]), percent < 1 && length ? remaining : (length || deferred.notifyWith(elem, [animation, 1, 0]), deferred.resolveWith(elem, [animation]), !1)
                    },
                    animation = deferred.promise({
                        elem: elem,
                        props: jQuery.extend({}, properties),
                        opts: jQuery.extend(!0, {
                            specialEasing: {},
                            easing: jQuery.easing._default
                        }, options),
                        originalProperties: properties,
                        originalOptions: options,
                        startTime: fxNow || createFxNow(),
                        duration: options.duration,
                        tweens: [],
                        createTween: function(prop, end) {
                            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                            return animation.tweens.push(tween), tween
                        },
                        stop: function(gotoEnd) {
                            var index = 0,
                                length = gotoEnd ? animation.tweens.length : 0;
                            if (stopped)
                                return this;
                            for (stopped = !0; index < length; index++)
                                animation.tweens[index].run(1);
                            return gotoEnd ? (deferred.notifyWith(elem, [animation, 1, 0]), deferred.resolveWith(elem, [animation, gotoEnd])) : deferred.rejectWith(elem, [animation, gotoEnd]), this
                        }
                    }),
                    props = animation.props;
                for (!function(props, specialEasing) {
                    var index,
                        name,
                        easing,
                        value,
                        hooks;
                    for (index in props)
                        if (easing = specialEasing[name = camelCase(index)], value = props[index], Array.isArray(value) && (easing = value[1], value = props[index] = value[0]), index !== name && (props[name] = value, delete props[index]), (hooks = jQuery.cssHooks[name]) && "expand" in hooks)
                            for (index in value = hooks.expand(value), delete props[name], value)
                                index in props || (props[index] = value[index], specialEasing[index] = easing);
                        else
                            specialEasing[name] = easing
                }(props, animation.opts.specialEasing); index < length; index++)
                    if (result = Animation.prefilters[index].call(animation, elem, props, animation.opts))
                        return isFunction(result.stop) && (jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result)), result;
                return jQuery.map(props, createTween, animation), isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always), jQuery.fx.timer(jQuery.extend(tick, {
                    elem: elem,
                    anim: animation,
                    queue: animation.opts.queue
                })), animation
            }
            jQuery.Animation = jQuery.extend(Animation, {
                tweeners: {
                    "*": [function(prop, value) {
                        var tween = this.createTween(prop, value);
                        return adjustCSS(tween.elem, prop, rcssNum.exec(value), tween), tween
                    }]
                },
                tweener: function(props, callback) {
                    for (var prop, index = 0, length = (props = isFunction(props) ? (callback = props, ["*"]) : props.match(rnothtmlwhite)).length; index < length; index++)
                        prop = props[index], Animation.tweeners[prop] = Animation.tweeners[prop] || [], Animation.tweeners[prop].unshift(callback)
                },
                prefilters: [function(elem, props, opts) {
                    var prop,
                        value,
                        toggle,
                        hooks,
                        oldfire,
                        propTween,
                        restoreDisplay,
                        display,
                        isBox = "width" in props || "height" in props,
                        anim = this,
                        orig = {},
                        style = elem.style,
                        hidden = elem.nodeType && isHiddenWithinTree(elem),
                        dataShow = dataPriv.get(elem, "fxshow");
                    for (prop in opts.queue || (null == (hooks = jQuery._queueHooks(elem, "fx")).unqueued && (hooks.unqueued = 0, oldfire = hooks.empty.fire, hooks.empty.fire = function() {
                        hooks.unqueued || oldfire()
                    }), hooks.unqueued++, anim.always(function() {
                        anim.always(function() {
                            hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire()
                        })
                    })), props)
                        if (value = props[prop], rfxtypes.test(value)) {
                            if (delete props[prop], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) {
                                if ("show" !== value || !dataShow || void 0 === dataShow[prop])
                                    continue;
                                hidden = !0
                            }
                            orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop)
                        }
                    if ((propTween = !jQuery.isEmptyObject(props)) || !jQuery.isEmptyObject(orig))
                        for (prop in isBox && 1 === elem.nodeType && (opts.overflow = [style.overflow, style.overflowX, style.overflowY], null == (restoreDisplay = dataShow && dataShow.display) && (restoreDisplay = dataPriv.get(elem, "display")), "none" === (display = jQuery.css(elem, "display")) && (restoreDisplay ? display = restoreDisplay : (showHide([elem], !0), restoreDisplay = elem.style.display || restoreDisplay, display = jQuery.css(elem, "display"), showHide([elem]))), ("inline" === display || "inline-block" === display && null != restoreDisplay) && "none" === jQuery.css(elem, "float") && (propTween || (anim.done(function() {
                            style.display = restoreDisplay
                        }), null == restoreDisplay && (display = style.display, restoreDisplay = "none" === display ? "" : display)), style.display = "inline-block")), opts.overflow && (style.overflow = "hidden", anim.always(function() {
                            style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], style.overflowY = opts.overflow[2]
                        })), propTween = !1, orig)
                            propTween || (dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : dataShow = dataPriv.access(elem, "fxshow", {
                                display: restoreDisplay
                            }), toggle && (dataShow.hidden = !hidden), hidden && showHide([elem], !0), anim.done(function() {
                                for (prop in hidden || showHide([elem]), dataPriv.remove(elem, "fxshow"), orig)
                                    jQuery.style(elem, prop, orig[prop])
                            })), propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim), prop in dataShow || (dataShow[prop] = propTween.start, hidden && (propTween.end = propTween.start, propTween.start = 0))
                }],
                prefilter: function(callback, prepend) {
                    prepend ? Animation.prefilters.unshift(callback) : Animation.prefilters.push(callback)
                }
            }), jQuery.speed = function(speed, easing, fn) {
                var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
                    complete: fn || !fn && easing || isFunction(speed) && speed,
                    duration: speed,
                    easing: fn && easing || easing && !isFunction(easing) && easing
                };
                return jQuery.fx.off ? opt.duration = 0 : "number" != typeof opt.duration && (opt.duration in jQuery.fx.speeds ? opt.duration = jQuery.fx.speeds[opt.duration] : opt.duration = jQuery.fx.speeds._default), null != opt.queue && !0 !== opt.queue || (opt.queue = "fx"), opt.old = opt.complete, opt.complete = function() {
                    isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue)
                }, opt
            }, jQuery.fn.extend({
                fadeTo: function(speed, to, easing, callback) {
                    return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({
                        opacity: to
                    }, speed, easing, callback)
                },
                animate: function(prop, speed, easing, callback) {
                    function doAnimation() {
                        var anim = Animation(this, jQuery.extend({}, prop), optall);
                        (empty || dataPriv.get(this, "finish")) && anim.stop(!0)
                    }
                    var empty = jQuery.isEmptyObject(prop),
                        optall = jQuery.speed(speed, easing, callback);
                    return doAnimation.finish = doAnimation, empty || !1 === optall.queue ? this.each(doAnimation) : this.queue(optall.queue, doAnimation)
                },
                stop: function(type, clearQueue, gotoEnd) {
                    function stopQueue(hooks) {
                        var stop = hooks.stop;
                        delete hooks.stop, stop(gotoEnd)
                    }
                    return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, type = void 0), clearQueue && !1 !== type && this.queue(type || "fx", []), this.each(function() {
                        var dequeue = !0,
                            index = null != type && type + "queueHooks",
                            timers = jQuery.timers,
                            data = dataPriv.get(this);
                        if (index)
                            data[index] && data[index].stop && stopQueue(data[index]);
                        else
                            for (index in data)
                                data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                        for (index = timers.length; index--;)
                            timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), dequeue = !1, timers.splice(index, 1));
                        !dequeue && gotoEnd || jQuery.dequeue(this, type)
                    })
                },
                finish: function(type) {
                    return !1 !== type && (type = type || "fx"), this.each(function() {
                        var index,
                            data = dataPriv.get(this),
                            queue = data[type + "queue"],
                            hooks = data[type + "queueHooks"],
                            timers = jQuery.timers,
                            length = queue ? queue.length : 0;
                        for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), index = timers.length; index--;)
                            timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), timers.splice(index, 1));
                        for (index = 0; index < length; index++)
                            queue[index] && queue[index].finish && queue[index].finish.call(this);
                        delete data.finish
                    })
                }
            }), jQuery.each(["toggle", "show", "hide"], function(i, name) {
                var cssFn = jQuery.fn[name];
                jQuery.fn[name] = function(speed, easing, callback) {
                    return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback)
                }
            }), jQuery.each({
                slideDown: genFx("show"),
                slideUp: genFx("hide"),
                slideToggle: genFx("toggle"),
                fadeIn: {
                    opacity: "show"
                },
                fadeOut: {
                    opacity: "hide"
                },
                fadeToggle: {
                    opacity: "toggle"
                }
            }, function(name, props) {
                jQuery.fn[name] = function(speed, easing, callback) {
                    return this.animate(props, speed, easing, callback)
                }
            }), jQuery.timers = [], jQuery.fx.tick = function() {
                var timer,
                    i = 0,
                    timers = jQuery.timers;
                for (fxNow = Date.now(); i < timers.length; i++)
                    (timer = timers[i])() || timers[i] !== timer || timers.splice(i--, 1);
                timers.length || jQuery.fx.stop(), fxNow = void 0
            }, jQuery.fx.timer = function(timer) {
                jQuery.timers.push(timer), jQuery.fx.start()
            }, jQuery.fx.interval = 13, jQuery.fx.start = function() {
                inProgress || (inProgress = !0, schedule())
            }, jQuery.fx.stop = function() {
                inProgress = null
            }, jQuery.fx.speeds = {
                slow: 600,
                fast: 200,
                _default: 400
            }, jQuery.fn.delay = function(time, type) {
                return time = jQuery.fx && jQuery.fx.speeds[time] || time, type = type || "fx", this.queue(type, function(next, hooks) {
                    var timeout = window.setTimeout(next, time);
                    hooks.stop = function() {
                        window.clearTimeout(timeout)
                    }
                })
            }, function() {
                var input = document.createElement("input"),
                    opt = document.createElement("select").appendChild(document.createElement("option"));
                input.type = "checkbox", support.checkOn = "" !== input.value, support.optSelected = opt.selected, (input = document.createElement("input")).value = "t", input.type = "radio", support.radioValue = "t" === input.value
            }();
            var boolHook,
                attrHandle = jQuery.expr.attrHandle;
            jQuery.fn.extend({
                attr: function(name, value) {
                    return access(this, jQuery.attr, name, value, 1 < arguments.length)
                },
                removeAttr: function(name) {
                    return this.each(function() {
                        jQuery.removeAttr(this, name)
                    })
                }
            }), jQuery.extend({
                attr: function(elem, name, value) {
                    var ret,
                        hooks,
                        nType = elem.nodeType;
                    if (3 !== nType && 8 !== nType && 2 !== nType)
                        return void 0 === elem.getAttribute ? jQuery.prop(elem, name, value) : (1 === nType && jQuery.isXMLDoc(elem) || (hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : void 0)), void 0 !== value ? null === value ? void jQuery.removeAttr(elem, name) : hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem.setAttribute(name, value + ""), value) : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : null == (ret = jQuery.find.attr(elem, name)) ? void 0 : ret)
                },
                attrHooks: {
                    type: {
                        set: function(elem, value) {
                            if (!support.radioValue && "radio" === value && nodeName(elem, "input")) {
                                var val = elem.value;
                                return elem.setAttribute("type", value), val && (elem.value = val), value
                            }
                        }
                    }
                },
                removeAttr: function(elem, value) {
                    var name,
                        i = 0,
                        attrNames = value && value.match(rnothtmlwhite);
                    if (attrNames && 1 === elem.nodeType)
                        for (; name = attrNames[i++];)
                            elem.removeAttribute(name)
                }
            }), boolHook = {
                set: function(elem, value, name) {
                    return !1 === value ? jQuery.removeAttr(elem, name) : elem.setAttribute(name, name), name
                }
            }, jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(i, name) {
                var getter = attrHandle[name] || jQuery.find.attr;
                attrHandle[name] = function(elem, name, isXML) {
                    var ret,
                        handle,
                        lowercaseName = name.toLowerCase();
                    return isXML || (handle = attrHandle[lowercaseName], attrHandle[lowercaseName] = ret, ret = null != getter(elem, name, isXML) ? lowercaseName : null, attrHandle[lowercaseName] = handle), ret
                }
            });
            var rfocusable = /^(?:input|select|textarea|button)$/i,
                rclickable = /^(?:a|area)$/i;
            function stripAndCollapse(value) {
                return (value.match(rnothtmlwhite) || []).join(" ")
            }
            function getClass(elem) {
                return elem.getAttribute && elem.getAttribute("class") || ""
            }
            function classesToArray(value) {
                return Array.isArray(value) ? value : "string" == typeof value && value.match(rnothtmlwhite) || []
            }
            jQuery.fn.extend({
                prop: function(name, value) {
                    return access(this, jQuery.prop, name, value, 1 < arguments.length)
                },
                removeProp: function(name) {
                    return this.each(function() {
                        delete this[jQuery.propFix[name] || name]
                    })
                }
            }), jQuery.extend({
                prop: function(elem, name, value) {
                    var ret,
                        hooks,
                        nType = elem.nodeType;
                    if (3 !== nType && 8 !== nType && 2 !== nType)
                        return 1 === nType && jQuery.isXMLDoc(elem) || (name = jQuery.propFix[name] || name, hooks = jQuery.propHooks[name]), void 0 !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name]
                },
                propHooks: {
                    tabIndex: {
                        get: function(elem) {
                            var tabindex = jQuery.find.attr(elem, "tabindex");
                            return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1
                        }
                    }
                },
                propFix: {
                    for: "htmlFor",
                    class: "className"
                }
            }), support.optSelected || (jQuery.propHooks.selected = {
                get: function(elem) {
                    var parent = elem.parentNode;
                    return parent && parent.parentNode && parent.parentNode.selectedIndex, null
                },
                set: function(elem) {
                    var parent = elem.parentNode;
                    parent && (parent.selectedIndex, parent.parentNode && parent.parentNode.selectedIndex)
                }
            }), jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
                jQuery.propFix[this.toLowerCase()] = this
            }), jQuery.fn.extend({
                addClass: function(value) {
                    var classes,
                        elem,
                        cur,
                        curValue,
                        clazz,
                        j,
                        finalValue,
                        i = 0;
                    if (isFunction(value))
                        return this.each(function(j) {
                            jQuery(this).addClass(value.call(this, j, getClass(this)))
                        });
                    if ((classes = classesToArray(value)).length)
                        for (; elem = this[i++];)
                            if (curValue = getClass(elem), cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " ") {
                                for (j = 0; clazz = classes[j++];)
                                    cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                                curValue !== (finalValue = stripAndCollapse(cur)) && elem.setAttribute("class", finalValue)
                            }
                    return this
                },
                removeClass: function(value) {
                    var classes,
                        elem,
                        cur,
                        curValue,
                        clazz,
                        j,
                        finalValue,
                        i = 0;
                    if (isFunction(value))
                        return this.each(function(j) {
                            jQuery(this).removeClass(value.call(this, j, getClass(this)))
                        });
                    if (!arguments.length)
                        return this.attr("class", "");
                    if ((classes = classesToArray(value)).length)
                        for (; elem = this[i++];)
                            if (curValue = getClass(elem), cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " ") {
                                for (j = 0; clazz = classes[j++];)
                                    for (; -1 < cur.indexOf(" " + clazz + " ");)
                                        cur = cur.replace(" " + clazz + " ", " ");
                                curValue !== (finalValue = stripAndCollapse(cur)) && elem.setAttribute("class", finalValue)
                            }
                    return this
                },
                toggleClass: function(value, stateVal) {
                    var type = typeof value,
                        isValidValue = "string" == type || Array.isArray(value);
                    return "boolean" == typeof stateVal && isValidValue ? stateVal ? this.addClass(value) : this.removeClass(value) : isFunction(value) ? this.each(function(i) {
                        jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal)
                    }) : this.each(function() {
                        var className,
                            i,
                            self,
                            classNames;
                        if (isValidValue)
                            for (i = 0, self = jQuery(this), classNames = classesToArray(value); className = classNames[i++];)
                                self.hasClass(className) ? self.removeClass(className) : self.addClass(className);
                        else
                            void 0 !== value && "boolean" != type || ((className = getClass(this)) && dataPriv.set(this, "__className__", className), this.setAttribute && this.setAttribute("class", className || !1 === value ? "" : dataPriv.get(this, "__className__") || ""))
                    })
                },
                hasClass: function(selector) {
                    var className,
                        elem,
                        i = 0;
                    for (className = " " + selector + " "; elem = this[i++];)
                        if (1 === elem.nodeType && -1 < (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className))
                            return !0;
                    return !1
                }
            });
            var rreturn = /\r/g;
            jQuery.fn.extend({
                val: function(value) {
                    var hooks,
                        ret,
                        valueIsFunction,
                        elem = this[0];
                    return arguments.length ? (valueIsFunction = isFunction(value), this.each(function(i) {
                        var val;
                        1 === this.nodeType && (null == (val = valueIsFunction ? value.call(this, i, jQuery(this).val()) : value) ? val = "" : "number" == typeof val ? val += "" : Array.isArray(val) && (val = jQuery.map(val, function(value) {
                            return null == value ? "" : value + ""
                        })), (hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]) && "set" in hooks && void 0 !== hooks.set(this, val, "value") || (this.value = val))
                    })) : elem ? (hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]) && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value")) ? ret : "string" == typeof (ret = elem.value) ? ret.replace(rreturn, "") : null == ret ? "" : ret : void 0
                }
            }), jQuery.extend({
                valHooks: {
                    option: {
                        get: function(elem) {
                            var val = jQuery.find.attr(elem, "value");
                            return null != val ? val : stripAndCollapse(jQuery.text(elem))
                        }
                    },
                    select: {
                        get: function(elem) {
                            var value,
                                option,
                                i,
                                options = elem.options,
                                index = elem.selectedIndex,
                                one = "select-one" === elem.type,
                                values = one ? null : [],
                                max = one ? index + 1 : options.length;
                            for (i = index < 0 ? max : one ? index : 0; i < max; i++)
                                if (((option = options[i]).selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                                    if (value = jQuery(option).val(), one)
                                        return value;
                                    values.push(value)
                                }
                            return values
                        },
                        set: function(elem, value) {
                            for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--;)
                                ((option = options[i]).selected = -1 < jQuery.inArray(jQuery.valHooks.option.get(option), values)) && (optionSet = !0);
                            return optionSet || (elem.selectedIndex = -1), values
                        }
                    }
                }
            }), jQuery.each(["radio", "checkbox"], function() {
                jQuery.valHooks[this] = {
                    set: function(elem, value) {
                        if (Array.isArray(value))
                            return elem.checked = -1 < jQuery.inArray(jQuery(elem).val(), value)
                    }
                }, support.checkOn || (jQuery.valHooks[this].get = function(elem) {
                    return null === elem.getAttribute("value") ? "on" : elem.value
                })
            }), support.focusin = "onfocusin" in window;
            function stopPropagationCallback(e) {
                e.stopPropagation()
            }
            var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;
            jQuery.extend(jQuery.event, {
                trigger: function(event, data, elem, onlyHandlers) {
                    var i,
                        cur,
                        tmp,
                        bubbleType,
                        ontype,
                        handle,
                        special,
                        lastElement,
                        eventPath = [elem || document],
                        type = hasOwn.call(event, "type") ? event.type : event,
                        namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
                    if (cur = lastElement = tmp = elem = elem || document, 3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (-1 < type.indexOf(".") && (type = (namespaces = type.split(".")).shift(), namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, (event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event)).isTrigger = onlyHandlers ? 2 : 3, event.namespace = namespaces.join("."), event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, event.result = void 0, event.target || (event.target = elem), data = null == data ? [event] : jQuery.makeArray(data, [event]), special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || !1 !== special.trigger.apply(elem, data))) {
                        if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                            for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode)
                                eventPath.push(cur), tmp = cur;
                            tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window)
                        }
                        for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped();)
                            lastElement = cur, event.type = 1 < i ? bubbleType : special.bindType || type, (handle = (dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle")) && handle.apply(cur, data), (handle = ontype && cur[ontype]) && handle.apply && acceptData(cur) && (event.result = handle.apply(cur, data), !1 === event.result && event.preventDefault());
                        return event.type = type, onlyHandlers || event.isDefaultPrevented() || special._default && !1 !== special._default.apply(eventPath.pop(), data) || !acceptData(elem) || ontype && isFunction(elem[type]) && !isWindow(elem) && ((tmp = elem[ontype]) && (elem[ontype] = null), jQuery.event.triggered = type, event.isPropagationStopped() && lastElement.addEventListener(type, stopPropagationCallback), elem[type](), event.isPropagationStopped() && lastElement.removeEventListener(type, stopPropagationCallback), jQuery.event.triggered = void 0, tmp && (elem[ontype] = tmp)), event.result
                    }
                },
                simulate: function(type, elem, event) {
                    var e = jQuery.extend(new jQuery.Event, event, {
                        type: type,
                        isSimulated: !0
                    });
                    jQuery.event.trigger(e, null, elem)
                }
            }), jQuery.fn.extend({
                trigger: function(type, data) {
                    return this.each(function() {
                        jQuery.event.trigger(type, data, this)
                    })
                },
                triggerHandler: function(type, data) {
                    var elem = this[0];
                    if (elem)
                        return jQuery.event.trigger(type, data, elem, !0)
                }
            }), support.focusin || jQuery.each({
                focus: "focusin",
                blur: "focusout"
            }, function(orig, fix) {
                function handler(event) {
                    jQuery.event.simulate(fix, event.target, jQuery.event.fix(event))
                }
                jQuery.event.special[fix] = {
                    setup: function() {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access(doc, fix);
                        attaches || doc.addEventListener(orig, handler, !0), dataPriv.access(doc, fix, (attaches || 0) + 1)
                    },
                    teardown: function() {
                        var doc = this.ownerDocument || this,
                            attaches = dataPriv.access(doc, fix) - 1;
                        attaches ? dataPriv.access(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), dataPriv.remove(doc, fix))
                    }
                }
            });
            var location = window.location,
                nonce = Date.now(),
                rquery = /\?/;
            jQuery.parseXML = function(data) {
                var xml;
                if (!data || "string" != typeof data)
                    return null;
                try {
                    xml = (new window.DOMParser).parseFromString(data, "text/xml")
                } catch (e) {
                    xml = void 0
                }
                return xml && !xml.getElementsByTagName("parsererror").length || jQuery.error("Invalid XML: " + data), xml
            };
            var rbracket = /\[\]$/,
                rCRLF = /\r?\n/g,
                rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
                rsubmittable = /^(?:input|select|textarea|keygen)/i;
            function buildParams(prefix, obj, traditional, add) {
                var name;
                if (Array.isArray(obj))
                    jQuery.each(obj, function(i, v) {
                        traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v && null != v ? i : "") + "]", v, traditional, add)
                    });
                else if (traditional || "object" !== toType(obj))
                    add(prefix, obj);
                else
                    for (name in obj)
                        buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
            }
            jQuery.param = function(a, traditional) {
                function add(key, valueOrFunction) {
                    var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
                    s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(null == value ? "" : value)
                }
                var prefix,
                    s = [];
                if (null == a)
                    return "";
                if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a))
                    jQuery.each(a, function() {
                        add(this.name, this.value)
                    });
                else
                    for (prefix in a)
                        buildParams(prefix, a[prefix], traditional, add);
                return s.join("&")
            }, jQuery.fn.extend({
                serialize: function() {
                    return jQuery.param(this.serializeArray())
                },
                serializeArray: function() {
                    return this.map(function() {
                        var elements = jQuery.prop(this, "elements");
                        return elements ? jQuery.makeArray(elements) : this
                    }).filter(function() {
                        var type = this.type;
                        return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type))
                    }).map(function(i, elem) {
                        var val = jQuery(this).val();
                        return null == val ? null : Array.isArray(val) ? jQuery.map(val, function(val) {
                            return {
                                name: elem.name,
                                value: val.replace(rCRLF, "\r\n")
                            }
                        }) : {
                            name: elem.name,
                            value: val.replace(rCRLF, "\r\n")
                        }
                    }).get()
                }
            });
            var r20 = /%20/g,
                rhash = /#.*$/,
                rantiCache = /([?&])_=[^&]*/,
                rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm,
                rnoContent = /^(?:GET|HEAD)$/,
                rprotocol = /^\/\//,
                prefilters = {},
                transports = {},
                allTypes = "*/".concat("*"),
                originAnchor = document.createElement("a");
            function addToPrefiltersOrTransports(structure) {
                return function(dataTypeExpression, func) {
                    "string" != typeof dataTypeExpression && (func = dataTypeExpression, dataTypeExpression = "*");
                    var dataType,
                        i = 0,
                        dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
                    if (isFunction(func))
                        for (; dataType = dataTypes[i++];)
                            "+" === dataType[0] ? (dataType = dataType.slice(1) || "*", (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func)
                }
            }
            function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
                var inspected = {},
                    seekingTransport = structure === transports;
                function inspect(dataType) {
                    var selected;
                    return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                        return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport] ? seekingTransport ? !(selected = dataTypeOrTransport) : void 0 : (options.dataTypes.unshift(dataTypeOrTransport), inspect(dataTypeOrTransport), !1)
                    }), selected
                }
                return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*")
            }
            function ajaxExtend(target, src) {
                var key,
                    deep,
                    flatOptions = jQuery.ajaxSettings.flatOptions || {};
                for (key in src)
                    void 0 !== src[key] && ((flatOptions[key] ? target : deep = deep || {})[key] = src[key]);
                return deep && jQuery.extend(!0, target, deep), target
            }
            originAnchor.href = location.href, jQuery.extend({
                active: 0,
                lastModified: {},
                etag: {},
                ajaxSettings: {
                    url: location.href,
                    type: "GET",
                    isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(location.protocol),
                    global: !0,
                    processData: !0,
                    async: !0,
                    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                    accepts: {
                        "*": allTypes,
                        text: "text/plain",
                        html: "text/html",
                        xml: "application/xml, text/xml",
                        json: "application/json, text/javascript"
                    },
                    contents: {
                        xml: /\bxml\b/,
                        html: /\bhtml/,
                        json: /\bjson\b/
                    },
                    responseFields: {
                        xml: "responseXML",
                        text: "responseText",
                        json: "responseJSON"
                    },
                    converters: {
                        "* text": String,
                        "text html": !0,
                        "text json": JSON.parse,
                        "text xml": jQuery.parseXML
                    },
                    flatOptions: {
                        url: !0,
                        context: !0
                    }
                },
                ajaxSetup: function(target, settings) {
                    return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target)
                },
                ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
                ajaxTransport: addToPrefiltersOrTransports(transports),
                ajax: function(url, options) {
                    "object" == typeof url && (options = url, url = void 0), options = options || {};
                    var transport,
                        cacheURL,
                        responseHeadersString,
                        responseHeaders,
                        timeoutTimer,
                        urlAnchor,
                        completed,
                        fireGlobals,
                        i,
                        uncached,
                        s = jQuery.ajaxSetup({}, options),
                        callbackContext = s.context || s,
                        globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
                        deferred = jQuery.Deferred(),
                        completeDeferred = jQuery.Callbacks("once memory"),
                        statusCode = s.statusCode || {},
                        requestHeaders = {},
                        requestHeadersNames = {},
                        strAbort = "canceled",
                        jqXHR = {
                            readyState: 0,
                            getResponseHeader: function(key) {
                                var match;
                                if (completed) {
                                    if (!responseHeaders)
                                        for (responseHeaders = {}; match = rheaders.exec(responseHeadersString);)
                                            responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                                    match = responseHeaders[key.toLowerCase() + " "]
                                }
                                return null == match ? null : match.join(", ")
                            },
                            getAllResponseHeaders: function() {
                                return completed ? responseHeadersString : null
                            },
                            setRequestHeader: function(name, value) {
                                return null == completed && (name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name, requestHeaders[name] = value), this
                            },
                            overrideMimeType: function(type) {
                                return null == completed && (s.mimeType = type), this
                            },
                            statusCode: function(map) {
                                var code;
                                if (map)
                                    if (completed)
                                        jqXHR.always(map[jqXHR.status]);
                                    else
                                        for (code in map)
                                            statusCode[code] = [statusCode[code], map[code]];
                                return this
                            },
                            abort: function(statusText) {
                                var finalText = statusText || strAbort;
                                return transport && transport.abort(finalText), done(0, finalText), this
                            }
                        };
                    if (deferred.promise(jqXHR), s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"), s.type = options.method || options.type || s.method || s.type, s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""], null == s.crossDomain) {
                        urlAnchor = document.createElement("a");
                        try {
                            urlAnchor.href = s.url, urlAnchor.href = urlAnchor.href, s.crossDomain = originAnchor.protocol + "//" + originAnchor.host != urlAnchor.protocol + "//" + urlAnchor.host
                        } catch (e) {
                            s.crossDomain = !0
                        }
                    }
                    if (s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), completed)
                        return jqXHR;
                    for (i in (fireGlobals = jQuery.event && s.global) && 0 == jQuery.active++ && jQuery.event.trigger("ajaxStart"), s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), cacheURL = s.url.replace(rhash, ""), s.hasContent ? s.data && s.processData && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && (s.data = s.data.replace(r20, "+")) : (uncached = s.url.slice(cacheURL.length), s.data && (s.processData || "string" == typeof s.data) && (cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data, delete s.data), !1 === s.cache && (cacheURL = cacheURL.replace(rantiCache, "$1"), uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++ + uncached), s.url = cacheURL + uncached), s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), (s.data && s.hasContent && !1 !== s.contentType || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]), s.headers)
                        jqXHR.setRequestHeader(i, s.headers[i]);
                    if (s.beforeSend && (!1 === s.beforeSend.call(callbackContext, jqXHR, s) || completed))
                        return jqXHR.abort();
                    if (strAbort = "abort", completeDeferred.add(s.complete), jqXHR.done(s.success), jqXHR.fail(s.error), transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
                        if (jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [jqXHR, s]), completed)
                            return jqXHR;
                        s.async && 0 < s.timeout && (timeoutTimer = window.setTimeout(function() {
                            jqXHR.abort("timeout")
                        }, s.timeout));
                        try {
                            completed = !1, transport.send(requestHeaders, done)
                        } catch (e) {
                            if (completed)
                                throw e;
                            done(-1, e)
                        }
                    } else
                        done(-1, "No Transport");
                    function done(status, nativeStatusText, responses, headers) {
                        var isSuccess,
                            success,
                            error,
                            response,
                            modified,
                            statusText = nativeStatusText;
                        completed || (completed = !0, timeoutTimer && window.clearTimeout(timeoutTimer), transport = void 0, responseHeadersString = headers || "", jqXHR.readyState = 0 < status ? 4 : 0, isSuccess = 200 <= status && status < 300 || 304 === status, responses && (response = function(s, jqXHR, responses) {
                            for (var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes; "*" === dataTypes[0];)
                                dataTypes.shift(), void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
                            if (ct)
                                for (type in contents)
                                    if (contents[type] && contents[type].test(ct)) {
                                        dataTypes.unshift(type);
                                        break
                                    }
                            if (dataTypes[0] in responses)
                                finalDataType = dataTypes[0];
                            else {
                                for (type in responses) {
                                    if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                                        finalDataType = type;
                                        break
                                    }
                                    firstDataType = firstDataType || type
                                }
                                finalDataType = finalDataType || firstDataType
                            }
                            if (finalDataType)
                                return finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), responses[finalDataType]
                        }(s, jqXHR, responses)), response = function(s, response, jqXHR, isSuccess) {
                            var conv2,
                                current,
                                conv,
                                tmp,
                                prev,
                                converters = {},
                                dataTypes = s.dataTypes.slice();
                            if (dataTypes[1])
                                for (conv in s.converters)
                                    converters[conv.toLowerCase()] = s.converters[conv];
                            for (current = dataTypes.shift(); current;)
                                if (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response), !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)), prev = current, current = dataTypes.shift())
                                    if ("*" === current)
                                        current = prev;
                                    else if ("*" !== prev && prev !== current) {
                                        if (!(conv = converters[prev + " " + current] || converters["* " + current]))
                                            for (conv2 in converters)
                                                if ((tmp = conv2.split(" "))[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                                                    !0 === conv ? conv = converters[conv2] : !0 !== converters[conv2] && (current = tmp[0], dataTypes.unshift(tmp[1]));
                                                    break
                                                }
                                        if (!0 !== conv)
                                            if (conv && s.throws)
                                                response = conv(response);
                                            else
                                                try {
                                                    response = conv(response)
                                                } catch (e) {
                                                    return {
                                                        state: "parsererror",
                                                        error: conv ? e : "No conversion from " + prev + " to " + current
                                                    }
                                                }
                                    }
                            return {
                                state: "success",
                                data: response
                            }
                        }(s, response, jqXHR, isSuccess), isSuccess ? (s.ifModified && ((modified = jqXHR.getResponseHeader("Last-Modified")) && (jQuery.lastModified[cacheURL] = modified), (modified = jqXHR.getResponseHeader("etag")) && (jQuery.etag[cacheURL] = modified)), 204 === status || "HEAD" === s.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, success = response.data, isSuccess = !(error = response.error))) : (error = statusText, !status && statusText || (statusText = "error", status < 0 && (status = 0))), jqXHR.status = status, jqXHR.statusText = (nativeStatusText || statusText) + "", isSuccess ? deferred.resolveWith(callbackContext, [success, statusText, jqXHR]) : deferred.rejectWith(callbackContext, [jqXHR, statusText, error]), jqXHR.statusCode(statusCode), statusCode = void 0, fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]), completeDeferred.fireWith(callbackContext, [jqXHR, statusText]), fireGlobals && (globalEventContext.trigger("ajaxComplete", [jqXHR, s]), --jQuery.active || jQuery.event.trigger("ajaxStop")))
                    }
                    return jqXHR
                },
                getJSON: function(url, data, callback) {
                    return jQuery.get(url, data, callback, "json")
                },
                getScript: function(url, callback) {
                    return jQuery.get(url, void 0, callback, "script")
                }
            }), jQuery.each(["get", "post"], function(i, method) {
                jQuery[method] = function(url, data, callback, type) {
                    return isFunction(data) && (type = type || callback, callback = data, data = void 0), jQuery.ajax(jQuery.extend({
                        url: url,
                        type: method,
                        dataType: type,
                        data: data,
                        success: callback
                    }, jQuery.isPlainObject(url) && url))
                }
            }), jQuery._evalUrl = function(url, options) {
                return jQuery.ajax({
                    url: url,
                    type: "GET",
                    dataType: "script",
                    cache: !0,
                    async: !1,
                    global: !1,
                    converters: {
                        "text script": function() {}
                    },
                    dataFilter: function(response) {
                        jQuery.globalEval(response, options)
                    }
                })
            }, jQuery.fn.extend({
                wrapAll: function(html) {
                    var wrap;
                    return this[0] && (isFunction(html) && (html = html.call(this[0])), wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function() {
                        for (var elem = this; elem.firstElementChild;)
                            elem = elem.firstElementChild;
                        return elem
                    }).append(this)), this
                },
                wrapInner: function(html) {
                    return isFunction(html) ? this.each(function(i) {
                        jQuery(this).wrapInner(html.call(this, i))
                    }) : this.each(function() {
                        var self = jQuery(this),
                            contents = self.contents();
                        contents.length ? contents.wrapAll(html) : self.append(html)
                    })
                },
                wrap: function(html) {
                    var htmlIsFunction = isFunction(html);
                    return this.each(function(i) {
                        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html)
                    })
                },
                unwrap: function(selector) {
                    return this.parent(selector).not("body").each(function() {
                        jQuery(this).replaceWith(this.childNodes)
                    }), this
                }
            }), jQuery.expr.pseudos.hidden = function(elem) {
                return !jQuery.expr.pseudos.visible(elem)
            }, jQuery.expr.pseudos.visible = function(elem) {
                return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length)
            }, jQuery.ajaxSettings.xhr = function() {
                try {
                    return new window.XMLHttpRequest
                } catch (e) {}
            };
            var xhrSuccessStatus = {
                    0: 200,
                    1223: 204
                },
                xhrSupported = jQuery.ajaxSettings.xhr();
            support.cors = !!xhrSupported && "withCredentials" in xhrSupported, support.ajax = xhrSupported = !!xhrSupported, jQuery.ajaxTransport(function(options) {
                var callback,
                    errorCallback;
                if (support.cors || xhrSupported && !options.crossDomain)
                    return {
                        send: function(headers, complete) {
                            var i,
                                xhr = options.xhr();
                            if (xhr.open(options.type, options.url, options.async, options.username, options.password), options.xhrFields)
                                for (i in options.xhrFields)
                                    xhr[i] = options.xhrFields[i];
                            for (i in options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest"), headers)
                                xhr.setRequestHeader(i, headers[i]);
                            callback = function(type) {
                                return function() {
                                    callback && (callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null, "abort" === type ? xhr.abort() : "error" === type ? "number" != typeof xhr.status ? complete(0, "error") : complete(xhr.status, xhr.statusText) : complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, "text" !== (xhr.responseType || "text") || "string" != typeof xhr.responseText ? {
                                        binary: xhr.response
                                    } : {
                                        text: xhr.responseText
                                    }, xhr.getAllResponseHeaders()))
                                }
                            }, xhr.onload = callback(), errorCallback = xhr.onerror = xhr.ontimeout = callback("error"), void 0 !== xhr.onabort ? xhr.onabort = errorCallback : xhr.onreadystatechange = function() {
                                4 === xhr.readyState && window.setTimeout(function() {
                                    callback && errorCallback()
                                })
                            }, callback = callback("abort");
                            try {
                                xhr.send(options.hasContent && options.data || null)
                            } catch (e) {
                                if (callback)
                                    throw e
                            }
                        },
                        abort: function() {
                            callback && callback()
                        }
                    }
            }), jQuery.ajaxPrefilter(function(s) {
                s.crossDomain && (s.contents.script = !1)
            }), jQuery.ajaxSetup({
                accepts: {
                    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
                },
                contents: {
                    script: /\b(?:java|ecma)script\b/
                },
                converters: {
                    "text script": function(text) {
                        return jQuery.globalEval(text), text
                    }
                }
            }), jQuery.ajaxPrefilter("script", function(s) {
                void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET")
            }), jQuery.ajaxTransport("script", function(s) {
                var script,
                    callback;
                if (s.crossDomain || s.scriptAttrs)
                    return {
                        send: function(_, complete) {
                            script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({
                                charset: s.scriptCharset,
                                src: s.url
                            }).on("load error", callback = function(evt) {
                                script.remove(), callback = null, evt && complete("error" === evt.type ? 404 : 200, evt.type)
                            }), document.head.appendChild(script[0])
                        },
                        abort: function() {
                            callback && callback()
                        }
                    }
            });
            var body,
                oldCallbacks = [],
                rjsonp = /(=)\?(?=&|$)|\?\?/;
            jQuery.ajaxSetup({
                jsonp: "callback",
                jsonpCallback: function() {
                    var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
                    return this[callback] = !0, callback
                }
            }), jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
                var callbackName,
                    overwritten,
                    responseContainer,
                    jsonProp = !1 !== s.jsonp && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
                if (jsonProp || "jsonp" === s.dataTypes[0])
                    return callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : !1 !== s.jsonp && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), s.converters["script json"] = function() {
                        return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0]
                    }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function() {
                        responseContainer = arguments
                    }, jqXHR.always(function() {
                        void 0 === overwritten ? jQuery(window).removeProp(callbackName) : window[callbackName] = overwritten, s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, oldCallbacks.push(callbackName)), responseContainer && isFunction(overwritten) && overwritten(responseContainer[0]), responseContainer = overwritten = void 0
                    }), "script"
            }), support.createHTMLDocument = ((body = document.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 2 === body.childNodes.length), jQuery.parseHTML = function(data, context, keepScripts) {
                return "string" != typeof data ? [] : ("boolean" == typeof context && (keepScripts = context, context = !1), context || (support.createHTMLDocument ? ((base = (context = document.implementation.createHTMLDocument("")).createElement("base")).href = document.location.href, context.head.appendChild(base)) : context = document), scripts = !keepScripts && [], (parsed = rsingleTag.exec(data)) ? [context.createElement(parsed[1])] : (parsed = buildFragment([data], context, scripts), scripts && scripts.length && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes)));
                var base,
                    parsed,
                    scripts
            }, jQuery.fn.load = function(url, params, callback) {
                var selector,
                    type,
                    response,
                    self = this,
                    off = url.indexOf(" ");
                return -1 < off && (selector = stripAndCollapse(url.slice(off)), url = url.slice(0, off)), isFunction(params) ? (callback = params, params = void 0) : params && "object" == typeof params && (type = "POST"), 0 < self.length && jQuery.ajax({
                    url: url,
                    type: type || "GET",
                    dataType: "html",
                    data: params
                }).done(function(responseText) {
                    response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText)
                }).always(callback && function(jqXHR, status) {
                    self.each(function() {
                        callback.apply(this, response || [jqXHR.responseText, status, jqXHR])
                    })
                }), this
            }, jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(i, type) {
                jQuery.fn[type] = function(fn) {
                    return this.on(type, fn)
                }
            }), jQuery.expr.pseudos.animated = function(elem) {
                return jQuery.grep(jQuery.timers, function(fn) {
                    return elem === fn.elem
                }).length
            }, jQuery.offset = {
                setOffset: function(elem, options, i) {
                    var curPosition,
                        curLeft,
                        curCSSTop,
                        curTop,
                        curOffset,
                        curCSSLeft,
                        position = jQuery.css(elem, "position"),
                        curElem = jQuery(elem),
                        props = {};
                    "static" === position && (elem.style.position = "relative"), curOffset = curElem.offset(), curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), curLeft = ("absolute" === position || "fixed" === position) && -1 < (curCSSTop + curCSSLeft).indexOf("auto") ? (curTop = (curPosition = curElem.position()).top, curPosition.left) : (curTop = parseFloat(curCSSTop) || 0, parseFloat(curCSSLeft) || 0), isFunction(options) && (options = options.call(elem, i, jQuery.extend({}, curOffset))), null != options.top && (props.top = options.top - curOffset.top + curTop), null != options.left && (props.left = options.left - curOffset.left + curLeft), "using" in options ? options.using.call(elem, props) : curElem.css(props)
                }
            }, jQuery.fn.extend({
                offset: function(options) {
                    if (arguments.length)
                        return void 0 === options ? this : this.each(function(i) {
                            jQuery.offset.setOffset(this, options, i)
                        });
                    var rect,
                        win,
                        elem = this[0];
                    return elem ? elem.getClientRects().length ? (rect = elem.getBoundingClientRect(), win = elem.ownerDocument.defaultView, {
                        top: rect.top + win.pageYOffset,
                        left: rect.left + win.pageXOffset
                    }) : {
                        top: 0,
                        left: 0
                    } : void 0
                },
                position: function() {
                    if (this[0]) {
                        var offsetParent,
                            offset,
                            doc,
                            elem = this[0],
                            parentOffset = {
                                top: 0,
                                left: 0
                            };
                        if ("fixed" === jQuery.css(elem, "position"))
                            offset = elem.getBoundingClientRect();
                        else {
                            for (offset = this.offset(), doc = elem.ownerDocument, offsetParent = elem.offsetParent || doc.documentElement; offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && "static" === jQuery.css(offsetParent, "position");)
                                offsetParent = offsetParent.parentNode;
                            offsetParent && offsetParent !== elem && 1 === offsetParent.nodeType && ((parentOffset = jQuery(offsetParent).offset()).top += jQuery.css(offsetParent, "borderTopWidth", !0), parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", !0))
                        }
                        return {
                            top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
                            left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
                        }
                    }
                },
                offsetParent: function() {
                    return this.map(function() {
                        for (var offsetParent = this.offsetParent; offsetParent && "static" === jQuery.css(offsetParent, "position");)
                            offsetParent = offsetParent.offsetParent;
                        return offsetParent || documentElement
                    })
                }
            }), jQuery.each({
                scrollLeft: "pageXOffset",
                scrollTop: "pageYOffset"
            }, function(method, prop) {
                var top = "pageYOffset" === prop;
                jQuery.fn[method] = function(val) {
                    return access(this, function(elem, method, val) {
                        var win;
                        if (isWindow(elem) ? win = elem : 9 === elem.nodeType && (win = elem.defaultView), void 0 === val)
                            return win ? win[prop] : elem[method];
                        win ? win.scrollTo(top ? win.pageXOffset : val, top ? val : win.pageYOffset) : elem[method] = val
                    }, method, val, arguments.length)
                }
            }), jQuery.each(["top", "left"], function(i, prop) {
                jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
                    if (computed)
                        return computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed
                })
            }), jQuery.each({
                Height: "height",
                Width: "width"
            }, function(name, type) {
                jQuery.each({
                    padding: "inner" + name,
                    content: type,
                    "": "outer" + name
                }, function(defaultExtra, funcName) {
                    jQuery.fn[funcName] = function(margin, value) {
                        var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin),
                            extra = defaultExtra || (!0 === margin || !0 === value ? "margin" : "border");
                        return access(this, function(elem, type, value) {
                            var doc;
                            return isWindow(elem) ? 0 === funcName.indexOf("outer") ? elem["inner" + name] : elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : void 0 === value ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra)
                        }, type, chainable ? margin : void 0, chainable)
                    }
                })
            }), jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(i, name) {
                jQuery.fn[name] = function(data, fn) {
                    return 0 < arguments.length ? this.on(name, null, data, fn) : this.trigger(name)
                }
            }), jQuery.fn.extend({
                hover: function(fnOver, fnOut) {
                    return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
                }
            }), jQuery.fn.extend({
                bind: function(types, data, fn) {
                    return this.on(types, null, data, fn)
                },
                unbind: function(types, fn) {
                    return this.off(types, null, fn)
                },
                delegate: function(selector, types, data, fn) {
                    return this.on(types, selector, data, fn)
                },
                undelegate: function(selector, types, fn) {
                    return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn)
                }
            }), jQuery.proxy = function(fn, context) {
                var tmp,
                    args,
                    proxy;
                if ("string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), isFunction(fn))
                    return args = slice.call(arguments, 2), (proxy = function() {
                        return fn.apply(context || this, args.concat(slice.call(arguments)))
                    }).guid = fn.guid = fn.guid || jQuery.guid++, proxy
            }, jQuery.holdReady = function(hold) {
                hold ? jQuery.readyWait++ : jQuery.ready(!0)
            }, jQuery.isArray = Array.isArray, jQuery.parseJSON = JSON.parse, jQuery.nodeName = nodeName, jQuery.isFunction = isFunction, jQuery.isWindow = isWindow, jQuery.camelCase = camelCase, jQuery.type = toType, jQuery.now = Date.now, jQuery.isNumeric = function(obj) {
                var type = jQuery.type(obj);
                return ("number" === type || "string" === type) && !isNaN(obj - parseFloat(obj))
            }, "function" == typeof define && define.amd && define("jquery", [], function() {
                return jQuery
            });
            var _jQuery = window.jQuery,
                _$ = window.$;
            return jQuery.noConflict = function(deep) {
                return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), jQuery
            }, noGlobal || (window.jQuery = window.$ = jQuery), jQuery
        })
    }, {}],
    31: [function(require, module, exports) {
        !function(window) {
            var lazySizes = function(window, document) {
                "use strict";
                var lazysizes,
                    lazySizesCfg;
                if (function() {
                    var prop,
                        lazySizesDefaults = {
                            lazyClass: "lazyload",
                            loadedClass: "lazyloaded",
                            loadingClass: "lazyloading",
                            preloadClass: "lazypreload",
                            errorClass: "lazyerror",
                            autosizesClass: "lazyautosizes",
                            srcAttr: "data-src",
                            srcsetAttr: "data-srcset",
                            sizesAttr: "data-sizes",
                            minSize: 40,
                            customMedia: {},
                            init: !0,
                            expFactor: 1.5,
                            hFac: .8,
                            loadMode: 2,
                            loadHidden: !0,
                            ricTimeout: 0,
                            throttleDelay: 125
                        };
                    for (prop in lazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {}, lazySizesDefaults)
                        prop in lazySizesCfg || (lazySizesCfg[prop] = lazySizesDefaults[prop])
                }(), !document || !document.getElementsByClassName) {
                    return {
                        init: function() {},
                        cfg: lazySizesCfg,
                        noSupport: true
                    }
                }
                var docElem = document.documentElement,
                    Date = window.Date,
                    supportPicture = window.HTMLPictureElement,
                    _addEventListener = "addEventListener",
                    _getAttribute = "getAttribute",
                    addEventListener = window[_addEventListener],
                    setTimeout = window.setTimeout,
                    requestAnimationFrame = window.requestAnimationFrame || setTimeout,
                    requestIdleCallback = window.requestIdleCallback,
                    regPicture = /^picture$/i,
                    loadEvents = ["load", "error", "lazyincluded", "_lazyloaded"],
                    regClassCache = {},
                    forEach = Array.prototype.forEach,
                    hasClass = function(ele, cls) {
                        if (!regClassCache[cls]) {
                            regClassCache[cls] = new RegExp("(\\s|^)" + cls + "(\\s|$)")
                        }
                        return regClassCache[cls].test(ele[_getAttribute]("class") || "") && regClassCache[cls]
                    },
                    addClass = function(ele, cls) {
                        if (!hasClass(ele, cls)) {
                            ele.setAttribute("class", (ele[_getAttribute]("class") || "").trim() + " " + cls)
                        }
                    },
                    removeClass = function(ele, cls) {
                        var reg;
                        if (reg = hasClass(ele, cls)) {
                            ele.setAttribute("class", (ele[_getAttribute]("class") || "").replace(reg, " "))
                        }
                    },
                    addRemoveLoadEvents = function(dom, fn, add) {
                        var action = add ? _addEventListener : "removeEventListener";
                        if (add) {
                            addRemoveLoadEvents(dom, fn)
                        }
                        loadEvents.forEach(function(evt) {
                            dom[action](evt, fn)
                        })
                    },
                    triggerEvent = function(elem, name, detail, noBubbles, noCancelable) {
                        var event = document.createEvent("Event");
                        if (!detail) {
                            detail = {}
                        }
                        detail.instance = lazysizes;
                        event.initEvent(name, !noBubbles, !noCancelable);
                        event.detail = detail;
                        elem.dispatchEvent(event);
                        return event
                    },
                    updatePolyfill = function(el, full) {
                        var polyfill;
                        if (!supportPicture && (polyfill = window.picturefill || lazySizesCfg.pf)) {
                            if (full && full.src && !el[_getAttribute]("srcset")) {
                                el.setAttribute("srcset", full.src)
                            }
                            polyfill({
                                reevaluate: true,
                                elements: [el]
                            })
                        } else if (full && full.src) {
                            el.src = full.src
                        }
                    },
                    getCSS = function(elem, style) {
                        return (getComputedStyle(elem, null) || {})[style]
                    },
                    getWidth = function(elem, parent, width) {
                        width = width || elem.offsetWidth;
                        while (width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth) {
                            width = parent.offsetWidth;
                            parent = parent.parentNode
                        }
                        return width
                    },
                    rAF = function() {
                        var running,
                            waiting;
                        var firstFns = [];
                        var secondFns = [];
                        var fns = firstFns;
                        var run = function() {
                            var runFns = fns;
                            fns = firstFns.length ? secondFns : firstFns;
                            running = true;
                            waiting = false;
                            while (runFns.length) {
                                runFns.shift()()
                            }
                            running = false
                        };
                        var rafBatch = function(fn, queue) {
                            if (running && !queue) {
                                fn.apply(this, arguments)
                            } else {
                                fns.push(fn);
                                if (!waiting) {
                                    waiting = true;
                                    (document.hidden ? setTimeout : requestAnimationFrame)(run)
                                }
                            }
                        };
                        rafBatch._lsFlush = run;
                        return rafBatch
                    }(),
                    rAFIt = function(fn, simple) {
                        return simple ? function() {
                            rAF(fn)
                        } : function() {
                            var that = this;
                            var args = arguments;
                            rAF(function() {
                                fn.apply(that, args)
                            })
                        }
                    },
                    throttle = function(fn) {
                        var running;
                        var lastTime = 0;
                        var gDelay = lazySizesCfg.throttleDelay;
                        var rICTimeout = lazySizesCfg.ricTimeout;
                        var run = function() {
                            running = false;
                            lastTime = Date.now();
                            fn()
                        };
                        var idleCallback = requestIdleCallback && rICTimeout > 49 ? function() {
                            requestIdleCallback(run, {
                                timeout: rICTimeout
                            });
                            if (rICTimeout !== lazySizesCfg.ricTimeout) {
                                rICTimeout = lazySizesCfg.ricTimeout
                            }
                        } : rAFIt(function() {
                            setTimeout(run)
                        }, true);
                        return function(isPriority) {
                            var delay;
                            if (isPriority = isPriority === true) {
                                rICTimeout = 33
                            }
                            if (running) {
                                return
                            }
                            running = true;
                            delay = gDelay - (Date.now() - lastTime);
                            if (delay < 0) {
                                delay = 0
                            }
                            if (isPriority || delay < 9) {
                                idleCallback()
                            } else {
                                setTimeout(idleCallback, delay)
                            }
                        }
                    },
                    debounce = function(func) {
                        var timeout,
                            timestamp;
                        var wait = 99;
                        var run = function() {
                            timeout = null;
                            func()
                        };
                        var later = function() {
                            var last = Date.now() - timestamp;
                            if (last < wait) {
                                setTimeout(later, wait - last)
                            } else {
                                (requestIdleCallback || run)(run)
                            }
                        };
                        return function() {
                            timestamp = Date.now();
                            if (!timeout) {
                                timeout = setTimeout(later, wait)
                            }
                        }
                    },
                    loader = function() {
                        var preloadElems,
                            isCompleted,
                            resetPreloadingTimer,
                            loadMode,
                            started;
                        var eLvW,
                            elvH,
                            eLtop,
                            eLleft,
                            eLright,
                            eLbottom,
                            isBodyHidden;
                        var regImg = /^img$/i;
                        var regIframe = /^iframe$/i;
                        var supportScroll = "onscroll" in window && !/(gle|ing)bot/.test(navigator.userAgent);
                        var shrinkExpand = 0;
                        var currentExpand = 0;
                        var isLoading = 0;
                        var lowRuns = -1;
                        var resetPreloading = function(e) {
                            isLoading--;
                            if (!e || isLoading < 0 || !e.target) {
                                isLoading = 0
                            }
                        };
                        var isVisible = function(elem) {
                            if (isBodyHidden == null) {
                                isBodyHidden = getCSS(document.body, "visibility") == "hidden"
                            }
                            return isBodyHidden || getCSS(elem.parentNode, "visibility") != "hidden" && getCSS(elem, "visibility") != "hidden"
                        };
                        var isNestedVisible = function(elem, elemExpand) {
                            var outerRect;
                            var parent = elem;
                            var visible = isVisible(elem);
                            eLtop -= elemExpand;
                            eLbottom += elemExpand;
                            eLleft -= elemExpand;
                            eLright += elemExpand;
                            while (visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem) {
                                visible = (getCSS(parent, "opacity") || 1) > 0;
                                if (visible && getCSS(parent, "overflow") != "visible") {
                                    outerRect = parent.getBoundingClientRect();
                                    visible = eLright > outerRect.left && eLleft < outerRect.right && eLbottom > outerRect.top - 1 && eLtop < outerRect.bottom + 1
                                }
                            }
                            return visible
                        };
                        var checkElements = function() {
                            var eLlen,
                                i,
                                rect,
                                autoLoadElem,
                                loadedSomething,
                                elemExpand,
                                elemNegativeExpand,
                                elemExpandVal,
                                beforeExpandVal,
                                defaultExpand,
                                preloadExpand,
                                hFac;
                            var lazyloadElems = lazysizes.elements;
                            if ((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)) {
                                i = 0;
                                lowRuns++;
                                for (; i < eLlen; i++) {
                                    if (!lazyloadElems[i] || lazyloadElems[i]._lazyRace) {
                                        continue
                                    }
                                    if (!supportScroll || lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i])) {
                                        unveilElement(lazyloadElems[i]);
                                        continue
                                    }
                                    if (!(elemExpandVal = lazyloadElems[i][_getAttribute]("data-expand")) || !(elemExpand = elemExpandVal * 1)) {
                                        elemExpand = currentExpand
                                    }
                                    if (!defaultExpand) {
                                        defaultExpand = !lazySizesCfg.expand || lazySizesCfg.expand < 1 ? docElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 : lazySizesCfg.expand;
                                        lazysizes._defEx = defaultExpand;
                                        preloadExpand = defaultExpand * lazySizesCfg.expFactor;
                                        hFac = lazySizesCfg.hFac;
                                        isBodyHidden = null;
                                        if (currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden) {
                                            currentExpand = preloadExpand;
                                            lowRuns = 0
                                        } else if (loadMode > 1 && lowRuns > 1 && isLoading < 6) {
                                            currentExpand = defaultExpand
                                        } else {
                                            currentExpand = shrinkExpand
                                        }
                                    }
                                    if (beforeExpandVal !== elemExpand) {
                                        eLvW = innerWidth + elemExpand * hFac;
                                        elvH = innerHeight + elemExpand;
                                        elemNegativeExpand = elemExpand * -1;
                                        beforeExpandVal = elemExpand
                                    }
                                    rect = lazyloadElems[i].getBoundingClientRect();
                                    if ((eLbottom = rect.bottom) >= elemNegativeExpand && (eLtop = rect.top) <= elvH && (eLright = rect.right) >= elemNegativeExpand * hFac && (eLleft = rect.left) <= eLvW && (eLbottom || eLright || eLleft || eLtop) && (lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) && (isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4) || isNestedVisible(lazyloadElems[i], elemExpand))) {
                                        unveilElement(lazyloadElems[i]);
                                        loadedSomething = true;
                                        if (isLoading > 9) {
                                            break
                                        }
                                    } else if (!loadedSomething && isCompleted && !autoLoadElem && isLoading < 4 && lowRuns < 4 && loadMode > 2 && (preloadElems[0] || lazySizesCfg.preloadAfterLoad) && (preloadElems[0] || !elemExpandVal && (eLbottom || eLright || eLleft || eLtop || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != "auto"))) {
                                        autoLoadElem = preloadElems[0] || lazyloadElems[i]
                                    }
                                }
                                if (autoLoadElem && !loadedSomething) {
                                    unveilElement(autoLoadElem)
                                }
                            }
                        };
                        var throttledCheckElements = throttle(checkElements);
                        var switchLoadingClass = function(e) {
                            var elem = e.target;
                            if (elem._lazyCache) {
                                delete elem._lazyCache;
                                return
                            }
                            resetPreloading(e);
                            addClass(elem, lazySizesCfg.loadedClass);
                            removeClass(elem, lazySizesCfg.loadingClass);
                            addRemoveLoadEvents(elem, rafSwitchLoadingClass);
                            triggerEvent(elem, "lazyloaded")
                        };
                        var rafedSwitchLoadingClass = rAFIt(switchLoadingClass);
                        var rafSwitchLoadingClass = function(e) {
                            rafedSwitchLoadingClass({
                                target: e.target
                            })
                        };
                        var changeIframeSrc = function(elem, src) {
                            try {
                                elem.contentWindow.location.replace(src)
                            } catch (e) {
                                elem.src = src
                            }
                        };
                        var handleSources = function(source) {
                            var customMedia;
                            var sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);
                            if (customMedia = lazySizesCfg.customMedia[source[_getAttribute]("data-media") || source[_getAttribute]("media")]) {
                                source.setAttribute("media", customMedia)
                            }
                            if (sourceSrcset) {
                                source.setAttribute("srcset", sourceSrcset)
                            }
                        };
                        var lazyUnveil = rAFIt(function(elem, detail, isAuto, sizes, isImg) {
                            var src,
                                srcset,
                                parent,
                                isPicture,
                                event,
                                firesLoad;
                            if (!(event = triggerEvent(elem, "lazybeforeunveil", detail)).defaultPrevented) {
                                if (sizes) {
                                    if (isAuto) {
                                        addClass(elem, lazySizesCfg.autosizesClass)
                                    } else {
                                        elem.setAttribute("sizes", sizes)
                                    }
                                }
                                srcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);
                                src = elem[_getAttribute](lazySizesCfg.srcAttr);
                                if (isImg) {
                                    parent = elem.parentNode;
                                    isPicture = parent && regPicture.test(parent.nodeName || "")
                                }
                                firesLoad = detail.firesLoad || "src" in elem && (srcset || src || isPicture);
                                event = {
                                    target: elem
                                };
                                addClass(elem, lazySizesCfg.loadingClass);
                                if (firesLoad) {
                                    clearTimeout(resetPreloadingTimer);
                                    resetPreloadingTimer = setTimeout(resetPreloading, 2500);
                                    addRemoveLoadEvents(elem, rafSwitchLoadingClass, true)
                                }
                                if (isPicture) {
                                    forEach.call(parent.getElementsByTagName("source"), handleSources)
                                }
                                if (srcset) {
                                    elem.setAttribute("srcset", srcset)
                                } else if (src && !isPicture) {
                                    if (regIframe.test(elem.nodeName)) {
                                        changeIframeSrc(elem, src)
                                    } else {
                                        elem.src = src
                                    }
                                }
                                if (isImg && (srcset || isPicture)) {
                                    updatePolyfill(elem, {
                                        src: src
                                    })
                                }
                            }
                            if (elem._lazyRace) {
                                delete elem._lazyRace
                            }
                            removeClass(elem, lazySizesCfg.lazyClass);
                            rAF(function() {
                                var isLoaded = elem.complete && elem.naturalWidth > 1;
                                if (!firesLoad || isLoaded) {
                                    if (isLoaded) {
                                        addClass(elem, "ls-is-cached")
                                    }
                                    switchLoadingClass(event);
                                    elem._lazyCache = true;
                                    setTimeout(function() {
                                        if ("_lazyCache" in elem) {
                                            delete elem._lazyCache
                                        }
                                    }, 9)
                                }
                                if (elem.loading == "lazy") {
                                    isLoading--
                                }
                            }, true)
                        });
                        var unveilElement = function(elem) {
                            if (elem._lazyRace) {
                                return
                            }
                            var detail;
                            var isImg = regImg.test(elem.nodeName);
                            var sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]("sizes"));
                            var isAuto = sizes == "auto";
                            if ((isAuto || !isCompleted) && isImg && (elem[_getAttribute]("src") || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)) {
                                return
                            }
                            detail = triggerEvent(elem, "lazyunveilread").detail;
                            if (isAuto) {
                                autoSizer.updateElem(elem, true, elem.offsetWidth)
                            }
                            elem._lazyRace = true;
                            isLoading++;
                            lazyUnveil(elem, detail, isAuto, sizes, isImg)
                        };
                        var afterScroll = debounce(function() {
                            lazySizesCfg.loadMode = 3;
                            throttledCheckElements()
                        });
                        var altLoadmodeScrollListner = function() {
                            if (lazySizesCfg.loadMode == 3) {
                                lazySizesCfg.loadMode = 2
                            }
                            afterScroll()
                        };
                        var onload = function() {
                            if (isCompleted) {
                                return
                            }
                            if (Date.now() - started < 999) {
                                setTimeout(onload, 999);
                                return
                            }
                            isCompleted = true;
                            lazySizesCfg.loadMode = 3;
                            throttledCheckElements();
                            addEventListener("scroll", altLoadmodeScrollListner, true)
                        };
                        return {
                            _: function() {
                                started = Date.now();
                                lazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);
                                preloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + " " + lazySizesCfg.preloadClass);
                                addEventListener("scroll", throttledCheckElements, true);
                                addEventListener("resize", throttledCheckElements, true);
                                if (window.MutationObserver) {
                                    new MutationObserver(throttledCheckElements).observe(docElem, {
                                        childList: true,
                                        subtree: true,
                                        attributes: true
                                    })
                                } else {
                                    docElem[_addEventListener]("DOMNodeInserted", throttledCheckElements, true);
                                    docElem[_addEventListener]("DOMAttrModified", throttledCheckElements, true);
                                    setInterval(throttledCheckElements, 999)
                                }
                                addEventListener("hashchange", throttledCheckElements, true);
                                ["focus", "mouseover", "click", "load", "transitionend", "animationend"].forEach(function(name) {
                                    document[_addEventListener](name, throttledCheckElements, true)
                                });
                                if (/d$|^c/.test(document.readyState)) {
                                    onload()
                                } else {
                                    addEventListener("load", onload);
                                    document[_addEventListener]("DOMContentLoaded", throttledCheckElements);
                                    setTimeout(onload, 2e4)
                                }
                                if (lazysizes.elements.length) {
                                    checkElements();
                                    rAF._lsFlush()
                                } else {
                                    throttledCheckElements()
                                }
                            },
                            checkElems: throttledCheckElements,
                            unveil: unveilElement,
                            _aLSL: altLoadmodeScrollListner
                        }
                    }(),
                    autoSizer = function() {
                        var autosizesElems;
                        var sizeElement = rAFIt(function(elem, parent, event, width) {
                            var sources,
                                i,
                                len;
                            elem._lazysizesWidth = width;
                            width += "px";
                            elem.setAttribute("sizes", width);
                            if (regPicture.test(parent.nodeName || "")) {
                                sources = parent.getElementsByTagName("source");
                                for (i = 0, len = sources.length; i < len; i++) {
                                    sources[i].setAttribute("sizes", width)
                                }
                            }
                            if (!event.detail.dataAttr) {
                                updatePolyfill(elem, event.detail)
                            }
                        });
                        var getSizeElement = function(elem, dataAttr, width) {
                            var event;
                            var parent = elem.parentNode;
                            if (parent) {
                                width = getWidth(elem, parent, width);
                                event = triggerEvent(elem, "lazybeforesizes", {
                                    width: width,
                                    dataAttr: !!dataAttr
                                });
                                if (!event.defaultPrevented) {
                                    width = event.detail.width;
                                    if (width && width !== elem._lazysizesWidth) {
                                        sizeElement(elem, parent, event, width)
                                    }
                                }
                            }
                        };
                        var updateElementsSizes = function() {
                            var i;
                            var len = autosizesElems.length;
                            if (len) {
                                i = 0;
                                for (; i < len; i++) {
                                    getSizeElement(autosizesElems[i])
                                }
                            }
                        };
                        var debouncedUpdateElementsSizes = debounce(updateElementsSizes);
                        return {
                            _: function() {
                                autosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);
                                addEventListener("resize", debouncedUpdateElementsSizes)
                            },
                            checkElems: debouncedUpdateElementsSizes,
                            updateElem: getSizeElement
                        }
                    }(),
                    init = function() {
                        if (!init.i && document.getElementsByClassName) {
                            init.i = true;
                            autoSizer._();
                            loader._()
                        }
                    };
                return setTimeout(function() {
                    lazySizesCfg.init && init()
                }), lazysizes = {
                    cfg: lazySizesCfg,
                    autoSizer: autoSizer,
                    loader: loader,
                    init: init,
                    uP: updatePolyfill,
                    aC: addClass,
                    rC: removeClass,
                    hC: hasClass,
                    fire: triggerEvent,
                    gW: getWidth,
                    rAF: rAF
                }
            }(window, window.document);
            window.lazySizes = lazySizes, "object" == typeof module && module.exports && (module.exports = lazySizes)
        }("undefined" != typeof window ? window : {})
    }, {}],
    32: [function(require, module, exports) {
        !function(window, factory) {
            if (window) {
                var globalInstall = function() {
                    factory(window.lazySizes), window.removeEventListener("lazyunveilread", globalInstall, !0)
                };
                factory = factory.bind(null, window, window.document), "object" == typeof module && module.exports ? factory(require("lazysizes")) : window.lazySizes ? globalInstall() : window.addEventListener("lazyunveilread", globalInstall, !0)
            }
        }("undefined" != typeof window ? window : 0, function(window, document, lazySizes) {
            "use strict";
            var polyfill,
                regDescriptors,
                forEach,
                candidates,
                regWCandidates,
                regMultiple,
                regPxLength,
                parseWsrcset,
                runMatchMedia,
                matchesMedia,
                sels,
                lazySizesCfg = lazySizes.cfg,
                img = document.createElement("img"),
                supportSrcset = "sizes" in img && "srcset" in img,
                regHDesc = /\s+\d+h/g,
                fixEdgeHDescriptor = (regDescriptors = /\s+(\d+)(w|h)\s+(\d+)(w|h)/, forEach = Array.prototype.forEach, function() {
                    function removeHDescriptors(source) {
                        var ratio,
                            match,
                            srcset = source.getAttribute(lazySizesCfg.srcsetAttr);
                        srcset && (match = srcset.match(regDescriptors)) && ((ratio = "w" == match[2] ? match[1] / match[3] : match[3] / match[1]) && source.setAttribute("data-aspectratio", ratio), source.setAttribute(lazySizesCfg.srcsetAttr, srcset.replace(regHDesc, "")))
                    }
                    function handler(e) {
                        if (e.detail.instance == lazySizes) {
                            var picture = e.target.parentNode;
                            picture && "PICTURE" == picture.nodeName && forEach.call(picture.getElementsByTagName("source"), removeHDescriptors), removeHDescriptors(e.target)
                        }
                    }
                    function test() {
                        img.currentSrc && document.removeEventListener("lazybeforeunveil", handler)
                    }
                    var img = document.createElement("img");
                    document.addEventListener("lazybeforeunveil", handler), img.onload = test, img.onerror = test, img.srcset = "data:,a 1w 1h", img.complete && test()
                });
            (lazySizesCfg.supportsType || (lazySizesCfg.supportsType = function(type) {
                return !type
            }), window.HTMLPictureElement && supportSrcset) ? !lazySizes.hasHDescriptorFix && document.msElementsFromPoint && (lazySizes.hasHDescriptorFix = !0, fixEdgeHDescriptor()) : window.picturefill || lazySizesCfg.pf || (lazySizesCfg.pf = function(options) {
                var i,
                    len;
                if (!window.picturefill)
                    for (i = 0, len = options.elements.length; i < len; i++)
                        polyfill(options.elements[i])
            }, regPxLength = /^\s*\d+\.*\d*px\s*$/, regWCandidates = /(([^,\s].[^\s]+)\s+(\d+)w)/g, regMultiple = /\s/, runMatchMedia = function() {
                var timer,
                    matchMediaElems;
                runMatchMedia.init || (runMatchMedia.init = !0, addEventListener("resize", (matchMediaElems = document.getElementsByClassName("lazymatchmedia"), function() {
                    clearTimeout(timer), timer = setTimeout(run, 66)
                })));
                function run() {
                    var i,
                        len;
                    for (i = 0, len = matchMediaElems.length; i < len; i++)
                        polyfill(matchMediaElems[i])
                }
            }, matchesMedia = function(media) {
                return window.matchMedia ? (matchesMedia = function(media) {
                    return !media || (matchMedia(media) || {}).matches
                })(media) : !media
            }, p.parse = parseWsrcset = function(input) {
                return candidates = [], (input = input.trim()).replace(regHDesc, "").replace(regWCandidates, addCandidate), candidates.length || !input || regMultiple.test(input) || candidates.push({
                    c: input,
                    u: input,
                    w: 99
                }), candidates
            }, polyfill = p, lazySizesCfg.loadedClass && lazySizesCfg.loadingClass && (sels = [], ['img[sizes$="px"][srcset].', "picture > img:not([srcset])."].forEach(function(sel) {
                sels.push(sel + lazySizesCfg.loadedClass), sels.push(sel + lazySizesCfg.loadingClass)
            }), lazySizesCfg.pf({
                elements: document.querySelectorAll(sels.join(", "))
            })));
            function ascendingSort(a, b) {
                return a.w - b.w
            }
            function addCandidate(match, candidate, url, wDescriptor) {
                candidates.push({
                    c: candidate,
                    u: url,
                    w: 1 * wDescriptor
                })
            }
            function createSrcset(elem, isImage) {
                var parsedSet,
                    srcSet = elem.getAttribute("srcset") || elem.getAttribute(lazySizesCfg.srcsetAttr);
                !srcSet && isImage && (srcSet = elem._lazypolyfill ? elem._lazypolyfill._set : elem.getAttribute(lazySizesCfg.srcAttr) || elem.getAttribute("src")), elem._lazypolyfill && elem._lazypolyfill._set == srcSet || (parsedSet = parseWsrcset(srcSet || ""), isImage && elem.parentNode && (parsedSet.isPicture = "PICTURE" == elem.parentNode.nodeName.toUpperCase(), parsedSet.isPicture && window.matchMedia && (lazySizes.aC(elem, "lazymatchmedia"), runMatchMedia())), parsedSet._set = srcSet, Object.defineProperty(elem, "_lazypolyfill", {
                    value: parsedSet,
                    writable: !0
                }))
            }
            function getCandidate(elem) {
                var sources,
                    i,
                    len,
                    source,
                    srces,
                    src,
                    width;
                if (createSrcset(source = elem, !0), (srces = source._lazypolyfill).isPicture)
                    for (i = 0, len = (sources = elem.parentNode.getElementsByTagName("source")).length; i < len; i++)
                        if (lazySizesCfg.supportsType(sources[i].getAttribute("type"), elem) && matchesMedia(sources[i].getAttribute("media"))) {
                            source = sources[i], createSrcset(source), srces = source._lazypolyfill;
                            break
                        }
                return 1 < srces.length ? (width = source.getAttribute("sizes") || "", width = regPxLength.test(width) && parseInt(width, 10) || lazySizes.gW(elem, elem.parentNode), srces.d = function(elem) {
                    var dpr = window.devicePixelRatio || 1,
                        optimum = lazySizes.getX && lazySizes.getX(elem);
                    return Math.min(optimum || dpr, 2.5, dpr)
                }(elem), !srces.src || !srces.w || srces.w < width ? (srces.w = width, src = function(srces) {
                    for (var lowerCandidate, bonusFactor, len = srces.length, candidate = srces[len - 1], i = 0; i < len; i++)
                        if ((candidate = srces[i]).d = candidate.w / srces.w, candidate.d >= srces.d) {
                            !candidate.cached && (lowerCandidate = srces[i - 1]) && lowerCandidate.d > srces.d - .13 * Math.pow(srces.d, 2.2) && (bonusFactor = Math.pow(lowerCandidate.d - .6, 1.6), lowerCandidate.cached && (lowerCandidate.d += .15 * bonusFactor), lowerCandidate.d + (candidate.d - srces.d) * bonusFactor > srces.d && (candidate = lowerCandidate));
                            break
                        }
                    return candidate
                }(srces.sort(ascendingSort)), srces.src = src) : src = srces.src) : src = srces[0], src
            }
            function p(elem) {
                if (!supportSrcset || !elem.parentNode || "PICTURE" == elem.parentNode.nodeName.toUpperCase()) {
                    var candidate = getCandidate(elem);
                    candidate && candidate.u && elem._lazypolyfill.cur != candidate.u && (elem._lazypolyfill.cur = candidate.u, candidate.cached = !0, elem.setAttribute(lazySizesCfg.srcAttr, candidate.u), elem.setAttribute("src", candidate.u))
                }
            }
        })
    }, {
        lazysizes: 31
    }],
    33: [function(require, module, exports) {
        "use strict";
        var OFI = "bfred-it:object-fit-images",
            propRegex = /(object-fit|object-position)\s*:\s*([-.\w\s%]+)/g,
            testImg = "undefined" == typeof Image ? {
                style: {
                    "object-position": 1
                }
            } : new Image,
            supportsObjectFit = "object-fit" in testImg.style,
            supportsObjectPosition = "object-position" in testImg.style,
            supportsOFI = "background-size" in testImg.style,
            supportsCurrentSrc = "string" == typeof testImg.currentSrc,
            nativeGetAttribute = testImg.getAttribute,
            nativeSetAttribute = testImg.setAttribute,
            autoModeEnabled = !1;
        function setPlaceholder(img, width, height) {
            var placeholder = function(w, h) {
                return "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='" + w + "' height='" + h + "'%3E%3C/svg%3E"
            }(width || 1, height || 0);
            nativeGetAttribute.call(img, "src") !== placeholder && nativeSetAttribute.call(img, "src", placeholder)
        }
        function onImageReady(img, callback) {
            img.naturalWidth ? callback(img) : setTimeout(onImageReady, 100, img, callback)
        }
        function fixOne(el) {
            var style = function(el) {
                    for (var parsed, style = getComputedStyle(el).fontFamily, props = {}; null !== (parsed = propRegex.exec(style));)
                        props[parsed[1]] = parsed[2];
                    return props
                }(el),
                ofi = el[OFI];
            if (style["object-fit"] = style["object-fit"] || "fill", !ofi.img) {
                if ("fill" === style["object-fit"])
                    return;
                if (!ofi.skipTest && supportsObjectFit && !style["object-position"])
                    return
            }
            if (!ofi.img) {
                ofi.img = new Image(el.width, el.height), ofi.img.srcset = nativeGetAttribute.call(el, "data-ofi-srcset") || el.srcset, ofi.img.src = nativeGetAttribute.call(el, "data-ofi-src") || el.src, nativeSetAttribute.call(el, "data-ofi-src", el.src), el.srcset && nativeSetAttribute.call(el, "data-ofi-srcset", el.srcset), setPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height), el.srcset && (el.srcset = "");
                try {
                    !function(el) {
                        var descriptors = {
                            get: function(prop) {
                                return el[OFI].img[prop || "src"]
                            },
                            set: function(value, prop) {
                                return el[OFI].img[prop || "src"] = value, nativeSetAttribute.call(el, "data-ofi-" + prop, value), fixOne(el), value
                            }
                        };
                        Object.defineProperty(el, "src", descriptors), Object.defineProperty(el, "currentSrc", {
                            get: function() {
                                return descriptors.get("currentSrc")
                            }
                        }), Object.defineProperty(el, "srcset", {
                            get: function() {
                                return descriptors.get("srcset")
                            },
                            set: function(ss) {
                                return descriptors.set(ss, "srcset")
                            }
                        })
                    }(el)
                } catch (err) {
                    window.console && console.warn("https://bit.ly/ofi-old-browser")
                }
            }
            !function(el) {
                if (el.srcset && !supportsCurrentSrc && window.picturefill) {
                    var pf = window.picturefill._;
                    el[pf.ns] && el[pf.ns].evaled || pf.fillImg(el, {
                        reselect: !0
                    }), el[pf.ns].curSrc || (el[pf.ns].supported = !1, pf.fillImg(el, {
                        reselect: !0
                    })), el.currentSrc = el[pf.ns].curSrc || el.src
                }
            }(ofi.img), el.style.backgroundImage = 'url("' + (ofi.img.currentSrc || ofi.img.src).replace(/"/g, '\\"') + '")', el.style.backgroundPosition = style["object-position"] || "center", el.style.backgroundRepeat = "no-repeat", el.style.backgroundOrigin = "content-box", /scale-down/.test(style["object-fit"]) ? onImageReady(ofi.img, function() {
                ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height ? el.style.backgroundSize = "contain" : el.style.backgroundSize = "auto"
            }) : el.style.backgroundSize = style["object-fit"].replace("none", "auto").replace("fill", "100% 100%"), onImageReady(ofi.img, function(img) {
                setPlaceholder(el, img.naturalWidth, img.naturalHeight)
            })
        }
        function fix(imgs, opts) {
            var startAutoMode = !autoModeEnabled && !imgs;
            if (opts = opts || {}, imgs = imgs || "img", supportsObjectPosition && !opts.skipTest || !supportsOFI)
                return !1;
            "img" === imgs ? imgs = document.getElementsByTagName("img") : "string" == typeof imgs ? imgs = document.querySelectorAll(imgs) : "length" in imgs || (imgs = [imgs]);
            for (var i = 0; i < imgs.length; i++)
                imgs[i][OFI] = imgs[i][OFI] || {
                    skipTest: opts.skipTest
                }, fixOne(imgs[i]);
            startAutoMode && (document.body.addEventListener("load", function(e) {
                "IMG" === e.target.tagName && fix(e.target, {
                    skipTest: opts.skipTest
                })
            }, !0), autoModeEnabled = !0, imgs = "img"), opts.watchMQ && window.addEventListener("resize", fix.bind(null, imgs, {
                skipTest: opts.skipTest
            }))
        }
        function getOfiImageMaybe(el, name) {
            return el[OFI] && el[OFI].img && ("src" === name || "srcset" === name) ? el[OFI].img : el
        }
        fix.supportsObjectFit = supportsObjectFit, (fix.supportsObjectPosition = supportsObjectPosition) || (HTMLImageElement.prototype.getAttribute = function(name) {
            return nativeGetAttribute.call(getOfiImageMaybe(this, name), name)
        }, HTMLImageElement.prototype.setAttribute = function(name, value) {
            return nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value))
        }), module.exports = fix
    }, {}],
    34: [function(require, module, exports) {
        var cachedSetTimeout,
            cachedClearTimeout,
            process = module.exports = {};
        function defaultSetTimout() {
            throw new Error("setTimeout has not been defined")
        }
        function defaultClearTimeout() {
            throw new Error("clearTimeout has not been defined")
        }
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout)
                return setTimeout(fun, 0);
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout)
                return cachedSetTimeout = setTimeout, setTimeout(fun, 0);
            try {
                return cachedSetTimeout(fun, 0)
            } catch (e) {
                try {
                    return cachedSetTimeout.call(null, fun, 0)
                } catch (e) {
                    return cachedSetTimeout.call(this, fun, 0)
                }
            }
        }
        !function() {
            try {
                cachedSetTimeout = "function" == typeof setTimeout ? setTimeout : defaultSetTimout
            } catch (e) {
                cachedSetTimeout = defaultSetTimout
            }
            try {
                cachedClearTimeout = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout
            }
        }();
        var currentQueue,
            queue = [],
            draining = !1,
            queueIndex = -1;
        function cleanUpNextTick() {
            draining && currentQueue && (draining = !1, currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1, queue.length && drainQueue())
        }
        function drainQueue() {
            if (!draining) {
                var timeout = runTimeout(cleanUpNextTick);
                draining = !0;
                for (var len = queue.length; len;) {
                    for (currentQueue = queue, queue = []; ++queueIndex < len;)
                        currentQueue && currentQueue[queueIndex].run();
                    queueIndex = -1, len = queue.length
                }
                currentQueue = null, draining = !1, function(marker) {
                    if (cachedClearTimeout === clearTimeout)
                        return clearTimeout(marker);
                    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout)
                        return cachedClearTimeout = clearTimeout, clearTimeout(marker);
                    try {
                        cachedClearTimeout(marker)
                    } catch (e) {
                        try {
                            return cachedClearTimeout.call(null, marker)
                        } catch (e) {
                            return cachedClearTimeout.call(this, marker)
                        }
                    }
                }(timeout)
            }
        }
        function Item(fun, array) {
            this.fun = fun, this.array = array
        }
        function noop() {}
        process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (1 < arguments.length)
                for (var i = 1; i < arguments.length; i++)
                    args[i - 1] = arguments[i];
            queue.push(new Item(fun, args)), 1 !== queue.length || draining || runTimeout(drainQueue)
        }, Item.prototype.run = function() {
            this.fun.apply(null, this.array)
        }, process.title = "browser", process.browser = !0, process.env = {}, process.argv = [], process.version = "", process.versions = {}, process.on = noop, process.addListener = noop, process.once = noop, process.off = noop, process.removeListener = noop, process.removeAllListeners = noop, process.emit = noop, process.prependListener = noop, process.prependOnceListener = noop, process.listeners = function(name) {
            return []
        }, process.binding = function(name) {
            throw new Error("process.binding is not supported")
        }, process.cwd = function() {
            return "/"
        }, process.chdir = function(dir) {
            throw new Error("process.chdir is not supported")
        }, process.umask = function() {
            return 0
        }
    }, {}],
    35: [function(require, module, exports) {
        (function(setImmediate, clearImmediate) {
            var nextTick = require("process/browser.js").nextTick,
                apply = Function.prototype.apply,
                slice = Array.prototype.slice,
                immediateIds = {},
                nextImmediateId = 0;
            function Timeout(id, clearFn) {
                this._id = id, this._clearFn = clearFn
            }
            exports.setTimeout = function() {
                return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout)
            }, exports.setInterval = function() {
                return new Timeout(apply.call(setInterval, window, arguments), clearInterval)
            }, exports.clearTimeout = exports.clearInterval = function(timeout) {
                timeout.close()
            }, Timeout.prototype.unref = Timeout.prototype.ref = function() {}, Timeout.prototype.close = function() {
                this._clearFn.call(window, this._id)
            }, exports.enroll = function(item, msecs) {
                clearTimeout(item._idleTimeoutId), item._idleTimeout = msecs
            }, exports.unenroll = function(item) {
                clearTimeout(item._idleTimeoutId), item._idleTimeout = -1
            }, exports._unrefActive = exports.active = function(item) {
                clearTimeout(item._idleTimeoutId);
                var msecs = item._idleTimeout;
                0 <= msecs && (item._idleTimeoutId = setTimeout(function() {
                    item._onTimeout && item._onTimeout()
                }, msecs))
            }, exports.setImmediate = "function" == typeof setImmediate ? setImmediate : function(fn) {
                var id = nextImmediateId++,
                    args = !(arguments.length < 2) && slice.call(arguments, 1);
                return immediateIds[id] = !0, nextTick(function() {
                    immediateIds[id] && (args ? fn.apply(null, args) : fn.call(null), exports.clearImmediate(id))
                }), id
            }, exports.clearImmediate = "function" == typeof clearImmediate ? clearImmediate : function(id) {
                delete immediateIds[id]
            }
        }).call(this, require("timers").setImmediate, require("timers").clearImmediate)
    }, {
        "process/browser.js": 34,
        timers: 35
    }],
    36: [function(require, module, exports) {
        (function(global) {
            !function() {
                function Ctor() {}
                var root = "object" == typeof self && self.self === self && self || "object" == typeof global && global.global === global && global || this || {},
                    previousUnderscore = root._,
                    ArrayProto = Array.prototype,
                    ObjProto = Object.prototype,
                    SymbolProto = "undefined" != typeof Symbol ? Symbol.prototype : null,
                    push = ArrayProto.push,
                    slice = ArrayProto.slice,
                    toString = ObjProto.toString,
                    hasOwnProperty = ObjProto.hasOwnProperty,
                    nativeIsArray = Array.isArray,
                    nativeKeys = Object.keys,
                    nativeCreate = Object.create,
                    _ = function(obj) {
                        return obj instanceof _ ? obj : this instanceof _ ? void (this._wrapped = obj) : new _(obj)
                    };
                void 0 === exports || exports.nodeType ? root._ = _ : (void 0 !== module && !module.nodeType && module.exports && (exports = module.exports = _), exports._ = _), _.VERSION = "1.9.1";
                function optimizeCb(func, context, argCount) {
                    if (void 0 === context)
                        return func;
                    switch (null == argCount ? 3 : argCount) {
                    case 1:
                        return function(value) {
                            return func.call(context, value)
                        };
                    case 3:
                        return function(value, index, collection) {
                            return func.call(context, value, index, collection)
                        };
                    case 4:
                        return function(accumulator, value, index, collection) {
                            return func.call(context, accumulator, value, index, collection)
                        }
                    }
                    return function() {
                        return func.apply(context, arguments)
                    }
                }
                function cb(value, context, argCount) {
                    return _.iteratee !== builtinIteratee ? _.iteratee(value, context) : null == value ? _.identity : _.isFunction(value) ? optimizeCb(value, context, argCount) : _.isObject(value) && !_.isArray(value) ? _.matcher(value) : _.property(value)
                }
                var builtinIteratee;
                _.iteratee = builtinIteratee = function(value, context) {
                    return cb(value, context, 1 / 0)
                };
                function restArguments(func, startIndex) {
                    return startIndex = null == startIndex ? func.length - 1 : +startIndex, function() {
                        for (var length = Math.max(arguments.length - startIndex, 0), rest = Array(length), index = 0; index < length; index++)
                            rest[index] = arguments[index + startIndex];
                        switch (startIndex) {
                        case 0:
                            return func.call(this, rest);
                        case 1:
                            return func.call(this, arguments[0], rest);
                        case 2:
                            return func.call(this, arguments[0], arguments[1], rest)
                        }
                        var args = Array(startIndex + 1);
                        for (index = 0; index < startIndex; index++)
                            args[index] = arguments[index];
                        return args[startIndex] = rest, func.apply(this, args)
                    }
                }
                function baseCreate(prototype) {
                    if (!_.isObject(prototype))
                        return {};
                    if (nativeCreate)
                        return nativeCreate(prototype);
                    Ctor.prototype = prototype;
                    var result = new Ctor;
                    return Ctor.prototype = null, result
                }
                function shallowProperty(key) {
                    return function(obj) {
                        return null == obj ? void 0 : obj[key]
                    }
                }
                function has(obj, path) {
                    return null != obj && hasOwnProperty.call(obj, path)
                }
                function deepGet(obj, path) {
                    for (var length = path.length, i = 0; i < length; i++) {
                        if (null == obj)
                            return;
                        obj = obj[path[i]]
                    }
                    return length ? obj : void 0
                }
                function isArrayLike(collection) {
                    var length = getLength(collection);
                    return "number" == typeof length && 0 <= length && length <= MAX_ARRAY_INDEX
                }
                var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1,
                    getLength = shallowProperty("length");
                _.each = _.forEach = function(obj, iteratee, context) {
                    var i,
                        length;
                    if (iteratee = optimizeCb(iteratee, context), isArrayLike(obj))
                        for (i = 0, length = obj.length; i < length; i++)
                            iteratee(obj[i], i, obj);
                    else {
                        var keys = _.keys(obj);
                        for (i = 0, length = keys.length; i < length; i++)
                            iteratee(obj[keys[i]], keys[i], obj)
                    }
                    return obj
                }, _.map = _.collect = function(obj, iteratee, context) {
                    iteratee = cb(iteratee, context);
                    for (var keys = !isArrayLike(obj) && _.keys(obj), length = (keys || obj).length, results = Array(length), index = 0; index < length; index++) {
                        var currentKey = keys ? keys[index] : index;
                        results[index] = iteratee(obj[currentKey], currentKey, obj)
                    }
                    return results
                };
                function createReduce(dir) {
                    return function(obj, iteratee, memo, context) {
                        var initial = 3 <= arguments.length;
                        return function(obj, iteratee, memo, initial) {
                            var keys = !isArrayLike(obj) && _.keys(obj),
                                length = (keys || obj).length,
                                index = 0 < dir ? 0 : length - 1;
                            for (initial || (memo = obj[keys ? keys[index] : index], index += dir); 0 <= index && index < length; index += dir) {
                                var currentKey = keys ? keys[index] : index;
                                memo = iteratee(memo, obj[currentKey], currentKey, obj)
                            }
                            return memo
                        }(obj, optimizeCb(iteratee, context, 4), memo, initial)
                    }
                }
                _.reduce = _.foldl = _.inject = createReduce(1), _.reduceRight = _.foldr = createReduce(-1), _.find = _.detect = function(obj, predicate, context) {
                    var key = (isArrayLike(obj) ? _.findIndex : _.findKey)(obj, predicate, context);
                    if (void 0 !== key && -1 !== key)
                        return obj[key]
                }, _.filter = _.select = function(obj, predicate, context) {
                    var results = [];
                    return predicate = cb(predicate, context), _.each(obj, function(value, index, list) {
                        predicate(value, index, list) && results.push(value)
                    }), results
                }, _.reject = function(obj, predicate, context) {
                    return _.filter(obj, _.negate(cb(predicate)), context)
                }, _.every = _.all = function(obj, predicate, context) {
                    predicate = cb(predicate, context);
                    for (var keys = !isArrayLike(obj) && _.keys(obj), length = (keys || obj).length, index = 0; index < length; index++) {
                        var currentKey = keys ? keys[index] : index;
                        if (!predicate(obj[currentKey], currentKey, obj))
                            return !1
                    }
                    return !0
                }, _.some = _.any = function(obj, predicate, context) {
                    predicate = cb(predicate, context);
                    for (var keys = !isArrayLike(obj) && _.keys(obj), length = (keys || obj).length, index = 0; index < length; index++) {
                        var currentKey = keys ? keys[index] : index;
                        if (predicate(obj[currentKey], currentKey, obj))
                            return !0
                    }
                    return !1
                }, _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
                    return isArrayLike(obj) || (obj = _.values(obj)), "number" == typeof fromIndex && !guard || (fromIndex = 0), 0 <= _.indexOf(obj, item, fromIndex)
                }, _.invoke = restArguments(function(obj, path, args) {
                    var contextPath,
                        func;
                    return _.isFunction(path) ? func = path : _.isArray(path) && (contextPath = path.slice(0, -1), path = path[path.length - 1]), _.map(obj, function(context) {
                        var method = func;
                        if (!method) {
                            if (contextPath && contextPath.length && (context = deepGet(context, contextPath)), null == context)
                                return;
                            method = context[path]
                        }
                        return null == method ? method : method.apply(context, args)
                    })
                }), _.pluck = function(obj, key) {
                    return _.map(obj, _.property(key))
                }, _.where = function(obj, attrs) {
                    return _.filter(obj, _.matcher(attrs))
                }, _.findWhere = function(obj, attrs) {
                    return _.find(obj, _.matcher(attrs))
                }, _.max = function(obj, iteratee, context) {
                    var value,
                        computed,
                        result = -1 / 0,
                        lastComputed = -1 / 0;
                    if (null == iteratee || "number" == typeof iteratee && "object" != typeof obj[0] && null != obj)
                        for (var i = 0, length = (obj = isArrayLike(obj) ? obj : _.values(obj)).length; i < length; i++)
                            null != (value = obj[i]) && result < value && (result = value);
                    else
                        iteratee = cb(iteratee, context), _.each(obj, function(v, index, list) {
                            computed = iteratee(v, index, list), (lastComputed < computed || computed === -1 / 0 && result === -1 / 0) && (result = v, lastComputed = computed)
                        });
                    return result
                }, _.min = function(obj, iteratee, context) {
                    var value,
                        computed,
                        result = 1 / 0,
                        lastComputed = 1 / 0;
                    if (null == iteratee || "number" == typeof iteratee && "object" != typeof obj[0] && null != obj)
                        for (var i = 0, length = (obj = isArrayLike(obj) ? obj : _.values(obj)).length; i < length; i++)
                            null != (value = obj[i]) && value < result && (result = value);
                    else
                        iteratee = cb(iteratee, context), _.each(obj, function(v, index, list) {
                            ((computed = iteratee(v, index, list)) < lastComputed || computed === 1 / 0 && result === 1 / 0) && (result = v, lastComputed = computed)
                        });
                    return result
                }, _.shuffle = function(obj) {
                    return _.sample(obj, 1 / 0)
                }, _.sample = function(obj, n, guard) {
                    if (null == n || guard)
                        return isArrayLike(obj) || (obj = _.values(obj)), obj[_.random(obj.length - 1)];
                    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj),
                        length = getLength(sample);
                    n = Math.max(Math.min(n, length), 0);
                    for (var last = length - 1, index = 0; index < n; index++) {
                        var rand = _.random(index, last),
                            temp = sample[index];
                        sample[index] = sample[rand], sample[rand] = temp
                    }
                    return sample.slice(0, n)
                }, _.sortBy = function(obj, iteratee, context) {
                    var index = 0;
                    return iteratee = cb(iteratee, context), _.pluck(_.map(obj, function(value, key, list) {
                        return {
                            value: value,
                            index: index++,
                            criteria: iteratee(value, key, list)
                        }
                    }).sort(function(left, right) {
                        var a = left.criteria,
                            b = right.criteria;
                        if (a !== b) {
                            if (b < a || void 0 === a)
                                return 1;
                            if (a < b || void 0 === b)
                                return -1
                        }
                        return left.index - right.index
                    }), "value")
                };
                function group(behavior, partition) {
                    return function(obj, iteratee, context) {
                        var result = partition ? [[], []] : {};
                        return iteratee = cb(iteratee, context), _.each(obj, function(value, index) {
                            var key = iteratee(value, index, obj);
                            behavior(result, value, key)
                        }), result
                    }
                }
                _.groupBy = group(function(result, value, key) {
                    has(result, key) ? result[key].push(value) : result[key] = [value]
                }), _.indexBy = group(function(result, value, key) {
                    result[key] = value
                }), _.countBy = group(function(result, value, key) {
                    has(result, key) ? result[key]++ : result[key] = 1
                });
                var reStrSymbol = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
                _.toArray = function(obj) {
                    return obj ? _.isArray(obj) ? slice.call(obj) : _.isString(obj) ? obj.match(reStrSymbol) : isArrayLike(obj) ? _.map(obj, _.identity) : _.values(obj) : []
                }, _.size = function(obj) {
                    return null == obj ? 0 : isArrayLike(obj) ? obj.length : _.keys(obj).length
                }, _.partition = group(function(result, value, pass) {
                    result[pass ? 0 : 1].push(value)
                }, !0), _.first = _.head = _.take = function(array, n, guard) {
                    return null == array || array.length < 1 ? null == n ? void 0 : [] : null == n || guard ? array[0] : _.initial(array, array.length - n)
                }, _.initial = function(array, n, guard) {
                    return slice.call(array, 0, Math.max(0, array.length - (null == n || guard ? 1 : n)))
                }, _.last = function(array, n, guard) {
                    return null == array || array.length < 1 ? null == n ? void 0 : [] : null == n || guard ? array[array.length - 1] : _.rest(array, Math.max(0, array.length - n))
                }, _.rest = _.tail = _.drop = function(array, n, guard) {
                    return slice.call(array, null == n || guard ? 1 : n)
                }, _.compact = function(array) {
                    return _.filter(array, Boolean)
                };
                var flatten = function(input, shallow, strict, output) {
                    for (var idx = (output = output || []).length, i = 0, length = getLength(input); i < length; i++) {
                        var value = input[i];
                        if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value)))
                            if (shallow)
                                for (var j = 0, len = value.length; j < len;)
                                    output[idx++] = value[j++];
                            else
                                flatten(value, shallow, strict, output), idx = output.length;
                        else
                            strict || (output[idx++] = value)
                    }
                    return output
                };
                _.flatten = function(array, shallow) {
                    return flatten(array, shallow, !1)
                }, _.without = restArguments(function(array, otherArrays) {
                    return _.difference(array, otherArrays)
                }), _.uniq = _.unique = function(array, isSorted, iteratee, context) {
                    _.isBoolean(isSorted) || (context = iteratee, iteratee = isSorted, isSorted = !1), null != iteratee && (iteratee = cb(iteratee, context));
                    for (var result = [], seen = [], i = 0, length = getLength(array); i < length; i++) {
                        var value = array[i],
                            computed = iteratee ? iteratee(value, i, array) : value;
                        isSorted && !iteratee ? (i && seen === computed || result.push(value), seen = computed) : iteratee ? _.contains(seen, computed) || (seen.push(computed), result.push(value)) : _.contains(result, value) || result.push(value)
                    }
                    return result
                }, _.union = restArguments(function(arrays) {
                    return _.uniq(flatten(arrays, !0, !0))
                }), _.intersection = function(array) {
                    for (var result = [], argsLength = arguments.length, i = 0, length = getLength(array); i < length; i++) {
                        var item = array[i];
                        if (!_.contains(result, item)) {
                            var j;
                            for (j = 1; j < argsLength && _.contains(arguments[j], item); j++)
                                ;
                            j === argsLength && result.push(item)
                        }
                    }
                    return result
                }, _.difference = restArguments(function(array, rest) {
                    return rest = flatten(rest, !0, !0), _.filter(array, function(value) {
                        return !_.contains(rest, value)
                    })
                }), _.unzip = function(array) {
                    for (var length = array && _.max(array, getLength).length || 0, result = Array(length), index = 0; index < length; index++)
                        result[index] = _.pluck(array, index);
                    return result
                }, _.zip = restArguments(_.unzip), _.object = function(list, values) {
                    for (var result = {}, i = 0, length = getLength(list); i < length; i++)
                        values ? result[list[i]] = values[i] : result[list[i][0]] = list[i][1];
                    return result
                };
                function createPredicateIndexFinder(dir) {
                    return function(array, predicate, context) {
                        predicate = cb(predicate, context);
                        for (var length = getLength(array), index = 0 < dir ? 0 : length - 1; 0 <= index && index < length; index += dir)
                            if (predicate(array[index], index, array))
                                return index;
                        return -1
                    }
                }
                _.findIndex = createPredicateIndexFinder(1), _.findLastIndex = createPredicateIndexFinder(-1), _.sortedIndex = function(array, obj, iteratee, context) {
                    for (var value = (iteratee = cb(iteratee, context, 1))(obj), low = 0, high = getLength(array); low < high;) {
                        var mid = Math.floor((low + high) / 2);
                        iteratee(array[mid]) < value ? low = mid + 1 : high = mid
                    }
                    return low
                };
                function createIndexFinder(dir, predicateFind, sortedIndex) {
                    return function(array, item, idx) {
                        var i = 0,
                            length = getLength(array);
                        if ("number" == typeof idx)
                            0 < dir ? i = 0 <= idx ? idx : Math.max(idx + length, i) : length = 0 <= idx ? Math.min(idx + 1, length) : idx + length + 1;
                        else if (sortedIndex && idx && length)
                            return array[idx = sortedIndex(array, item)] === item ? idx : -1;
                        if (item != item)
                            return 0 <= (idx = predicateFind(slice.call(array, i, length), _.isNaN)) ? idx + i : -1;
                        for (idx = 0 < dir ? i : length - 1; 0 <= idx && idx < length; idx += dir)
                            if (array[idx] === item)
                                return idx;
                        return -1
                    }
                }
                _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex), _.lastIndexOf = createIndexFinder(-1, _.findLastIndex), _.range = function(start, stop, step) {
                    null == stop && (stop = start || 0, start = 0), step = step || (stop < start ? -1 : 1);
                    for (var length = Math.max(Math.ceil((stop - start) / step), 0), range = Array(length), idx = 0; idx < length; idx++, start += step)
                        range[idx] = start;
                    return range
                }, _.chunk = function(array, count) {
                    if (null == count || count < 1)
                        return [];
                    for (var result = [], i = 0, length = array.length; i < length;)
                        result.push(slice.call(array, i, i += count));
                    return result
                };
                function executeBound(sourceFunc, boundFunc, context, callingContext, args) {
                    if (!(callingContext instanceof boundFunc))
                        return sourceFunc.apply(context, args);
                    var self = baseCreate(sourceFunc.prototype),
                        result = sourceFunc.apply(self, args);
                    return _.isObject(result) ? result : self
                }
                _.bind = restArguments(function(func, context, args) {
                    if (!_.isFunction(func))
                        throw new TypeError("Bind must be called on a function");
                    var bound = restArguments(function(callArgs) {
                        return executeBound(func, bound, context, this, args.concat(callArgs))
                    });
                    return bound
                }), _.partial = restArguments(function(func, boundArgs) {
                    var placeholder = _.partial.placeholder,
                        bound = function() {
                            for (var position = 0, length = boundArgs.length, args = Array(length), i = 0; i < length; i++)
                                args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
                            for (; position < arguments.length;)
                                args.push(arguments[position++]);
                            return executeBound(func, bound, this, this, args)
                        };
                    return bound
                }), (_.partial.placeholder = _).bindAll = restArguments(function(obj, keys) {
                    var index = (keys = flatten(keys, !1, !1)).length;
                    if (index < 1)
                        throw new Error("bindAll must be passed function names");
                    for (; index--;) {
                        var key = keys[index];
                        obj[key] = _.bind(obj[key], obj)
                    }
                }), _.memoize = function(func, hasher) {
                    var memoize = function(key) {
                        var cache = memoize.cache,
                            address = "" + (hasher ? hasher.apply(this, arguments) : key);
                        return has(cache, address) || (cache[address] = func.apply(this, arguments)), cache[address]
                    };
                    return memoize.cache = {}, memoize
                }, _.delay = restArguments(function(func, wait, args) {
                    return setTimeout(function() {
                        return func.apply(null, args)
                    }, wait)
                }), _.defer = _.partial(_.delay, _, 1), _.throttle = function(func, wait, options) {
                    var timeout,
                        context,
                        args,
                        result,
                        previous = 0;
                    options = options || {};
                    function later() {
                        previous = !1 === options.leading ? 0 : _.now(), timeout = null, result = func.apply(context, args), timeout || (context = args = null)
                    }
                    function throttled() {
                        var now = _.now();
                        previous || !1 !== options.leading || (previous = now);
                        var remaining = wait - (now - previous);
                        return context = this, args = arguments, remaining <= 0 || wait < remaining ? (timeout && (clearTimeout(timeout), timeout = null), previous = now, result = func.apply(context, args), timeout || (context = args = null)) : timeout || !1 === options.trailing || (timeout = setTimeout(later, remaining)), result
                    }
                    return throttled.cancel = function() {
                        clearTimeout(timeout), previous = 0, timeout = context = args = null
                    }, throttled
                }, _.debounce = function(func, wait, immediate) {
                    function later(context, args) {
                        timeout = null, args && (result = func.apply(context, args))
                    }
                    var timeout,
                        result,
                        debounced = restArguments(function(args) {
                            if (timeout && clearTimeout(timeout), immediate) {
                                var callNow = !timeout;
                                timeout = setTimeout(later, wait), callNow && (result = func.apply(this, args))
                            } else
                                timeout = _.delay(later, wait, this, args);
                            return result
                        });
                    return debounced.cancel = function() {
                        clearTimeout(timeout), timeout = null
                    }, debounced
                }, _.wrap = function(func, wrapper) {
                    return _.partial(wrapper, func)
                }, _.negate = function(predicate) {
                    return function() {
                        return !predicate.apply(this, arguments)
                    }
                }, _.compose = function() {
                    var args = arguments,
                        start = args.length - 1;
                    return function() {
                        for (var i = start, result = args[start].apply(this, arguments); i--;)
                            result = args[i].call(this, result);
                        return result
                    }
                }, _.after = function(times, func) {
                    return function() {
                        if (--times < 1)
                            return func.apply(this, arguments)
                    }
                }, _.before = function(times, func) {
                    var memo;
                    return function() {
                        return 0 < --times && (memo = func.apply(this, arguments)), times <= 1 && (func = null), memo
                    }
                }, _.once = _.partial(_.before, 2), _.restArguments = restArguments;
                function collectNonEnumProps(obj, keys) {
                    var nonEnumIdx = nonEnumerableProps.length,
                        constructor = obj.constructor,
                        proto = _.isFunction(constructor) && constructor.prototype || ObjProto,
                        prop = "constructor";
                    for (has(obj, prop) && !_.contains(keys, prop) && keys.push(prop); nonEnumIdx--;)
                        (prop = nonEnumerableProps[nonEnumIdx]) in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop) && keys.push(prop)
                }
                var hasEnumBug = !{
                        toString: null
                    }.propertyIsEnumerable("toString"),
                    nonEnumerableProps = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
                _.keys = function(obj) {
                    if (!_.isObject(obj))
                        return [];
                    if (nativeKeys)
                        return nativeKeys(obj);
                    var keys = [];
                    for (var key in obj)
                        has(obj, key) && keys.push(key);
                    return hasEnumBug && collectNonEnumProps(obj, keys), keys
                }, _.allKeys = function(obj) {
                    if (!_.isObject(obj))
                        return [];
                    var keys = [];
                    for (var key in obj)
                        keys.push(key);
                    return hasEnumBug && collectNonEnumProps(obj, keys), keys
                }, _.values = function(obj) {
                    for (var keys = _.keys(obj), length = keys.length, values = Array(length), i = 0; i < length; i++)
                        values[i] = obj[keys[i]];
                    return values
                }, _.mapObject = function(obj, iteratee, context) {
                    iteratee = cb(iteratee, context);
                    for (var keys = _.keys(obj), length = keys.length, results = {}, index = 0; index < length; index++) {
                        var currentKey = keys[index];
                        results[currentKey] = iteratee(obj[currentKey], currentKey, obj)
                    }
                    return results
                }, _.pairs = function(obj) {
                    for (var keys = _.keys(obj), length = keys.length, pairs = Array(length), i = 0; i < length; i++)
                        pairs[i] = [keys[i], obj[keys[i]]];
                    return pairs
                }, _.invert = function(obj) {
                    for (var result = {}, keys = _.keys(obj), i = 0, length = keys.length; i < length; i++)
                        result[obj[keys[i]]] = keys[i];
                    return result
                }, _.functions = _.methods = function(obj) {
                    var names = [];
                    for (var key in obj)
                        _.isFunction(obj[key]) && names.push(key);
                    return names.sort()
                };
                function createAssigner(keysFunc, defaults) {
                    return function(obj) {
                        var length = arguments.length;
                        if (defaults && (obj = Object(obj)), length < 2 || null == obj)
                            return obj;
                        for (var index = 1; index < length; index++)
                            for (var source = arguments[index], keys = keysFunc(source), l = keys.length, i = 0; i < l; i++) {
                                var key = keys[i];
                                defaults && void 0 !== obj[key] || (obj[key] = source[key])
                            }
                        return obj
                    }
                }
                _.extend = createAssigner(_.allKeys), _.extendOwn = _.assign = createAssigner(_.keys), _.findKey = function(obj, predicate, context) {
                    predicate = cb(predicate, context);
                    for (var key, keys = _.keys(obj), i = 0, length = keys.length; i < length; i++)
                        if (predicate(obj[key = keys[i]], key, obj))
                            return key
                };
                function keyInObj(value, key, obj) {
                    return key in obj
                }
                var eq,
                    deepEq;
                _.pick = restArguments(function(obj, keys) {
                    var result = {},
                        iteratee = keys[0];
                    if (null == obj)
                        return result;
                    _.isFunction(iteratee) ? (1 < keys.length && (iteratee = optimizeCb(iteratee, keys[1])), keys = _.allKeys(obj)) : (iteratee = keyInObj, keys = flatten(keys, !1, !1), obj = Object(obj));
                    for (var i = 0, length = keys.length; i < length; i++) {
                        var key = keys[i],
                            value = obj[key];
                        iteratee(value, key, obj) && (result[key] = value)
                    }
                    return result
                }), _.omit = restArguments(function(obj, keys) {
                    var context,
                        iteratee = keys[0];
                    return _.isFunction(iteratee) ? (iteratee = _.negate(iteratee), 1 < keys.length && (context = keys[1])) : (keys = _.map(flatten(keys, !1, !1), String), iteratee = function(value, key) {
                        return !_.contains(keys, key)
                    }), _.pick(obj, iteratee, context)
                }), _.defaults = createAssigner(_.allKeys, !0), _.create = function(prototype, props) {
                    var result = baseCreate(prototype);
                    return props && _.extendOwn(result, props), result
                }, _.clone = function(obj) {
                    return _.isObject(obj) ? _.isArray(obj) ? obj.slice() : _.extend({}, obj) : obj
                }, _.tap = function(obj, interceptor) {
                    return interceptor(obj), obj
                }, _.isMatch = function(object, attrs) {
                    var keys = _.keys(attrs),
                        length = keys.length;
                    if (null == object)
                        return !length;
                    for (var obj = Object(object), i = 0; i < length; i++) {
                        var key = keys[i];
                        if (attrs[key] !== obj[key] || !(key in obj))
                            return !1
                    }
                    return !0
                }, eq = function(a, b, aStack, bStack) {
                    if (a === b)
                        return 0 !== a || 1 / a == 1 / b;
                    if (null == a || null == b)
                        return !1;
                    if (a != a)
                        return b != b;
                    var type = typeof a;
                    return ("function" == type || "object" == type || "object" == typeof b) && deepEq(a, b, aStack, bStack)
                }, deepEq = function(a, b, aStack, bStack) {
                    a instanceof _ && (a = a._wrapped), b instanceof _ && (b = b._wrapped);
                    var className = toString.call(a);
                    if (className !== toString.call(b))
                        return !1;
                    switch (className) {
                    case "[object RegExp]":
                    case "[object String]":
                        return "" + a == "" + b;
                    case "[object Number]":
                        return +a != +a ? +b != +b : 0 == +a ? 1 / +a == 1 / b : +a == +b;
                    case "[object Date]":
                    case "[object Boolean]":
                        return +a == +b;
                    case "[object Symbol]":
                        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b)
                    }
                    var areArrays = "[object Array]" === className;
                    if (!areArrays) {
                        if ("object" != typeof a || "object" != typeof b)
                            return !1;
                        var aCtor = a.constructor,
                            bCtor = b.constructor;
                        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b)
                            return !1
                    }
                    bStack = bStack || [];
                    for (var length = (aStack = aStack || []).length; length--;)
                        if (aStack[length] === a)
                            return bStack[length] === b;
                    if (aStack.push(a), bStack.push(b), areArrays) {
                        if ((length = a.length) !== b.length)
                            return !1;
                        for (; length--;)
                            if (!eq(a[length], b[length], aStack, bStack))
                                return !1
                    } else {
                        var key,
                            keys = _.keys(a);
                        if (length = keys.length, _.keys(b).length !== length)
                            return !1;
                        for (; length--;)
                            if (key = keys[length], !has(b, key) || !eq(a[key], b[key], aStack, bStack))
                                return !1
                    }
                    return aStack.pop(), bStack.pop(), !0
                }, _.isEqual = function(a, b) {
                    return eq(a, b)
                }, _.isEmpty = function(obj) {
                    return null == obj || (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) ? 0 === obj.length : 0 === _.keys(obj).length)
                }, _.isElement = function(obj) {
                    return !(!obj || 1 !== obj.nodeType)
                }, _.isArray = nativeIsArray || function(obj) {
                    return "[object Array]" === toString.call(obj)
                }, _.isObject = function(obj) {
                    var type = typeof obj;
                    return "function" == type || "object" == type && !!obj
                }, _.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error", "Symbol", "Map", "WeakMap", "Set", "WeakSet"], function(name) {
                    _["is" + name] = function(obj) {
                        return toString.call(obj) === "[object " + name + "]"
                    }
                }), _.isArguments(arguments) || (_.isArguments = function(obj) {
                    return has(obj, "callee")
                });
                var nodelist = root.document && root.document.childNodes;
                "function" != typeof /./ && "object" != typeof Int8Array && "function" != typeof nodelist && (_.isFunction = function(obj) {
                    return "function" == typeof obj || !1
                }), _.isFinite = function(obj) {
                    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj))
                }, _.isNaN = function(obj) {
                    return _.isNumber(obj) && isNaN(obj)
                }, _.isBoolean = function(obj) {
                    return !0 === obj || !1 === obj || "[object Boolean]" === toString.call(obj)
                }, _.isNull = function(obj) {
                    return null === obj
                }, _.isUndefined = function(obj) {
                    return void 0 === obj
                }, _.has = function(obj, path) {
                    if (!_.isArray(path))
                        return has(obj, path);
                    for (var length = path.length, i = 0; i < length; i++) {
                        var key = path[i];
                        if (null == obj || !hasOwnProperty.call(obj, key))
                            return !1;
                        obj = obj[key]
                    }
                    return !!length
                }, _.noConflict = function() {
                    return root._ = previousUnderscore, this
                }, _.identity = function(value) {
                    return value
                }, _.constant = function(value) {
                    return function() {
                        return value
                    }
                }, _.noop = function() {}, _.property = function(path) {
                    return _.isArray(path) ? function(obj) {
                        return deepGet(obj, path)
                    } : shallowProperty(path)
                }, _.propertyOf = function(obj) {
                    return null == obj ? function() {} : function(path) {
                        return _.isArray(path) ? deepGet(obj, path) : obj[path]
                    }
                }, _.matcher = _.matches = function(attrs) {
                    return attrs = _.extendOwn({}, attrs), function(obj) {
                        return _.isMatch(obj, attrs)
                    }
                }, _.times = function(n, iteratee, context) {
                    var accum = Array(Math.max(0, n));
                    iteratee = optimizeCb(iteratee, context, 1);
                    for (var i = 0; i < n; i++)
                        accum[i] = iteratee(i);
                    return accum
                }, _.random = function(min, max) {
                    return null == max && (max = min, min = 0), min + Math.floor(Math.random() * (max - min + 1))
                }, _.now = Date.now || function() {
                    return (new Date).getTime()
                };
                function createEscaper(map) {
                    function escaper(match) {
                        return map[match]
                    }
                    var source = "(?:" + _.keys(map).join("|") + ")",
                        testRegexp = RegExp(source),
                        replaceRegexp = RegExp(source, "g");
                    return function(string) {
                        return string = null == string ? "" : "" + string, testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string
                    }
                }
                var escapeMap = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    },
                    unescapeMap = _.invert(escapeMap);
                _.escape = createEscaper(escapeMap), _.unescape = createEscaper(unescapeMap), _.result = function(obj, path, fallback) {
                    _.isArray(path) || (path = [path]);
                    var length = path.length;
                    if (!length)
                        return _.isFunction(fallback) ? fallback.call(obj) : fallback;
                    for (var i = 0; i < length; i++) {
                        var prop = null == obj ? void 0 : obj[path[i]];
                        void 0 === prop && (prop = fallback, i = length), obj = _.isFunction(prop) ? prop.call(obj) : prop
                    }
                    return obj
                };
                var idCounter = 0;
                _.uniqueId = function(prefix) {
                    var id = ++idCounter + "";
                    return prefix ? prefix + id : id
                }, _.templateSettings = {
                    evaluate: /<%([\s\S]+?)%>/g,
                    interpolate: /<%=([\s\S]+?)%>/g,
                    escape: /<%-([\s\S]+?)%>/g
                };
                function escapeChar(match) {
                    return "\\" + escapes[match]
                }
                var noMatch = /(.)^/,
                    escapes = {
                        "'": "'",
                        "\\": "\\",
                        "\r": "r",
                        "\n": "n",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    },
                    escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;
                _.template = function(text, settings, oldSettings) {
                    !settings && oldSettings && (settings = oldSettings), settings = _.defaults({}, settings, _.templateSettings);
                    var render,
                        matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join("|") + "|$", "g"),
                        index = 0,
                        source = "__p+='";
                    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
                        return source += text.slice(index, offset).replace(escapeRegExp, escapeChar), index = offset + match.length, escape ? source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'" : interpolate ? source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'" : evaluate && (source += "';\n" + evaluate + "\n__p+='"), match
                    }), source += "';\n", settings.variable || (source = "with(obj||{}){\n" + source + "}\n"), source = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
                    try {
                        render = new Function(settings.variable || "obj", "_", source)
                    } catch (e) {
                        throw e.source = source, e
                    }
                    function template(data) {
                        return render.call(this, data, _)
                    }
                    var argument = settings.variable || "obj";
                    return template.source = "function(" + argument + "){\n" + source + "}", template
                }, _.chain = function(obj) {
                    var instance = _(obj);
                    return instance._chain = !0, instance
                };
                function chainResult(instance, obj) {
                    return instance._chain ? _(obj).chain() : obj
                }
                _.mixin = function(obj) {
                    return _.each(_.functions(obj), function(name) {
                        var func = _[name] = obj[name];
                        _.prototype[name] = function() {
                            var args = [this._wrapped];
                            return push.apply(args, arguments), chainResult(this, func.apply(_, args))
                        }
                    }), _
                }, _.mixin(_), _.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(name) {
                    var method = ArrayProto[name];
                    _.prototype[name] = function() {
                        var obj = this._wrapped;
                        return method.apply(obj, arguments), "shift" !== name && "splice" !== name || 0 !== obj.length || delete obj[0], chainResult(this, obj)
                    }
                }), _.each(["concat", "join", "slice"], function(name) {
                    var method = ArrayProto[name];
                    _.prototype[name] = function() {
                        return chainResult(this, method.apply(this._wrapped, arguments))
                    }
                }), _.prototype.value = function() {
                    return this._wrapped
                }, _.prototype.valueOf = _.prototype.toJSON = _.prototype.value, _.prototype.toString = function() {
                    return String(this._wrapped)
                }, "function" == typeof define && define.amd && define("underscore", [], function() {
                    return _
                })
            }()
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }, {}],
    37: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["unipointer/unipointer"], function(Unipointer) {
                return factory(window, Unipointer)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("unipointer")) : window.Unidragger = factory(window, window.Unipointer)
        }(window, function(window, Unipointer) {
            "use strict";
            function Unidragger() {}
            var proto = Unidragger.prototype = Object.create(Unipointer.prototype);
            proto.bindHandles = function() {
                this._bindHandles(!0)
            }, proto.unbindHandles = function() {
                this._bindHandles(!1)
            }, proto._bindHandles = function(isAdd) {
                for (var bindMethod = (isAdd = void 0 === isAdd || isAdd) ? "addEventListener" : "removeEventListener", touchAction = isAdd ? this._touchActionValue : "", i = 0; i < this.handles.length; i++) {
                    var handle = this.handles[i];
                    this._bindStartEvent(handle, isAdd), handle[bindMethod]("click", this), window.PointerEvent && (handle.style.touchAction = touchAction)
                }
            }, proto._touchActionValue = "none", proto.pointerDown = function(event, pointer) {
                this.okayPointerDown(event) && (this.pointerDownPointer = pointer, event.preventDefault(), this.pointerDownBlur(), this._bindPostStartEvents(event), this.emitEvent("pointerDown", [event, pointer]))
            };
            var cursorNodes = {
                    TEXTAREA: !0,
                    INPUT: !0,
                    SELECT: !0,
                    OPTION: !0
                },
                clickTypes = {
                    radio: !0,
                    checkbox: !0,
                    button: !0,
                    submit: !0,
                    image: !0,
                    file: !0
                };
            return proto.okayPointerDown = function(event) {
                var isCursorNode = cursorNodes[event.target.nodeName],
                    isClickType = clickTypes[event.target.type],
                    isOkay = !isCursorNode || isClickType;
                return isOkay || this._pointerReset(), isOkay
            }, proto.pointerDownBlur = function() {
                var focused = document.activeElement;
                focused && focused.blur && focused != document.body && focused.blur()
            }, proto.pointerMove = function(event, pointer) {
                var moveVector = this._dragPointerMove(event, pointer);
                this.emitEvent("pointerMove", [event, pointer, moveVector]), this._dragMove(event, pointer, moveVector)
            }, proto._dragPointerMove = function(event, pointer) {
                var moveVector = {
                    x: pointer.pageX - this.pointerDownPointer.pageX,
                    y: pointer.pageY - this.pointerDownPointer.pageY
                };
                return !this.isDragging && this.hasDragStarted(moveVector) && this._dragStart(event, pointer), moveVector
            }, proto.hasDragStarted = function(moveVector) {
                return 3 < Math.abs(moveVector.x) || 3 < Math.abs(moveVector.y)
            }, proto.pointerUp = function(event, pointer) {
                this.emitEvent("pointerUp", [event, pointer]), this._dragPointerUp(event, pointer)
            }, proto._dragPointerUp = function(event, pointer) {
                this.isDragging ? this._dragEnd(event, pointer) : this._staticClick(event, pointer)
            }, proto._dragStart = function(event, pointer) {
                this.isDragging = !0, this.isPreventingClicks = !0, this.dragStart(event, pointer)
            }, proto.dragStart = function(event, pointer) {
                this.emitEvent("dragStart", [event, pointer])
            }, proto._dragMove = function(event, pointer, moveVector) {
                this.isDragging && this.dragMove(event, pointer, moveVector)
            }, proto.dragMove = function(event, pointer, moveVector) {
                event.preventDefault(), this.emitEvent("dragMove", [event, pointer, moveVector])
            }, proto._dragEnd = function(event, pointer) {
                this.isDragging = !1, setTimeout(function() {
                    delete this.isPreventingClicks
                }.bind(this)), this.dragEnd(event, pointer)
            }, proto.dragEnd = function(event, pointer) {
                this.emitEvent("dragEnd", [event, pointer])
            }, proto.onclick = function(event) {
                this.isPreventingClicks && event.preventDefault()
            }, proto._staticClick = function(event, pointer) {
                this.isIgnoringMouseUp && "mouseup" == event.type || (this.staticClick(event, pointer), "mouseup" != event.type && (this.isIgnoringMouseUp = !0, setTimeout(function() {
                    delete this.isIgnoringMouseUp
                }.bind(this), 400)))
            }, proto.staticClick = function(event, pointer) {
                this.emitEvent("staticClick", [event, pointer])
            }, Unidragger.getPointerPoint = Unipointer.getPointerPoint, Unidragger
        })
    }, {
        unipointer: 38
    }],
    38: [function(require, module, exports) {
        !function(window, factory) {
            "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function(EvEmitter) {
                return factory(window, EvEmitter)
            }) : "object" == typeof module && module.exports ? module.exports = factory(window, require("ev-emitter")) : window.Unipointer = factory(window, window.EvEmitter)
        }(window, function(window, EvEmitter) {
            "use strict";
            function Unipointer() {}
            var proto = Unipointer.prototype = Object.create(EvEmitter.prototype);
            proto.bindStartEvent = function(elem) {
                this._bindStartEvent(elem, !0)
            }, proto.unbindStartEvent = function(elem) {
                this._bindStartEvent(elem, !1)
            }, proto._bindStartEvent = function(elem, isAdd) {
                var bindMethod = (isAdd = void 0 === isAdd || isAdd) ? "addEventListener" : "removeEventListener",
                    startEvent = "mousedown";
                window.PointerEvent ? startEvent = "pointerdown" : "ontouchstart" in window && (startEvent = "touchstart"), elem[bindMethod](startEvent, this)
            }, proto.handleEvent = function(event) {
                var method = "on" + event.type;
                this[method] && this[method](event)
            }, proto.getTouch = function(touches) {
                for (var i = 0; i < touches.length; i++) {
                    var touch = touches[i];
                    if (touch.identifier == this.pointerIdentifier)
                        return touch
                }
            }, proto.onmousedown = function(event) {
                var button = event.button;
                button && 0 !== button && 1 !== button || this._pointerDown(event, event)
            }, proto.ontouchstart = function(event) {
                this._pointerDown(event, event.changedTouches[0])
            }, proto.onpointerdown = function(event) {
                this._pointerDown(event, event)
            }, proto._pointerDown = function(event, pointer) {
                event.button || this.isPointerDown || (this.isPointerDown = !0, this.pointerIdentifier = void 0 !== pointer.pointerId ? pointer.pointerId : pointer.identifier, this.pointerDown(event, pointer))
            }, proto.pointerDown = function(event, pointer) {
                this._bindPostStartEvents(event), this.emitEvent("pointerDown", [event, pointer])
            };
            var postStartEvents = {
                mousedown: ["mousemove", "mouseup"],
                touchstart: ["touchmove", "touchend", "touchcancel"],
                pointerdown: ["pointermove", "pointerup", "pointercancel"]
            };
            return proto._bindPostStartEvents = function(event) {
                if (event) {
                    var events = postStartEvents[event.type];
                    events.forEach(function(eventName) {
                        window.addEventListener(eventName, this)
                    }, this), this._boundPointerEvents = events
                }
            }, proto._unbindPostStartEvents = function() {
                this._boundPointerEvents && (this._boundPointerEvents.forEach(function(eventName) {
                    window.removeEventListener(eventName, this)
                }, this), delete this._boundPointerEvents)
            }, proto.onmousemove = function(event) {
                this._pointerMove(event, event)
            }, proto.onpointermove = function(event) {
                event.pointerId == this.pointerIdentifier && this._pointerMove(event, event)
            }, proto.ontouchmove = function(event) {
                var touch = this.getTouch(event.changedTouches);
                touch && this._pointerMove(event, touch)
            }, proto._pointerMove = function(event, pointer) {
                this.pointerMove(event, pointer)
            }, proto.pointerMove = function(event, pointer) {
                this.emitEvent("pointerMove", [event, pointer])
            }, proto.onmouseup = function(event) {
                this._pointerUp(event, event)
            }, proto.onpointerup = function(event) {
                event.pointerId == this.pointerIdentifier && this._pointerUp(event, event)
            }, proto.ontouchend = function(event) {
                var touch = this.getTouch(event.changedTouches);
                touch && this._pointerUp(event, touch)
            }, proto._pointerUp = function(event, pointer) {
                this._pointerDone(), this.pointerUp(event, pointer)
            }, proto.pointerUp = function(event, pointer) {
                this.emitEvent("pointerUp", [event, pointer])
            }, proto._pointerDone = function() {
                this._pointerReset(), this._unbindPostStartEvents(), this.pointerDone()
            }, proto._pointerReset = function() {
                this.isPointerDown = !1, delete this.pointerIdentifier
            }, proto.pointerDone = function() {}, proto.onpointercancel = function(event) {
                event.pointerId == this.pointerIdentifier && this._pointerCancel(event, event)
            }, proto.ontouchcancel = function(event) {
                var touch = this.getTouch(event.changedTouches);
                touch && this._pointerCancel(event, touch)
            }, proto._pointerCancel = function(event, pointer) {
                this._pointerDone(), this.pointerCancel(event, pointer)
            }, proto.pointerCancel = function(event, pointer) {
                this.emitEvent("pointerCancel", [event, pointer])
            }, Unipointer.getPointerPoint = function(pointer) {
                return {
                    x: pointer.pageX,
                    y: pointer.pageY
                }
            }, Unipointer
        })
    }, {
        "ev-emitter": 13
    }]
}, {}, [9]);

